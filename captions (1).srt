1
00:00:00,000 --> 00:00:03,010
[Music]

2
00:00:03,199 --> 00:00:07,120
hello everyone

3
00:00:05,359 --> 00:00:09,759
let's get started with

4
00:00:07,120 --> 00:00:09,759
the course

5
00:00:14,639 --> 00:00:20,880
the goal of the course is to discuss

6
00:00:18,240 --> 00:00:24,000
what are the fundamental capabilities

7
00:00:20,880 --> 00:00:26,800
and the limitations of computers

8
00:00:24,000 --> 00:00:30,119
that is we want to know the limitations

9
00:00:26,800 --> 00:00:30,119
of computation

10
00:00:30,240 --> 00:00:36,320
in a mathematical way firstly we need to

11
00:00:32,640 --> 00:00:38,960
define what computation is

12
00:00:36,320 --> 00:00:41,120
but it is a very difficult and

13
00:00:38,960 --> 00:00:43,360
complicated problem

14
00:00:41,120 --> 00:00:44,559
i guess many scholars and the

15
00:00:43,360 --> 00:00:46,960
researchers

16
00:00:44,559 --> 00:00:48,719
have tried to do that but

17
00:00:46,960 --> 00:00:52,719
it seems that no one

18
00:00:48,719 --> 00:00:55,120
has successfully done the job

19
00:00:52,719 --> 00:00:56,480
then someone figured out another way to

20
00:00:55,120 --> 00:01:00,239
do it

21
00:00:56,480 --> 00:01:01,520
they defined computational models

22
00:01:00,239 --> 00:01:03,120
which are

23
00:01:01,520 --> 00:01:06,000
abstracts

24
00:01:03,120 --> 00:01:08,479
computational machines

25
00:01:06,000 --> 00:01:11,439
and of course those machines are not

26
00:01:08,479 --> 00:01:14,080
physical machines are not like

27
00:01:11,439 --> 00:01:15,280
something you can touch in the physical

28
00:01:14,080 --> 00:01:17,520
real world

29
00:01:15,280 --> 00:01:21,840
it's a it's in your

30
00:01:17,520 --> 00:01:24,400
thinking but it's an abstract machine

31
00:01:21,840 --> 00:01:27,920
then we discuss what this kind machine

32
00:01:24,400 --> 00:01:28,960
can do to discuss

33
00:01:27,920 --> 00:01:30,880
what

34
00:01:28,960 --> 00:01:34,560
is the

35
00:01:30,880 --> 00:01:38,240
capability and the limitation of

36
00:01:34,560 --> 00:01:38,240
computation and computers

37
00:01:38,720 --> 00:01:45,600
and also as i said last time

38
00:01:42,640 --> 00:01:46,799
i believe many of you are not familiar

39
00:01:45,600 --> 00:01:49,360
with

40
00:01:46,799 --> 00:01:50,560
doing axioms definitions

41
00:01:49,360 --> 00:01:51,759
and then

42
00:01:50,560 --> 00:01:54,880
discuss

43
00:01:51,759 --> 00:01:57,439
some theory in mathematical way

44
00:01:54,880 --> 00:02:00,000
so we start from the simplest

45
00:01:57,439 --> 00:02:02,479
computational models

46
00:02:00,000 --> 00:02:02,479
which is

47
00:02:05,920 --> 00:02:14,720
finite stem machine or final time term

48
00:02:10,239 --> 00:02:14,720
if you have taken course like a

49
00:02:15,440 --> 00:02:21,520
logical design or

50
00:02:18,080 --> 00:02:24,480
something like that you may

51
00:02:21,520 --> 00:02:24,480
have known the

52
00:02:25,040 --> 00:02:29,760
finite state machine

53
00:02:27,360 --> 00:02:32,239
it's very similar actually

54
00:02:29,760 --> 00:02:33,760
in a way it's identical

55
00:02:32,239 --> 00:02:35,200
but

56
00:02:33,760 --> 00:02:38,640
here

57
00:02:35,200 --> 00:02:41,280
we usually call it final content and use

58
00:02:38,640 --> 00:02:43,040
slightly different notations

59
00:02:41,280 --> 00:02:45,200
so what is

60
00:02:43,040 --> 00:02:49,280
a finite state machine or final

61
00:02:45,200 --> 00:02:51,360
temperature let's see an example

62
00:02:49,280 --> 00:02:54,319
so

63
00:02:51,360 --> 00:02:57,120
let's see the example on the textbook

64
00:02:54,319 --> 00:02:58,800
of automatic door

65
00:02:57,120 --> 00:03:00,000
if we want to

66
00:02:58,800 --> 00:03:04,159
describe

67
00:03:00,000 --> 00:03:06,400
the operations of an automatic door we

68
00:03:04,159 --> 00:03:06,400
may

69
00:03:06,560 --> 00:03:10,319
use this

70
00:03:07,840 --> 00:03:12,560
we may use we may describe

71
00:03:10,319 --> 00:03:13,440
automatic door this way the operations

72
00:03:12,560 --> 00:03:15,760
of

73
00:03:13,440 --> 00:03:16,720
an automatic door this way

74
00:03:15,760 --> 00:03:19,120
so

75
00:03:16,720 --> 00:03:19,920
first we simplify the whole situation

76
00:03:19,120 --> 00:03:21,040
that

77
00:03:19,920 --> 00:03:23,760
an

78
00:03:21,040 --> 00:03:24,879
automatic door has only two

79
00:03:23,760 --> 00:03:28,640
states

80
00:03:24,879 --> 00:03:30,080
one is that is closed the other

81
00:03:28,640 --> 00:03:33,080
is open

82
00:03:30,080 --> 00:03:33,080
okay

83
00:03:35,040 --> 00:03:37,440
when the door

84
00:03:36,400 --> 00:03:38,640
is

85
00:03:37,440 --> 00:03:41,280
closed

86
00:03:38,640 --> 00:03:43,120
when the door is closed

87
00:03:41,280 --> 00:03:44,319
something

88
00:03:43,120 --> 00:03:47,280
happened

89
00:03:44,319 --> 00:03:48,720
to trigger the transfer

90
00:03:47,280 --> 00:03:51,519
the transition

91
00:03:48,720 --> 00:03:51,519
of the state

92
00:03:51,599 --> 00:03:55,760
so we just need to

93
00:03:54,879 --> 00:03:59,120
uh

94
00:03:55,760 --> 00:04:01,280
describe how the state

95
00:03:59,120 --> 00:04:03,599
transit

96
00:04:01,280 --> 00:04:04,640
so for this example if the door is

97
00:04:03,599 --> 00:04:05,760
closed

98
00:04:04,640 --> 00:04:07,360
let's say

99
00:04:05,760 --> 00:04:10,480
someone

100
00:04:07,360 --> 00:04:11,760
stand in front of the door

101
00:04:10,480 --> 00:04:15,519
someone

102
00:04:11,760 --> 00:04:19,840
stands in front of the door

103
00:04:15,519 --> 00:04:19,840
the door becomes open

104
00:04:20,639 --> 00:04:24,639
right

105
00:04:21,440 --> 00:04:28,840
so you have a transition here

106
00:04:24,639 --> 00:04:28,840
from closed to open

107
00:04:29,440 --> 00:04:34,639
then if no one

108
00:04:31,280 --> 00:04:37,440
stands in front of the door or

109
00:04:34,639 --> 00:04:37,440
behind the door

110
00:04:37,759 --> 00:04:42,440
the door

111
00:04:39,440 --> 00:04:42,440
closed

112
00:04:43,520 --> 00:04:49,120
if the door is open no one

113
00:04:47,040 --> 00:04:50,080
is in front of the door or behind the

114
00:04:49,120 --> 00:04:51,520
door

115
00:04:50,080 --> 00:04:55,000
then

116
00:04:51,520 --> 00:04:55,000
it is closed

117
00:04:56,000 --> 00:05:00,000
we can use this kind of

118
00:05:02,000 --> 00:05:06,800
this kind of

119
00:05:03,600 --> 00:05:08,960
abstract abstract computational

120
00:05:06,800 --> 00:05:10,560
models to describe

121
00:05:08,960 --> 00:05:13,759
the operations

122
00:05:10,560 --> 00:05:15,440
of automatic doors

123
00:05:13,759 --> 00:05:19,520
and of course

124
00:05:15,440 --> 00:05:23,039
for this example the situation

125
00:05:19,520 --> 00:05:25,360
is highly simplified for example

126
00:05:23,039 --> 00:05:29,440
everyone everybody knows that

127
00:05:25,360 --> 00:05:32,000
an automatic door or a common door

128
00:05:29,440 --> 00:05:35,280
doesn't have only two states

129
00:05:32,000 --> 00:05:36,320
it may be closed it may be opened

130
00:05:35,280 --> 00:05:38,720
but

131
00:05:36,320 --> 00:05:40,400
it may be you know

132
00:05:38,720 --> 00:05:42,560
in between

133
00:05:40,400 --> 00:05:45,039
see every door is

134
00:05:42,560 --> 00:05:48,560
not either open or closed

135
00:05:45,039 --> 00:05:50,080
it may open a little bit or open not

136
00:05:48,560 --> 00:05:52,560
fully open

137
00:05:50,080 --> 00:05:54,639
right

138
00:05:52,560 --> 00:05:56,639
so it is

139
00:05:54,639 --> 00:05:59,440
only

140
00:05:56,639 --> 00:05:59,440
a description

141
00:06:00,000 --> 00:06:03,600
to the extent you want to describe

142
00:06:02,639 --> 00:06:04,479
something

143
00:06:03,600 --> 00:06:07,479
some

144
00:06:04,479 --> 00:06:07,479
operations

145
00:06:10,240 --> 00:06:14,639
and it is a

146
00:06:11,759 --> 00:06:16,960
it is an example attached to

147
00:06:14,639 --> 00:06:19,600
something in the real world

148
00:06:16,960 --> 00:06:20,400
then we try to abstract abstract the

149
00:06:19,600 --> 00:06:22,720
whole

150
00:06:20,400 --> 00:06:24,160
model the concept

151
00:06:22,720 --> 00:06:25,919
into something

152
00:06:24,160 --> 00:06:27,440
more

153
00:06:25,919 --> 00:06:28,400
yeah abstract

154
00:06:27,440 --> 00:06:29,919
so

155
00:06:28,400 --> 00:06:32,080
we can see

156
00:06:29,919 --> 00:06:34,800
here

157
00:06:32,080 --> 00:06:37,039
is an abstract

158
00:06:34,800 --> 00:06:41,520
model of the whole thing

159
00:06:37,039 --> 00:06:44,520
so it's a we call it a finite automata

160
00:06:41,520 --> 00:06:44,520
okay

161
00:06:49,280 --> 00:06:51,919
so

162
00:06:50,560 --> 00:06:53,199
how do we

163
00:06:51,919 --> 00:06:55,520
describe

164
00:06:53,199 --> 00:06:56,880
this kind of abstract

165
00:06:55,520 --> 00:06:59,360
computational

166
00:06:56,880 --> 00:06:59,360
machines

167
00:06:59,599 --> 00:07:04,800
in the mathematical language

168
00:07:02,400 --> 00:07:06,000
that's the problem here

169
00:07:04,800 --> 00:07:07,919
and

170
00:07:06,000 --> 00:07:09,520
we try to define

171
00:07:07,919 --> 00:07:11,280
finite automata

172
00:07:09,520 --> 00:07:13,919
this way

173
00:07:11,280 --> 00:07:13,919
we say that

174
00:07:14,800 --> 00:07:20,000
a finite automaton

175
00:07:17,120 --> 00:07:23,120
a finite a finite automaton

176
00:07:20,000 --> 00:07:23,120
is a five topple

177
00:07:23,599 --> 00:07:26,639
is a five tuple

178
00:07:26,960 --> 00:07:29,960
where

179
00:07:31,360 --> 00:07:33,599
q

180
00:07:34,800 --> 00:07:39,280
is a finite set called

181
00:07:37,759 --> 00:07:41,759
the state

182
00:07:39,280 --> 00:07:43,360
the state

183
00:07:41,759 --> 00:07:46,800
okay

184
00:07:43,360 --> 00:07:47,599
and the sigma is also a finite set

185
00:07:46,800 --> 00:07:50,479
and

186
00:07:47,599 --> 00:07:52,240
it is called the alphabet

187
00:07:50,479 --> 00:07:54,319
the alphabet

188
00:07:52,240 --> 00:07:55,840
then we go to the fourth

189
00:07:54,319 --> 00:07:57,440
item first

190
00:07:55,840 --> 00:07:58,879
within

191
00:07:57,440 --> 00:08:01,520
the states

192
00:07:58,879 --> 00:08:03,440
within the states there is a spatial

193
00:08:01,520 --> 00:08:05,280
state

194
00:08:03,440 --> 00:08:08,319
we call

195
00:08:05,280 --> 00:08:12,000
it star state

196
00:08:08,319 --> 00:08:13,360
by star state it means when the machine

197
00:08:12,000 --> 00:08:16,960
is booting up

198
00:08:13,360 --> 00:08:18,560
it will start from this state

199
00:08:16,960 --> 00:08:21,840
okay

200
00:08:18,560 --> 00:08:21,840
and then we think

201
00:08:22,319 --> 00:08:26,639
we see in the states

202
00:08:24,879 --> 00:08:29,280
within the states

203
00:08:26,639 --> 00:08:32,800
there are a subset

204
00:08:29,280 --> 00:08:36,320
they are a subset we call

205
00:08:32,800 --> 00:08:40,519
the state of accept state

206
00:08:36,320 --> 00:08:40,519
okay accept state

207
00:08:41,200 --> 00:08:45,600
in all times it is called

208
00:08:44,000 --> 00:08:48,800
final state

209
00:08:45,600 --> 00:08:51,360
okay final state that is why we usually

210
00:08:48,800 --> 00:08:54,959
use use f

211
00:08:51,360 --> 00:08:56,800
for accepted because

212
00:08:54,959 --> 00:08:58,720
this set

213
00:08:56,800 --> 00:09:00,160
was

214
00:08:58,720 --> 00:09:03,200
called

215
00:09:00,160 --> 00:09:04,959
final states

216
00:09:03,200 --> 00:09:07,360
okay so

217
00:09:04,959 --> 00:09:09,440
we have that means

218
00:09:07,360 --> 00:09:11,519
a finite automaton

219
00:09:09,440 --> 00:09:14,000
a finite time tone

220
00:09:11,519 --> 00:09:16,720
has five components

221
00:09:14,000 --> 00:09:18,240
as long as you define the five

222
00:09:16,720 --> 00:09:20,720
components

223
00:09:18,240 --> 00:09:24,399
you will define a finite element

224
00:09:20,720 --> 00:09:27,440
and what are the five components

225
00:09:24,399 --> 00:09:29,839
first you need to have a finite set of

226
00:09:27,440 --> 00:09:29,839
states

227
00:09:29,920 --> 00:09:37,839
and you need to have a finite set of

228
00:09:32,640 --> 00:09:40,480
symbols we call the symbol set alphabets

229
00:09:37,839 --> 00:09:42,000
then within the states there is a

230
00:09:40,480 --> 00:09:45,839
spatial state

231
00:09:42,000 --> 00:09:47,440
called star state and a subset of the

232
00:09:45,839 --> 00:09:49,200
states we call

233
00:09:47,440 --> 00:09:50,399
accept states

234
00:09:49,200 --> 00:09:52,000
okay

235
00:09:50,399 --> 00:09:54,720
and then

236
00:09:52,000 --> 00:09:56,720
the third component

237
00:09:54,720 --> 00:09:59,360
is a function

238
00:09:56,720 --> 00:10:02,240
what function

239
00:09:59,360 --> 00:10:02,240
it will map

240
00:10:02,959 --> 00:10:05,519
state

241
00:10:04,480 --> 00:10:07,040
with

242
00:10:05,519 --> 00:10:08,079
symbol

243
00:10:07,040 --> 00:10:09,519
to

244
00:10:08,079 --> 00:10:10,800
some states

245
00:10:09,519 --> 00:10:12,640
we call it

246
00:10:10,800 --> 00:10:16,160
transition function

247
00:10:12,640 --> 00:10:16,160
we call it transition function

248
00:10:16,839 --> 00:10:21,200
and uh

249
00:10:18,959 --> 00:10:23,519
well i personally think

250
00:10:21,200 --> 00:10:24,959
transition function is

251
00:10:23,519 --> 00:10:27,440
more

252
00:10:24,959 --> 00:10:29,760
more similar to you know

253
00:10:27,440 --> 00:10:32,000
the operations

254
00:10:29,760 --> 00:10:33,040
of a program

255
00:10:32,000 --> 00:10:35,760
okay

256
00:10:33,040 --> 00:10:38,560
so you also can think about the whole

257
00:10:35,760 --> 00:10:42,240
final tom turn is a computation machine

258
00:10:38,560 --> 00:10:45,120
doing something and the behavior

259
00:10:42,240 --> 00:10:47,920
is mostly described

260
00:10:45,120 --> 00:10:50,640
by transition functions

261
00:10:47,920 --> 00:10:52,000
and other things like states and

262
00:10:50,640 --> 00:10:54,320
alphabets

263
00:10:52,000 --> 00:10:57,040
they are kind of support

264
00:10:54,320 --> 00:10:59,440
uh they are kind of supporting material

265
00:10:57,040 --> 00:11:01,839
to transition functions

266
00:10:59,440 --> 00:11:05,120
something like that but it's my personal

267
00:11:01,839 --> 00:11:07,279
opinion you don't need to

268
00:11:05,120 --> 00:11:08,720
believe it okay

269
00:11:07,279 --> 00:11:11,040
so

270
00:11:08,720 --> 00:11:12,480
let's see

271
00:11:11,040 --> 00:11:13,680
the example

272
00:11:12,480 --> 00:11:15,519
using the

273
00:11:13,680 --> 00:11:17,760
formal description

274
00:11:15,519 --> 00:11:20,959
okay

275
00:11:17,760 --> 00:11:20,959
so m1 here

276
00:11:23,440 --> 00:11:30,480
figure 1.6 and one here

277
00:11:26,560 --> 00:11:32,800
is an example of final automaton

278
00:11:30,480 --> 00:11:36,000
if we want of course we can use the

279
00:11:32,800 --> 00:11:38,959
figure easily visualize the

280
00:11:36,000 --> 00:11:40,000
conceptual machine abstract machine

281
00:11:38,959 --> 00:11:43,040
but

282
00:11:40,000 --> 00:11:45,360
in mathematics we need to describe it

283
00:11:43,040 --> 00:11:48,000
formally and how to do it

284
00:11:45,360 --> 00:11:50,639
how to do the description

285
00:11:48,000 --> 00:11:53,839
we say that m1

286
00:11:50,639 --> 00:11:53,839
is a finite automaton

287
00:11:54,399 --> 00:11:58,000
then we need to describe the five

288
00:11:56,800 --> 00:11:59,279
components

289
00:11:58,000 --> 00:12:02,560
first one

290
00:11:59,279 --> 00:12:04,320
we say that n1 states is q

291
00:12:02,560 --> 00:12:05,839
okay what is q

292
00:12:04,320 --> 00:12:07,600
in this case

293
00:12:05,839 --> 00:12:08,839
q

294
00:12:07,600 --> 00:12:11,040
has three

295
00:12:08,839 --> 00:12:13,440
members q1

296
00:12:11,040 --> 00:12:15,600
q2 q3

297
00:12:13,440 --> 00:12:18,800
all right so we need to

298
00:12:15,600 --> 00:12:22,160
clearly precisely describe

299
00:12:18,800 --> 00:12:25,519
what are in the set

300
00:12:22,160 --> 00:12:26,480
then alphabet

301
00:12:25,519 --> 00:12:30,079
sigma

302
00:12:26,480 --> 00:12:32,720
what is sigma in this case

303
00:12:30,079 --> 00:12:34,000
the sigma in this case has two

304
00:12:32,720 --> 00:12:37,040
symbols

305
00:12:34,000 --> 00:12:39,120
zero and one

306
00:12:37,040 --> 00:12:43,440
okay

307
00:12:39,120 --> 00:12:43,440
but don't be confused

308
00:12:44,639 --> 00:12:54,480
by using 0 and 1 here the 0 here is not

309
00:12:51,040 --> 00:12:58,959
it's not the zero in integers or values

310
00:12:54,480 --> 00:13:02,079
or numbers or whatever you think it is

311
00:12:58,959 --> 00:13:04,399
zero here is just a symbol

312
00:13:02,079 --> 00:13:07,680
there is no spatial meaning of it

313
00:13:04,399 --> 00:13:10,560
we just use two different symbol and we

314
00:13:07,680 --> 00:13:13,279
say that okay sigma process two kinds of

315
00:13:10,560 --> 00:13:14,160
symbols one we use zero

316
00:13:13,279 --> 00:13:16,800
to know

317
00:13:14,160 --> 00:13:20,959
to denote it and the other one we use

318
00:13:16,800 --> 00:13:23,360
one to denote it so the one

319
00:13:20,959 --> 00:13:26,320
and zero here

320
00:13:23,360 --> 00:13:29,519
are not integer one

321
00:13:26,320 --> 00:13:30,639
and integer zero okay

322
00:13:29,519 --> 00:13:32,880
then

323
00:13:30,639 --> 00:13:33,920
we say that

324
00:13:32,880 --> 00:13:35,600
we within

325
00:13:33,920 --> 00:13:37,120
our states

326
00:13:35,600 --> 00:13:39,040
q1

327
00:13:37,120 --> 00:13:39,920
is the star state

328
00:13:39,040 --> 00:13:41,040
okay

329
00:13:39,920 --> 00:13:43,440
so

330
00:13:41,040 --> 00:13:47,040
when you put up the machine the machine

331
00:13:43,440 --> 00:13:49,920
operates from q1

332
00:13:47,040 --> 00:13:53,040
so q1 is the start state

333
00:13:49,920 --> 00:13:54,480
and we need to also need to specify

334
00:13:53,040 --> 00:13:56,320
accept states

335
00:13:54,480 --> 00:13:58,959
so we say that

336
00:13:56,320 --> 00:14:02,399
the set

337
00:13:58,959 --> 00:14:05,120
okay accept states are a set a subset

338
00:14:02,399 --> 00:14:08,399
of q it's not only one state of course

339
00:14:05,120 --> 00:14:10,639
in this in this example

340
00:14:08,399 --> 00:14:12,399
we have only q2

341
00:14:10,639 --> 00:14:14,560
as

342
00:14:12,399 --> 00:14:17,279
an accepted but

343
00:14:14,560 --> 00:14:20,560
you can have more or you can have zero

344
00:14:17,279 --> 00:14:23,040
state okay so it's a subset anyway so in

345
00:14:20,560 --> 00:14:23,040
this case

346
00:14:24,320 --> 00:14:30,480
our accept state

347
00:14:26,000 --> 00:14:32,720
has one main one member only which is q2

348
00:14:30,480 --> 00:14:34,320
okay so we have described

349
00:14:32,720 --> 00:14:37,279
four

350
00:14:34,320 --> 00:14:38,560
components of m1

351
00:14:37,279 --> 00:14:42,560
and then

352
00:14:38,560 --> 00:14:42,560
delta the transition function

353
00:14:42,639 --> 00:14:46,560
we need to describe the transition

354
00:14:44,160 --> 00:14:48,399
function which actually the operates of

355
00:14:46,560 --> 00:14:50,160
the whole machine

356
00:14:48,399 --> 00:14:50,959
so transition function

357
00:14:50,160 --> 00:14:54,399
in

358
00:14:50,959 --> 00:14:55,839
final automata we described here

359
00:14:54,399 --> 00:14:59,839
must be

360
00:14:55,839 --> 00:15:01,600
fully defined that means you we must

361
00:14:59,839 --> 00:15:03,680
describe that

362
00:15:01,600 --> 00:15:07,279
when the machine is

363
00:15:03,680 --> 00:15:08,560
on the state q1

364
00:15:07,279 --> 00:15:10,880
and

365
00:15:08,560 --> 00:15:12,959
zero happened

366
00:15:10,880 --> 00:15:15,040
where it goes

367
00:15:12,959 --> 00:15:16,880
so in this case we design the machine to

368
00:15:15,040 --> 00:15:17,760
go q1

369
00:15:16,880 --> 00:15:18,959
okay

370
00:15:17,760 --> 00:15:21,760
so that's

371
00:15:18,959 --> 00:15:24,720
this transition

372
00:15:21,760 --> 00:15:28,000
when zero happens

373
00:15:24,720 --> 00:15:31,759
q the machine if the machine is on q1

374
00:15:28,000 --> 00:15:31,759
goes back to q1

375
00:15:31,839 --> 00:15:35,839
and if one happens

376
00:15:36,560 --> 00:15:41,759
then it goes to q2

377
00:15:39,199 --> 00:15:43,120
so if 1 happen

378
00:15:41,759 --> 00:15:44,399
it goes to

379
00:15:43,120 --> 00:15:46,320
q2

380
00:15:44,399 --> 00:15:48,880
okay

381
00:15:46,320 --> 00:15:50,399
and when the machine is on

382
00:15:48,880 --> 00:15:54,160
q2

383
00:15:50,399 --> 00:15:57,759
when 0 happens goes to q3 so when zero

384
00:15:54,160 --> 00:16:01,519
happens goes to q3

385
00:15:57,759 --> 00:16:05,279
and when one happens goes back to q2 so

386
00:16:01,519 --> 00:16:07,360
when one happens goes back to q2

387
00:16:05,279 --> 00:16:08,480
when the machine is on q3

388
00:16:07,360 --> 00:16:11,920
no matter

389
00:16:08,480 --> 00:16:14,800
0 or 1 it goes to q2

390
00:16:11,920 --> 00:16:16,959
so we have 2 transition 1

391
00:16:14,800 --> 00:16:18,800
0 and 1

392
00:16:16,959 --> 00:16:20,240
1

393
00:16:18,800 --> 00:16:24,399
okay

394
00:16:20,240 --> 00:16:24,399
so you can see that

395
00:16:24,720 --> 00:16:30,560
m1 the machine m1 here the machine m1

396
00:16:28,320 --> 00:16:30,560
here

397
00:16:32,079 --> 00:16:37,519
must be

398
00:16:33,519 --> 00:16:39,839
formally described

399
00:16:37,519 --> 00:16:39,839
by

400
00:16:39,920 --> 00:16:44,079
the formal description

401
00:16:42,399 --> 00:16:45,680
and of course

402
00:16:44,079 --> 00:16:50,040
we can use

403
00:16:45,680 --> 00:16:50,040
the visualization here

404
00:16:50,639 --> 00:16:55,440
more easily into into it

405
00:16:55,519 --> 00:16:58,720
intuitively

406
00:16:57,199 --> 00:17:01,360
describe the machine

407
00:16:58,720 --> 00:17:05,360
but let me remind you that

408
00:17:01,360 --> 00:17:06,959
the visualization here is not formal

409
00:17:05,360 --> 00:17:09,360
it's informal

410
00:17:06,959 --> 00:17:12,880
so when you are in

411
00:17:09,360 --> 00:17:12,880
let's say examination

412
00:17:14,000 --> 00:17:16,959
you cannot

413
00:17:15,360 --> 00:17:18,559
use a figure

414
00:17:16,959 --> 00:17:20,000
or a diagram

415
00:17:18,559 --> 00:17:22,240
as your answer

416
00:17:20,000 --> 00:17:23,600
you can use it as

417
00:17:22,240 --> 00:17:25,760
assist

418
00:17:23,600 --> 00:17:25,760
us

419
00:17:26,720 --> 00:17:30,799
you can use it to assist

420
00:17:31,120 --> 00:17:34,400
to

421
00:17:33,120 --> 00:17:36,400
describe

422
00:17:34,400 --> 00:17:39,679
your answer but

423
00:17:36,400 --> 00:17:39,679
formal description

424
00:17:40,240 --> 00:17:44,160
is the only thing we accept as the

425
00:17:42,960 --> 00:17:45,039
answer

426
00:17:44,160 --> 00:17:47,200
okay

427
00:17:45,039 --> 00:17:50,559
so you cannot just draw some diagram and

428
00:17:47,200 --> 00:17:53,919
say that okay i i have already answered

429
00:17:50,559 --> 00:17:56,880
the question no we don't accept that you

430
00:17:53,919 --> 00:17:59,600
have to describe it formally because

431
00:17:56,880 --> 00:18:00,400
that's the mathematical way

432
00:17:59,600 --> 00:18:02,320
okay

433
00:18:00,400 --> 00:18:04,640
or that's what

434
00:18:02,320 --> 00:18:05,840
we want you to

435
00:18:04,640 --> 00:18:08,799
practice

436
00:18:05,840 --> 00:18:10,320
that's very important because

437
00:18:08,799 --> 00:18:12,160
if you

438
00:18:10,320 --> 00:18:13,440
you can actually draw a pretty good

439
00:18:12,160 --> 00:18:14,799
diagram

440
00:18:13,440 --> 00:18:18,320
but

441
00:18:14,799 --> 00:18:21,360
drawing diagram itself

442
00:18:18,320 --> 00:18:21,360
might not be so

443
00:18:22,559 --> 00:18:27,440
accurate or precise

444
00:18:25,039 --> 00:18:27,760
we need to

445
00:18:27,440 --> 00:18:29,679
form do

446
00:18:27,760 --> 00:18:32,080
description

447
00:18:29,679 --> 00:18:33,440
to make the whole thing

448
00:18:32,080 --> 00:18:35,600
more precise

449
00:18:33,440 --> 00:18:38,559
more accurate

450
00:18:35,600 --> 00:18:42,200
so that's practice okay

451
00:18:38,559 --> 00:18:42,200
so that's the

452
00:18:43,200 --> 00:18:47,280
definition of finite automata

453
00:18:50,640 --> 00:18:53,679
now we have

454
00:18:54,840 --> 00:19:00,880
uh finite automata defined

455
00:18:57,919 --> 00:19:02,400
this way so that means

456
00:19:00,880 --> 00:19:04,160
whenever

457
00:19:02,400 --> 00:19:06,160
you define some

458
00:19:04,160 --> 00:19:09,600
five tuple

459
00:19:06,160 --> 00:19:11,679
with these let's say

460
00:19:09,600 --> 00:19:15,520
specification

461
00:19:11,679 --> 00:19:17,840
as long as you define something

462
00:19:15,520 --> 00:19:20,000
followed this kind

463
00:19:17,840 --> 00:19:21,520
following this kind of description we

464
00:19:20,000 --> 00:19:24,320
can say that

465
00:19:21,520 --> 00:19:26,080
that thing you defined is a finite time

466
00:19:24,320 --> 00:19:28,400
term

467
00:19:26,080 --> 00:19:28,400
okay

468
00:19:31,919 --> 00:19:35,679
then we have a finite time time like

469
00:19:34,880 --> 00:19:38,480
this

470
00:19:35,679 --> 00:19:40,480
the problem is the problem is

471
00:19:38,480 --> 00:19:42,400
we say that it is a computational

472
00:19:40,480 --> 00:19:43,679
machine and

473
00:19:42,400 --> 00:19:45,600
how

474
00:19:43,679 --> 00:19:47,520
and we also know that the transition

475
00:19:45,600 --> 00:19:51,280
function is like this when the machine

476
00:19:47,520 --> 00:19:52,480
is on q2 and c1 goes to q2

477
00:19:51,280 --> 00:19:53,360
fine

478
00:19:52,480 --> 00:19:54,960
then

479
00:19:53,360 --> 00:19:58,080
how

480
00:19:54,960 --> 00:20:00,240
does it compute and

481
00:19:58,080 --> 00:20:02,240
what

482
00:20:00,240 --> 00:20:03,039
does it do

483
00:20:02,240 --> 00:20:06,240
okay

484
00:20:03,039 --> 00:20:08,320
so let me also use a

485
00:20:06,240 --> 00:20:09,600
informal example first

486
00:20:08,320 --> 00:20:12,320
to describe

487
00:20:09,600 --> 00:20:14,240
how the machine operates

488
00:20:12,320 --> 00:20:16,320
and what

489
00:20:14,240 --> 00:20:18,480
are this kind of machine

490
00:20:16,320 --> 00:20:18,480
do

491
00:20:18,840 --> 00:20:22,320
so

492
00:20:20,640 --> 00:20:25,600
we have

493
00:20:22,320 --> 00:20:27,520
two symbols for this example m1 we have

494
00:20:25,600 --> 00:20:30,400
two symbols

495
00:20:27,520 --> 00:20:32,880
in the alphabet one is

496
00:20:30,400 --> 00:20:35,679
zero and the other is one

497
00:20:32,880 --> 00:20:41,280
and let me remind you again the 1 here

498
00:20:35,679 --> 00:20:41,280
and the 0 here are not integers 1 and 0.

499
00:20:45,679 --> 00:20:50,480
okay so imagine that you have a

500
00:20:48,480 --> 00:20:53,840
zero one strings

501
00:20:50,480 --> 00:20:56,000
uh sorry you have some zero one strings

502
00:20:53,840 --> 00:20:57,280
uh that has example

503
00:20:56,000 --> 00:20:58,880
here

504
00:20:57,280 --> 00:21:00,240
one

505
00:20:58,880 --> 00:21:06,159
uh

506
00:21:00,240 --> 00:21:07,039
zero one one zero zero one

507
00:21:06,159 --> 00:21:08,799
okay

508
00:21:07,039 --> 00:21:11,200
suppose you have one

509
00:21:08,799 --> 00:21:12,799
string like this one

510
00:21:11,200 --> 00:21:15,360
zero one one

511
00:21:12,799 --> 00:21:18,720
zero zero one

512
00:21:15,360 --> 00:21:20,480
so how m1 operates

513
00:21:18,720 --> 00:21:23,919
imagine that

514
00:21:20,480 --> 00:21:24,880
you turn on the power so the machine is

515
00:21:23,919 --> 00:21:27,679
at

516
00:21:24,880 --> 00:21:31,360
is on q1

517
00:21:27,679 --> 00:21:34,559
right because q1 is the start state

518
00:21:31,360 --> 00:21:38,000
then imagine that you are i don't know

519
00:21:34,559 --> 00:21:38,000
playing video games or

520
00:21:38,080 --> 00:21:42,840
some gambling games

521
00:21:41,280 --> 00:21:47,440
you have two kinds of

522
00:21:42,840 --> 00:21:50,559
tokens one kind of token is zero and the

523
00:21:47,440 --> 00:21:52,159
other the other is one

524
00:21:50,559 --> 00:21:54,799
then imagine that

525
00:21:52,159 --> 00:21:57,919
you put the token

526
00:21:54,799 --> 00:21:59,039
into the string sorry into the machine

527
00:21:57,919 --> 00:22:00,000
okay

528
00:21:59,039 --> 00:22:01,919
so

529
00:22:00,000 --> 00:22:03,440
when you

530
00:22:01,919 --> 00:22:05,440
put in one

531
00:22:03,440 --> 00:22:06,400
sorry zero

532
00:22:05,440 --> 00:22:08,400
then

533
00:22:06,400 --> 00:22:10,480
the machine will go

534
00:22:08,400 --> 00:22:14,799
well goes from q1

535
00:22:10,480 --> 00:22:16,320
okay 0 right back to q1

536
00:22:14,799 --> 00:22:18,080
so

537
00:22:16,320 --> 00:22:21,840
q1

538
00:22:18,080 --> 00:22:24,640
the start state and you put 0 here

539
00:22:21,840 --> 00:22:25,600
and goes to q1

540
00:22:24,640 --> 00:22:28,240
right

541
00:22:25,600 --> 00:22:30,960
then you put one

542
00:22:28,240 --> 00:22:32,960
so follow this transition the machine

543
00:22:30,960 --> 00:22:38,080
goes to q2

544
00:22:32,960 --> 00:22:41,039
so you put in one machine goes to q2

545
00:22:38,080 --> 00:22:42,320
then you put one machine

546
00:22:41,039 --> 00:22:45,200
stays

547
00:22:42,320 --> 00:22:45,200
on q2

548
00:22:46,480 --> 00:22:50,799
okay

549
00:22:47,600 --> 00:22:55,480
then you put in zero

550
00:22:50,799 --> 00:22:55,480
the machine goes to q3

551
00:22:57,919 --> 00:23:03,760
right

552
00:22:58,960 --> 00:23:08,280
then you put 0 again so machine goes to

553
00:23:03,760 --> 00:23:08,280
q2 right this one

554
00:23:08,400 --> 00:23:11,039
and then

555
00:23:12,640 --> 00:23:17,520
you put one

556
00:23:14,480 --> 00:23:19,679
into the machine

557
00:23:17,520 --> 00:23:21,840
again so one

558
00:23:19,679 --> 00:23:23,280
q

559
00:23:21,840 --> 00:23:26,080
okay

560
00:23:23,280 --> 00:23:28,320
so i guess it's pretty easy pretty

561
00:23:26,080 --> 00:23:30,320
straightforward

562
00:23:28,320 --> 00:23:33,280
to trace

563
00:23:30,320 --> 00:23:38,080
one step uh step by step

564
00:23:33,280 --> 00:23:38,080
of the operations of the machine right

565
00:23:38,559 --> 00:23:44,159
any question on that i think it should

566
00:23:41,679 --> 00:23:45,120
be pretty straightforward

567
00:23:44,159 --> 00:23:47,039
okay

568
00:23:45,120 --> 00:23:49,760
so after

569
00:23:47,039 --> 00:23:53,600
okay the most important point one of the

570
00:23:49,760 --> 00:23:58,480
most important point here is after

571
00:23:53,600 --> 00:23:59,840
after you put in all your token

572
00:23:58,480 --> 00:24:02,640
that means

573
00:23:59,840 --> 00:24:02,640
if we treat

574
00:24:03,120 --> 00:24:08,159
this as a string

575
00:24:05,679 --> 00:24:08,159
after

576
00:24:08,559 --> 00:24:14,159
each

577
00:24:09,760 --> 00:24:18,320
character or symbols of the string

578
00:24:14,159 --> 00:24:21,520
has been consumed by the machine now you

579
00:24:18,320 --> 00:24:23,039
don't have a string right it's

580
00:24:21,520 --> 00:24:26,240
all gone

581
00:24:23,039 --> 00:24:29,120
then you see we check

582
00:24:26,240 --> 00:24:29,120
what state

583
00:24:30,000 --> 00:24:32,480
the

584
00:24:30,840 --> 00:24:33,840
machine

585
00:24:32,480 --> 00:24:36,320
stop

586
00:24:33,840 --> 00:24:37,919
starving so in this case

587
00:24:36,320 --> 00:24:39,600
after the machine

588
00:24:37,919 --> 00:24:41,279
consumes

589
00:24:39,600 --> 00:24:45,799
0 1 1

590
00:24:41,279 --> 00:24:45,799
0 0 1 so

591
00:24:46,240 --> 00:24:49,840
zero

592
00:24:48,080 --> 00:24:51,200
one

593
00:24:49,840 --> 00:24:52,559
one

594
00:24:51,200 --> 00:24:53,840
zero

595
00:24:52,559 --> 00:24:55,360
zero

596
00:24:53,840 --> 00:24:58,159
one

597
00:24:55,360 --> 00:25:00,480
the machine the machine finally

598
00:24:58,159 --> 00:25:02,960
stops on q2

599
00:25:00,480 --> 00:25:05,840
then we check

600
00:25:02,960 --> 00:25:11,039
if q2

601
00:25:05,840 --> 00:25:11,039
is a member of the accept state

602
00:25:12,000 --> 00:25:16,960
if

603
00:25:12,840 --> 00:25:16,960
yes in this example

604
00:25:17,440 --> 00:25:20,480
yes

605
00:25:18,240 --> 00:25:22,320
right

606
00:25:20,480 --> 00:25:23,279
since the

607
00:25:22,320 --> 00:25:24,799
5

608
00:25:23,279 --> 00:25:27,840
since q2

609
00:25:24,799 --> 00:25:30,400
is a machine of the accept states

610
00:25:27,840 --> 00:25:30,400
defined

611
00:25:30,559 --> 00:25:34,159
in the machine

612
00:25:32,799 --> 00:25:35,360
we say that

613
00:25:34,159 --> 00:25:38,960
the machine

614
00:25:35,360 --> 00:25:38,960
accepts the string

615
00:25:39,279 --> 00:25:45,840
0 1 1 zero zero one

616
00:25:43,600 --> 00:25:45,840
okay

617
00:25:49,919 --> 00:25:54,000
so

618
00:25:50,799 --> 00:25:54,000
for this example if

619
00:25:54,840 --> 00:25:59,919
our input string is not

620
00:25:58,799 --> 00:26:02,000
0

621
00:25:59,919 --> 00:26:05,120
1 1 0 0 1

622
00:26:02,000 --> 00:26:06,080
if our input machine is

623
00:26:05,120 --> 00:26:09,600
0

624
00:26:06,080 --> 00:26:10,480
1 1 0

625
00:26:09,600 --> 00:26:12,640
then

626
00:26:10,480 --> 00:26:14,000
the machine will stop

627
00:26:12,640 --> 00:26:15,679
on

628
00:26:14,000 --> 00:26:17,760
q3

629
00:26:15,679 --> 00:26:19,600
right

630
00:26:17,760 --> 00:26:22,880
so if does

631
00:26:19,600 --> 00:26:24,880
machine stop on q3

632
00:26:22,880 --> 00:26:26,159
and in this case

633
00:26:24,880 --> 00:26:29,039
q3

634
00:26:26,159 --> 00:26:31,360
is not a member of

635
00:26:29,039 --> 00:26:33,200
accept state

636
00:26:31,360 --> 00:26:34,720
we say that

637
00:26:33,200 --> 00:26:36,480
this

638
00:26:34,720 --> 00:26:39,760
machine

639
00:26:36,480 --> 00:26:43,679
does not accept

640
00:26:39,760 --> 00:26:43,679
0 0 1 1 0

641
00:26:44,559 --> 00:26:46,880
okay

642
00:26:45,520 --> 00:26:51,320
so you can

643
00:26:46,880 --> 00:26:51,320
think of the machine as a

644
00:26:53,919 --> 00:26:57,360
as

645
00:26:54,720 --> 00:26:58,720
some string processing pro string

646
00:26:57,360 --> 00:27:01,039
processor

647
00:26:58,720 --> 00:27:04,000
so you input a string and

648
00:27:01,039 --> 00:27:07,120
it either accept the string or not

649
00:27:04,000 --> 00:27:09,360
accept a string

650
00:27:07,120 --> 00:27:09,360
okay

651
00:27:12,320 --> 00:27:15,520
so let's say

652
00:27:15,679 --> 00:27:18,080
when you

653
00:27:18,240 --> 00:27:22,799
when the five components are different

654
00:27:20,640 --> 00:27:23,679
they are different machines

655
00:27:22,799 --> 00:27:28,720
okay

656
00:27:23,679 --> 00:27:28,720
so we can see that we have m1 this way

657
00:27:29,279 --> 00:27:35,360
and imagine that

658
00:27:31,039 --> 00:27:37,360
we have some other machine m1 prime

659
00:27:35,360 --> 00:27:38,720
and

660
00:27:37,360 --> 00:27:39,840
everything

661
00:27:38,720 --> 00:27:41,440
is

662
00:27:39,840 --> 00:27:44,480
identical

663
00:27:41,440 --> 00:27:44,480
as m1

664
00:27:46,240 --> 00:27:51,440
but

665
00:27:47,600 --> 00:27:53,840
the accept states of m1 prime is

666
00:27:51,440 --> 00:27:57,279
let's say q2

667
00:27:53,840 --> 00:27:57,279
and q3

668
00:27:57,360 --> 00:28:00,799
okay

669
00:27:58,240 --> 00:28:03,440
so is m1 prime

670
00:28:00,799 --> 00:28:05,360
a legal finite automaton

671
00:28:03,440 --> 00:28:06,720
yes it is

672
00:28:05,360 --> 00:28:09,039
but uh

673
00:28:06,720 --> 00:28:12,000
sorry and apparently m1 prime is

674
00:28:09,039 --> 00:28:13,360
different from m1 why because you can

675
00:28:12,000 --> 00:28:16,559
check that

676
00:28:13,360 --> 00:28:19,760
m1 prime of course also accept

677
00:28:16,559 --> 00:28:24,720
0 1 1 0 0 1

678
00:28:19,760 --> 00:28:25,840
and it also accepts 0 1 1 0 right

679
00:28:24,720 --> 00:28:27,919
because

680
00:28:25,840 --> 00:28:31,039
q 3

681
00:28:27,919 --> 00:28:33,760
is a member of m1 primes

682
00:28:31,039 --> 00:28:33,760
accept states

683
00:28:34,080 --> 00:28:42,399
so i used to be asked by uh

684
00:28:38,399 --> 00:28:45,360
students when we talk about this

685
00:28:42,399 --> 00:28:48,799
they they usually ask that uh can i have

686
00:28:45,360 --> 00:28:52,799
q1 also in

687
00:28:48,799 --> 00:28:53,760
uh the accept states can i have more

688
00:28:52,799 --> 00:28:56,640
states

689
00:28:53,760 --> 00:29:00,159
the answer are oh yes because

690
00:28:56,640 --> 00:29:02,080
as long as you have uh you clearly

691
00:29:00,159 --> 00:29:05,919
formally defined

692
00:29:02,080 --> 00:29:07,360
a machine's five components it becomes

693
00:29:05,919 --> 00:29:08,799
uh

694
00:29:07,360 --> 00:29:10,559
it's

695
00:29:08,799 --> 00:29:13,520
it is considered

696
00:29:10,559 --> 00:29:15,200
a legal final terminal

697
00:29:13,520 --> 00:29:17,440
and the different

698
00:29:15,200 --> 00:29:21,360
uh difference in any

699
00:29:17,440 --> 00:29:23,600
five uh in any of the five components

700
00:29:21,360 --> 00:29:26,799
they are different machines so of course

701
00:29:23,600 --> 00:29:28,960
you can have one more two more

702
00:29:26,799 --> 00:29:31,840
states in the finite states

703
00:29:28,960 --> 00:29:34,320
in the final stage in the accept states

704
00:29:31,840 --> 00:29:36,159
that you own only that you are getting

705
00:29:34,320 --> 00:29:37,279
different machines

706
00:29:36,159 --> 00:29:41,039
okay

707
00:29:37,279 --> 00:29:44,320
like you have a computer and you change

708
00:29:41,039 --> 00:29:46,960
you change the cpu then it becomes

709
00:29:44,320 --> 00:29:48,399
another computer they are all computers

710
00:29:46,960 --> 00:29:51,399
something like this

711
00:29:48,399 --> 00:29:51,399
okay

712
00:29:55,200 --> 00:30:01,120
so if you

713
00:29:57,919 --> 00:30:02,559
uh if if you want you can check more

714
00:30:01,120 --> 00:30:04,559
strings

715
00:30:02,559 --> 00:30:06,000
something like if uh

716
00:30:04,559 --> 00:30:10,720
we can also have

717
00:30:06,000 --> 00:30:15,200
like one one zero zero sorry

718
00:30:10,720 --> 00:30:16,080
one one zero zero one zero one one one

719
00:30:15,200 --> 00:30:18,080
okay

720
00:30:16,080 --> 00:30:20,080
so it's pretty straightforward that's

721
00:30:18,080 --> 00:30:21,360
putting the machine

722
00:30:20,080 --> 00:30:22,799
one

723
00:30:21,360 --> 00:30:24,080
one

724
00:30:22,799 --> 00:30:25,840
zero

725
00:30:24,080 --> 00:30:27,120
zero

726
00:30:25,840 --> 00:30:28,320
one

727
00:30:27,120 --> 00:30:29,279
zero

728
00:30:28,320 --> 00:30:30,720
one

729
00:30:29,279 --> 00:30:33,679
one

730
00:30:30,720 --> 00:30:35,039
one okay so the machine accepted

731
00:30:33,679 --> 00:30:37,840
something like that

732
00:30:35,039 --> 00:30:37,840
okay

733
00:30:39,919 --> 00:30:44,320
now

734
00:30:41,360 --> 00:30:46,559
what we want to know is

735
00:30:44,320 --> 00:30:50,039
how do we formally

736
00:30:46,559 --> 00:30:50,039
how do we formally

737
00:30:50,240 --> 00:30:55,679
define what i just described

738
00:30:53,440 --> 00:30:55,679
right

739
00:31:00,000 --> 00:31:04,120
how do we formally do that

740
00:31:04,799 --> 00:31:07,919
and

741
00:31:06,000 --> 00:31:09,360
it's also pretty easy

742
00:31:07,919 --> 00:31:11,600
although

743
00:31:09,360 --> 00:31:11,600
as

744
00:31:11,679 --> 00:31:14,640
uh

745
00:31:13,519 --> 00:31:17,360
as

746
00:31:14,640 --> 00:31:19,279
regular common people like me we don't

747
00:31:17,360 --> 00:31:21,919
usually talk

748
00:31:19,279 --> 00:31:24,559
we don't usually speak or talk about

749
00:31:21,919 --> 00:31:29,120
things in this way but

750
00:31:24,559 --> 00:31:29,120
formally we define what i just described

751
00:31:30,159 --> 00:31:35,840
in this way that

752
00:31:33,120 --> 00:31:38,159
finite automaton m

753
00:31:35,840 --> 00:31:38,159
sorry

754
00:31:39,840 --> 00:31:45,039
final automaton m

755
00:31:42,320 --> 00:31:46,399
since we said that a final terminal has

756
00:31:45,039 --> 00:31:49,840
five tuple

757
00:31:46,399 --> 00:31:51,279
right so final time term m is like this

758
00:31:49,840 --> 00:31:55,760
one

759
00:31:51,279 --> 00:32:00,279
we say that it accepts string w

760
00:31:55,760 --> 00:32:00,279
and a string is a

761
00:32:01,600 --> 00:32:05,760
sequence of the symbol from

762
00:32:04,640 --> 00:32:09,279
alphabet

763
00:32:05,760 --> 00:32:10,559
okay so in this case

764
00:32:09,279 --> 00:32:13,760
w

765
00:32:10,559 --> 00:32:15,120
is w1 w2

766
00:32:13,760 --> 00:32:17,919
3

767
00:32:15,120 --> 00:32:20,240
to w n and

768
00:32:17,919 --> 00:32:21,679
each w i is

769
00:32:20,240 --> 00:32:23,120
in

770
00:32:21,679 --> 00:32:26,120
the alphabet

771
00:32:23,120 --> 00:32:26,120
okay

772
00:32:31,600 --> 00:32:35,000
oh sorry

773
00:32:45,600 --> 00:32:52,320
we say m accept string w

774
00:32:48,480 --> 00:32:52,320
if a sequence of states

775
00:32:53,039 --> 00:32:58,880
r 0 r 1 to r n see

776
00:32:57,440 --> 00:33:01,440
you have a

777
00:32:58,880 --> 00:33:03,679
string length

778
00:33:01,440 --> 00:33:03,679
and

779
00:33:04,320 --> 00:33:09,840
to process the whole string

780
00:33:07,200 --> 00:33:11,519
there will be

781
00:33:09,840 --> 00:33:12,559
plus one

782
00:33:11,519 --> 00:33:15,039
states

783
00:33:12,559 --> 00:33:15,760
right because when the machine is booted

784
00:33:15,039 --> 00:33:16,559
up

785
00:33:15,760 --> 00:33:19,360
it

786
00:33:16,559 --> 00:33:22,799
is on the start state and the start from

787
00:33:19,360 --> 00:33:25,679
the start from the start state

788
00:33:22,799 --> 00:33:28,559
you process one symbol goes to the next

789
00:33:25,679 --> 00:33:30,880
one so two states

790
00:33:28,559 --> 00:33:34,640
process another symbol

791
00:33:30,880 --> 00:33:37,519
goes to next states then three states

792
00:33:34,640 --> 00:33:39,200
so when you process n symbols

793
00:33:37,519 --> 00:33:41,279
always

794
00:33:39,200 --> 00:33:42,240
and plus one states

795
00:33:41,279 --> 00:33:44,640
so

796
00:33:42,240 --> 00:33:44,640
in this

797
00:33:45,519 --> 00:33:49,919
we say that the machine

798
00:33:47,600 --> 00:33:51,279
and accept string w

799
00:33:49,919 --> 00:33:55,519
if

800
00:33:51,279 --> 00:33:57,279
a sequence of states are 0 r 1 2 r n

801
00:33:55,519 --> 00:34:00,480
in q

802
00:33:57,279 --> 00:34:01,600
because q is the states of the machine

803
00:34:00,480 --> 00:34:02,720
right

804
00:34:01,600 --> 00:34:06,000
exists

805
00:34:02,720 --> 00:34:08,559
with satisfying the three conditions

806
00:34:06,000 --> 00:34:08,559
first one

807
00:34:08,720 --> 00:34:17,119
r0 is the star state of the machine

808
00:34:12,879 --> 00:34:19,599
r0 is the star state of the machine

809
00:34:17,119 --> 00:34:20,960
and that's it let's look at the third

810
00:34:19,599 --> 00:34:22,399
one first

811
00:34:20,960 --> 00:34:24,960
the final

812
00:34:22,399 --> 00:34:27,919
the last state

813
00:34:24,960 --> 00:34:28,879
is a member of accept states of the

814
00:34:27,919 --> 00:34:31,200
machine

815
00:34:28,879 --> 00:34:31,200
okay

816
00:34:32,839 --> 00:34:37,760
then

817
00:34:34,480 --> 00:34:37,760
previous states

818
00:34:38,399 --> 00:34:43,040
receive

819
00:34:40,480 --> 00:34:45,200
the symbol

820
00:34:43,040 --> 00:34:47,119
goes to

821
00:34:45,200 --> 00:34:49,839
the next state

822
00:34:47,119 --> 00:34:49,839
in the list

823
00:34:50,240 --> 00:34:52,560
okay

824
00:34:54,079 --> 00:34:58,079
so that means

825
00:34:56,320 --> 00:35:00,079
we say n

826
00:34:58,079 --> 00:35:01,200
accepts w

827
00:35:00,079 --> 00:35:04,400
means

828
00:35:01,200 --> 00:35:06,320
there is a sequence of

829
00:35:04,400 --> 00:35:10,240
states

830
00:35:06,320 --> 00:35:12,480
the machine will start from r1

831
00:35:10,240 --> 00:35:12,480
and

832
00:35:14,560 --> 00:35:18,800
process w1

833
00:35:16,880 --> 00:35:22,880
goes to r2

834
00:35:18,800 --> 00:35:27,200
r1 so it starts from r0 process w1

835
00:35:22,880 --> 00:35:29,119
goes to r1 and the process w2

836
00:35:27,200 --> 00:35:31,440
goes to r2

837
00:35:29,119 --> 00:35:34,800
process w3

838
00:35:31,440 --> 00:35:37,599
goes to r3 and so on

839
00:35:34,800 --> 00:35:41,440
process wn

840
00:35:37,599 --> 00:35:41,440
goes to rn

841
00:35:42,160 --> 00:35:49,280
and you can see here

842
00:35:44,960 --> 00:35:51,599
delta of r0 w1

843
00:35:49,280 --> 00:35:55,599
exactly is r1

844
00:35:51,599 --> 00:35:56,839
and the delta of r1 w2

845
00:35:55,599 --> 00:36:01,440
is

846
00:35:56,839 --> 00:36:03,119
r2 and the delta of r2

847
00:36:01,440 --> 00:36:07,520
w3

848
00:36:03,119 --> 00:36:10,079
is exactly r3 and so on

849
00:36:07,520 --> 00:36:13,839
and r1

850
00:36:10,079 --> 00:36:13,839
is the star state

851
00:36:14,480 --> 00:36:20,640
and

852
00:36:16,800 --> 00:36:25,359
go through the transition function

853
00:36:20,640 --> 00:36:27,119
we get r0 r1 r2 r3

854
00:36:25,359 --> 00:36:28,320
and rn

855
00:36:27,119 --> 00:36:30,640
finally

856
00:36:28,320 --> 00:36:33,520
rn

857
00:36:30,640 --> 00:36:35,440
is a member of

858
00:36:33,520 --> 00:36:37,280
accept states

859
00:36:35,440 --> 00:36:41,680
so

860
00:36:37,280 --> 00:36:44,640
if you can find a sequence r0 to rn

861
00:36:41,680 --> 00:36:46,160
satisfying the three conditions here we

862
00:36:44,640 --> 00:36:47,119
say that

863
00:36:46,160 --> 00:36:48,640
and

864
00:36:47,119 --> 00:36:51,040
accept

865
00:36:48,640 --> 00:36:51,040
w

866
00:36:52,640 --> 00:36:57,200
okay

867
00:36:55,359 --> 00:36:59,200
seems complicated but actually it's

868
00:36:57,200 --> 00:37:01,599
pretty straightforward

869
00:36:59,200 --> 00:37:02,960
and as long as you understand why we

870
00:37:01,599 --> 00:37:03,760
define this way

871
00:37:02,960 --> 00:37:05,920
then

872
00:37:03,760 --> 00:37:07,680
it's pretty

873
00:37:05,920 --> 00:37:10,240
straightforward as i said

874
00:37:07,680 --> 00:37:11,280
then we go back to our

875
00:37:10,240 --> 00:37:12,480
example

876
00:37:11,280 --> 00:37:15,119
okay

877
00:37:12,480 --> 00:37:15,119
we say that

878
00:37:17,760 --> 00:37:22,400
0

879
00:37:19,280 --> 00:37:26,480
1 1 0

880
00:37:22,400 --> 00:37:30,800
0 1 right we say that m1 accepts the

881
00:37:26,480 --> 00:37:30,800
string 0 1 1 0 0 1.

882
00:37:31,200 --> 00:37:36,640
i use the informal way to describe it so

883
00:37:33,680 --> 00:37:38,720
the machine starts from q 1 q1 c0 goes

884
00:37:36,640 --> 00:37:43,200
to q1 then

885
00:37:38,720 --> 00:37:43,920
c1 goes to q2 this one stays q2 c0 goes

886
00:37:43,200 --> 00:37:45,760
to

887
00:37:43,920 --> 00:37:47,280
q3 and so on

888
00:37:45,760 --> 00:37:51,040
finally it

889
00:37:47,280 --> 00:37:54,160
ends on q2 so we say that the machine

890
00:37:51,040 --> 00:37:54,160
accepts string right

891
00:37:56,720 --> 00:37:59,760
according to

892
00:37:58,079 --> 00:38:01,440
the definition

893
00:37:59,760 --> 00:38:03,440
we say m1

894
00:38:01,440 --> 00:38:04,960
accept

895
00:38:03,440 --> 00:38:08,079
input string

896
00:38:04,960 --> 00:38:09,680
is because we can find we actually can

897
00:38:08,079 --> 00:38:11,040
find a sequence

898
00:38:09,680 --> 00:38:13,760
of states

899
00:38:11,040 --> 00:38:15,599
which is q1

900
00:38:13,760 --> 00:38:18,599
q1

901
00:38:15,599 --> 00:38:18,599
q2

902
00:38:19,920 --> 00:38:24,640
q 2

903
00:38:22,000 --> 00:38:26,160
q 3

904
00:38:24,640 --> 00:38:29,960
q 2

905
00:38:26,160 --> 00:38:29,960
and q 2.

906
00:38:32,079 --> 00:38:40,160
we actually can find the sequence of

907
00:38:34,400 --> 00:38:45,119
states as this one which is our r0 r1 r2

908
00:38:40,160 --> 00:38:46,640
r3 r4 r5 r6

909
00:38:45,119 --> 00:38:51,200
okay

910
00:38:46,640 --> 00:38:53,599
we say m1 accept string w because we can

911
00:38:51,200 --> 00:38:53,599
find

912
00:38:54,240 --> 00:38:59,119
this

913
00:38:56,000 --> 00:39:01,280
sequence of states satisfying the three

914
00:38:59,119 --> 00:39:02,160
conditions

915
00:39:01,280 --> 00:39:02,960
which

916
00:39:02,160 --> 00:39:05,520
is

917
00:39:02,960 --> 00:39:05,520
first one

918
00:39:05,760 --> 00:39:11,200
r0 is q1 which is the star state

919
00:39:11,520 --> 00:39:14,880
right

920
00:39:12,480 --> 00:39:16,480
for second condition

921
00:39:14,880 --> 00:39:17,920
q1

922
00:39:16,480 --> 00:39:19,520
reads

923
00:39:17,920 --> 00:39:22,079
0

924
00:39:19,520 --> 00:39:23,200
and check delta function

925
00:39:22,079 --> 00:39:24,160
q1

926
00:39:23,200 --> 00:39:27,280
reads

927
00:39:24,160 --> 00:39:30,720
0 then you go to q1 right

928
00:39:27,280 --> 00:39:33,440
so delta of q1 0

929
00:39:30,720 --> 00:39:37,520
is q1

930
00:39:33,440 --> 00:39:41,680
then also q1 reads 1

931
00:39:37,520 --> 00:39:44,960
delta of q1 reads 1 is q2

932
00:39:41,680 --> 00:39:44,960
so is q2

933
00:39:45,040 --> 00:39:48,480
and then q2

934
00:39:46,720 --> 00:39:52,640
reads 1

935
00:39:48,480 --> 00:39:54,240
delta of q2 with 1 is q2

936
00:39:52,640 --> 00:39:55,839
q2

937
00:39:54,240 --> 00:39:57,599
right

938
00:39:55,839 --> 00:39:58,200
then

939
00:39:57,599 --> 00:40:00,000
0

940
00:39:58,200 --> 00:40:03,040
[Music]

941
00:40:00,000 --> 00:40:03,040
goes to q3

942
00:40:04,720 --> 00:40:08,319
0

943
00:40:06,000 --> 00:40:09,359
goes to q2

944
00:40:08,319 --> 00:40:10,720
1

945
00:40:09,359 --> 00:40:13,119
stay

946
00:40:10,720 --> 00:40:16,000
at q1 and q2

947
00:40:13,119 --> 00:40:17,440
and the third condition

948
00:40:16,000 --> 00:40:19,280
r6

949
00:40:17,440 --> 00:40:21,760
which is q2

950
00:40:19,280 --> 00:40:24,079
is a member of

951
00:40:21,760 --> 00:40:26,319
accept states

952
00:40:24,079 --> 00:40:26,319
see

953
00:40:26,560 --> 00:40:30,000
so

954
00:40:27,520 --> 00:40:32,319
we say that machine m1

955
00:40:30,000 --> 00:40:33,680
accepts string w

956
00:40:32,319 --> 00:40:35,599
not because

957
00:40:33,680 --> 00:40:39,359
i do the informal

958
00:40:35,599 --> 00:40:41,760
description says that okay q1 q2 q3 q1

959
00:40:39,359 --> 00:40:44,160
q2 q3 stuff like that

960
00:40:41,760 --> 00:40:47,440
it is because

961
00:40:44,160 --> 00:40:47,440
there exists

962
00:40:47,760 --> 00:40:54,720
q1 q1 q2 q2 q3 q2 q2 such a sequence of

963
00:40:53,599 --> 00:40:56,319
states

964
00:40:54,720 --> 00:40:59,839
satisfying

965
00:40:56,319 --> 00:40:59,839
the three conditions

966
00:41:01,119 --> 00:41:06,800
first one is the star state last one is

967
00:41:03,760 --> 00:41:08,160
the is a member of the acceptance

968
00:41:06,800 --> 00:41:09,359
and

969
00:41:08,160 --> 00:41:11,839
every

970
00:41:09,359 --> 00:41:11,839
state

971
00:41:11,920 --> 00:41:17,359
check the machine's delta function

972
00:41:15,280 --> 00:41:20,480
with the input

973
00:41:17,359 --> 00:41:21,520
really goes to next state

974
00:41:20,480 --> 00:41:25,040
so

975
00:41:21,520 --> 00:41:25,040
really goes to next states

976
00:41:25,839 --> 00:41:32,599
then we set the machine

977
00:41:28,560 --> 00:41:32,599
accept the string

978
00:41:37,200 --> 00:41:41,760
okay

979
00:41:39,440 --> 00:41:41,760
then

980
00:41:42,480 --> 00:41:47,440
let's imagine that

981
00:41:44,400 --> 00:41:47,440
that's imagine that

982
00:41:47,680 --> 00:41:50,640
as long as

983
00:41:49,280 --> 00:41:51,760
you

984
00:41:50,640 --> 00:41:53,520
have

985
00:41:51,760 --> 00:41:55,520
the alphabet

986
00:41:53,520 --> 00:41:57,200
of the machine

987
00:41:55,520 --> 00:42:00,079
then

988
00:41:57,200 --> 00:42:03,119
it is in this example the alphabet is 0

989
00:42:00,079 --> 00:42:06,560
1 so let's say

990
00:42:03,119 --> 00:42:08,720
imagine that you arbitrarily

991
00:42:06,560 --> 00:42:11,200
uh pick a

992
00:42:08,720 --> 00:42:14,160
zero one string like

993
00:42:11,200 --> 00:42:17,280
one one zero zero one one one one one

994
00:42:14,160 --> 00:42:18,480
zero something like that then

995
00:42:17,280 --> 00:42:20,880
you

996
00:42:18,480 --> 00:42:23,280
let the machine process a string you

997
00:42:20,880 --> 00:42:24,400
either get accept

998
00:42:23,280 --> 00:42:26,560
or

999
00:42:24,400 --> 00:42:28,880
not accept right

1000
00:42:26,560 --> 00:42:30,960
any 0 1 string

1001
00:42:28,880 --> 00:42:34,400
we don't want to really try that right

1002
00:42:30,960 --> 00:42:36,480
now but you can imagine that any zero

1003
00:42:34,400 --> 00:42:39,839
one string in this case

1004
00:42:36,480 --> 00:42:41,760
we can put into the machine and get

1005
00:42:39,839 --> 00:42:45,599
an answer of accept

1006
00:42:41,760 --> 00:42:46,720
or get an answer of another except

1007
00:42:45,599 --> 00:42:49,040
right

1008
00:42:46,720 --> 00:42:49,040
then

1009
00:42:52,480 --> 00:42:56,319
then we imagine that

1010
00:42:57,520 --> 00:43:00,480
all strings

1011
00:43:01,040 --> 00:43:05,119
some machine accept

1012
00:43:05,440 --> 00:43:10,000
we say that

1013
00:43:08,000 --> 00:43:12,560
let's say if a

1014
00:43:10,000 --> 00:43:15,599
is the set of almost string

1015
00:43:12,560 --> 00:43:16,880
all strings that machine n accept

1016
00:43:15,599 --> 00:43:18,079
we say that

1017
00:43:16,880 --> 00:43:19,599
the state

1018
00:43:18,079 --> 00:43:20,480
the set here

1019
00:43:19,599 --> 00:43:24,560
is

1020
00:43:20,480 --> 00:43:26,880
the language of machine m

1021
00:43:24,560 --> 00:43:28,400
we use the notation

1022
00:43:26,880 --> 00:43:29,920
l of n

1023
00:43:28,400 --> 00:43:32,240
is a

1024
00:43:29,920 --> 00:43:32,240
okay

1025
00:43:32,800 --> 00:43:35,680
okay so

1026
00:43:34,000 --> 00:43:37,920
firstly

1027
00:43:35,680 --> 00:43:40,480
in our code in this course

1028
00:43:37,920 --> 00:43:42,400
in the course of formal languages this

1029
00:43:40,480 --> 00:43:45,920
course

1030
00:43:42,400 --> 00:43:47,440
language the term language has no

1031
00:43:45,920 --> 00:43:48,560
spatial meanings

1032
00:43:47,440 --> 00:43:51,760
language

1033
00:43:48,560 --> 00:43:56,480
is a set of strings

1034
00:43:51,760 --> 00:43:58,319
okay as long as it is a set of strings

1035
00:43:56,480 --> 00:44:00,079
we call it language

1036
00:43:58,319 --> 00:44:04,160
so don't

1037
00:44:00,079 --> 00:44:06,640
think uh don't don't don't uh think that

1038
00:44:04,160 --> 00:44:09,920
the language here has any special

1039
00:44:06,640 --> 00:44:11,040
meanings no it's just a set of strings

1040
00:44:09,920 --> 00:44:14,079
all right

1041
00:44:11,040 --> 00:44:15,359
then we define that

1042
00:44:14,079 --> 00:44:16,560
let's say

1043
00:44:15,359 --> 00:44:20,000
you

1044
00:44:16,560 --> 00:44:23,119
define a finite automaton this way then

1045
00:44:20,000 --> 00:44:26,160
you get a finite parameter and then you

1046
00:44:23,119 --> 00:44:28,560
imagine that for a machine m for a

1047
00:44:26,160 --> 00:44:32,160
finite automaton n

1048
00:44:28,560 --> 00:44:34,640
it will accept some some strings

1049
00:44:32,160 --> 00:44:38,880
okay maybe an empty set that means no

1050
00:44:34,640 --> 00:44:40,720
strings but doesn't matter let's say

1051
00:44:38,880 --> 00:44:43,119
as long as one

1052
00:44:40,720 --> 00:44:43,119
machine

1053
00:44:43,280 --> 00:44:46,800
here

1054
00:44:44,160 --> 00:44:48,400
then it will accept

1055
00:44:46,800 --> 00:44:50,960
a set of strings

1056
00:44:48,400 --> 00:44:54,560
don't forget that it may be empty empty

1057
00:44:50,960 --> 00:44:57,680
set okay but it will accept some strings

1058
00:44:54,560 --> 00:45:02,000
we say that all the strings accepted by

1059
00:44:57,680 --> 00:45:02,000
the particular machine we say the

1060
00:45:03,200 --> 00:45:05,280
set here

1061
00:45:04,400 --> 00:45:07,520
is

1062
00:45:05,280 --> 00:45:09,040
the language of the machine

1063
00:45:07,520 --> 00:45:10,640
and we write

1064
00:45:09,040 --> 00:45:14,560
this way

1065
00:45:10,640 --> 00:45:17,599
that's it so language of machine m is

1066
00:45:14,560 --> 00:45:20,240
the set a that's it

1067
00:45:17,599 --> 00:45:21,760
in this way we say that

1068
00:45:20,240 --> 00:45:24,000
m

1069
00:45:21,760 --> 00:45:26,480
recognize

1070
00:45:24,000 --> 00:45:28,400
recognize

1071
00:45:26,480 --> 00:45:29,520
a

1072
00:45:28,400 --> 00:45:30,960
or

1073
00:45:29,520 --> 00:45:32,640
previously

1074
00:45:30,960 --> 00:45:36,000
in all times

1075
00:45:32,640 --> 00:45:39,119
mathematicians say that m

1076
00:45:36,000 --> 00:45:39,119
accepts a

1077
00:45:39,520 --> 00:45:45,520
and why we change accept in this case

1078
00:45:43,520 --> 00:45:46,400
to recognize

1079
00:45:45,520 --> 00:45:48,560
because

1080
00:45:46,400 --> 00:45:50,400
it's easier to know

1081
00:45:48,560 --> 00:45:54,400
it is a

1082
00:45:50,400 --> 00:45:55,440
language or a string

1083
00:45:54,400 --> 00:45:58,079
okay

1084
00:45:55,440 --> 00:46:02,160
see when we say that the machine accepts

1085
00:45:58,079 --> 00:46:04,160
a string and if the verb accepts here

1086
00:46:02,160 --> 00:46:08,560
can also be

1087
00:46:04,160 --> 00:46:11,520
described to be used to indicate that

1088
00:46:08,560 --> 00:46:12,839
a language to be accepted by a machine

1089
00:46:11,520 --> 00:46:16,240
it will be

1090
00:46:12,839 --> 00:46:17,760
confusing you have to check the context

1091
00:46:16,240 --> 00:46:20,400
to see the a

1092
00:46:17,760 --> 00:46:21,839
the big a here capital a here is a

1093
00:46:20,400 --> 00:46:23,760
string or

1094
00:46:21,839 --> 00:46:26,800
a language

1095
00:46:23,760 --> 00:46:27,599
so in order to you know it eliminates

1096
00:46:26,800 --> 00:46:29,680
and

1097
00:46:27,599 --> 00:46:32,480
potential troubles

1098
00:46:29,680 --> 00:46:34,240
we try we change the verb

1099
00:46:32,480 --> 00:46:35,440
here to

1100
00:46:34,240 --> 00:46:40,440
recognize

1101
00:46:35,440 --> 00:46:40,440
so when you see x recognized

1102
00:46:42,000 --> 00:46:44,400
sorry

1103
00:46:45,200 --> 00:46:48,800
x recognize

1104
00:46:48,079 --> 00:46:51,440
y

1105
00:46:48,800 --> 00:46:52,560
you know that m is a machine and y is a

1106
00:46:51,440 --> 00:46:53,680
language

1107
00:46:52,560 --> 00:46:55,440
and

1108
00:46:53,680 --> 00:46:58,160
you see x

1109
00:46:55,440 --> 00:46:58,160
accepts

1110
00:46:58,560 --> 00:47:02,640
y

1111
00:46:59,440 --> 00:47:05,280
you know y is a string x is a machine

1112
00:47:02,640 --> 00:47:05,280
so that's

1113
00:47:06,720 --> 00:47:12,160
better for

1114
00:47:08,839 --> 00:47:13,440
descriptions and also by the

1115
00:47:12,160 --> 00:47:15,920
definition

1116
00:47:13,440 --> 00:47:20,559
this way

1117
00:47:15,920 --> 00:47:23,960
we know that a machine only recognize

1118
00:47:20,559 --> 00:47:23,960
one language

1119
00:47:24,160 --> 00:47:30,319
why because it's pretty straightforward

1120
00:47:26,800 --> 00:47:32,720
that because the language of some

1121
00:47:30,319 --> 00:47:33,839
machine

1122
00:47:32,720 --> 00:47:35,040
is

1123
00:47:33,839 --> 00:47:40,079
the set

1124
00:47:35,040 --> 00:47:42,319
of all strings accepted by that machine

1125
00:47:40,079 --> 00:47:42,319
right

1126
00:47:43,200 --> 00:47:51,119
so machine must recognize only one

1127
00:47:47,440 --> 00:47:52,800
language which is exactly

1128
00:47:51,119 --> 00:47:55,760
all the string

1129
00:47:52,800 --> 00:47:55,760
it accepts

1130
00:47:57,839 --> 00:48:03,119
okay so that's the definition

1131
00:48:00,880 --> 00:48:03,119
and

1132
00:48:04,240 --> 00:48:08,480
finally for today we said that

1133
00:48:08,800 --> 00:48:14,880
a language is called

1134
00:48:11,200 --> 00:48:14,880
a regular language

1135
00:48:15,599 --> 00:48:22,480
if

1136
00:48:17,440 --> 00:48:22,480
some finite automaton recognize it

1137
00:48:22,640 --> 00:48:24,960
okay

1138
00:48:26,240 --> 00:48:31,359
let's back to go back to the

1139
00:48:29,440 --> 00:48:33,280
definition here

1140
00:48:31,359 --> 00:48:36,400
see

1141
00:48:33,280 --> 00:48:38,880
we say that a final automaton is a five

1142
00:48:36,400 --> 00:48:41,040
tuple like this

1143
00:48:38,880 --> 00:48:43,040
then

1144
00:48:41,040 --> 00:48:44,960
you can use

1145
00:48:43,040 --> 00:48:47,440
within the specs

1146
00:48:44,960 --> 00:48:49,839
you can define a lot of finite

1147
00:48:47,440 --> 00:48:53,760
automatons

1148
00:48:49,839 --> 00:48:55,440
each finite automaton can recognize

1149
00:48:53,760 --> 00:48:58,480
one language

1150
00:48:55,440 --> 00:48:58,480
right some language

1151
00:48:58,880 --> 00:49:01,200
then

1152
00:49:01,359 --> 00:49:03,839
we say that

1153
00:49:05,280 --> 00:49:10,240
a language

1154
00:49:07,839 --> 00:49:13,680
can be recognized

1155
00:49:10,240 --> 00:49:13,680
by a finite element

1156
00:49:14,880 --> 00:49:17,440
we call

1157
00:49:16,480 --> 00:49:20,880
it's

1158
00:49:17,440 --> 00:49:20,880
a regular language

1159
00:49:22,960 --> 00:49:25,200
so

1160
00:49:26,000 --> 00:49:33,599
we use

1161
00:49:28,319 --> 00:49:35,680
finite automaton as computational models

1162
00:49:33,599 --> 00:49:38,800
and what is a

1163
00:49:35,680 --> 00:49:42,319
string and what is language

1164
00:49:38,800 --> 00:49:42,319
in the analogy here

1165
00:49:43,359 --> 00:49:46,800
in our way of thinking

1166
00:49:47,680 --> 00:49:51,520
a language

1167
00:49:49,359 --> 00:49:55,280
is an abstract

1168
00:49:51,520 --> 00:49:57,359
entity of a problem

1169
00:49:55,280 --> 00:49:59,440
by the problem is not

1170
00:49:57,359 --> 00:50:02,079
one problem instance

1171
00:49:59,440 --> 00:50:04,319
it's a kind of problem

1172
00:50:02,079 --> 00:50:06,960
for example like a traveling salesman

1173
00:50:04,319 --> 00:50:09,280
problem or a

1174
00:50:06,960 --> 00:50:11,760
scheduling problem or a

1175
00:50:09,280 --> 00:50:13,040
flexible manufacturing problem things

1176
00:50:11,760 --> 00:50:15,680
like that

1177
00:50:13,040 --> 00:50:20,640
and a string

1178
00:50:15,680 --> 00:50:20,640
is a problem instance of that problem

1179
00:50:23,280 --> 00:50:27,280
so we define finite hunter and we say

1180
00:50:26,400 --> 00:50:30,880
that

1181
00:50:27,280 --> 00:50:32,160
the problem can be handled by this kind

1182
00:50:30,880 --> 00:50:33,359
of machine

1183
00:50:32,160 --> 00:50:36,400
we call them

1184
00:50:33,359 --> 00:50:36,400
regular languages

1185
00:50:36,720 --> 00:50:42,720
okay so i guess that's enough for today

1186
00:50:40,800 --> 00:50:44,880
so

1187
00:50:42,720 --> 00:50:46,480
we will continue the

1188
00:50:44,880 --> 00:50:49,960
course

1189
00:50:46,480 --> 00:50:49,960
in next lecture

