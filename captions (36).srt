1
00:00:02,720 --> 00:00:08,080
okay uh let's continue to finish the

2
00:00:05,200 --> 00:00:09,360
proof of cook level theorem that is we

3
00:00:08,080 --> 00:00:12,000
want to

4
00:00:09,360 --> 00:00:12,000
prove that

5
00:00:12,639 --> 00:00:17,600
satisfied very problem is an mp complete

6
00:00:16,560 --> 00:00:21,199
problem

7
00:00:17,600 --> 00:00:21,199
so last time we have uh

8
00:00:21,680 --> 00:00:26,080
written the

9
00:00:23,279 --> 00:00:27,119
our first boolean formula as phi cell

10
00:00:26,080 --> 00:00:30,640
here

11
00:00:27,119 --> 00:00:34,160
and let me recap some concept

12
00:00:30,640 --> 00:00:34,160
that we want to uh

13
00:00:35,120 --> 00:00:41,360
fill we want to fill the table of

14
00:00:38,559 --> 00:00:43,440
n to the case power y and to the case

15
00:00:41,360 --> 00:00:45,200
power by using

16
00:00:43,440 --> 00:00:48,160
a lot of

17
00:00:45,200 --> 00:00:50,000
boolean variables and for each boolean

18
00:00:48,160 --> 00:00:51,760
variables x i

19
00:00:50,000 --> 00:00:53,680
j s

20
00:00:51,760 --> 00:00:58,960
if this variable

21
00:00:53,680 --> 00:01:00,239
is true that means we want to fill i

22
00:00:58,960 --> 00:01:01,280
j

23
00:01:00,239 --> 00:01:03,680
with

24
00:01:01,280 --> 00:01:04,479
symbol uh symbol s

25
00:01:03,680 --> 00:01:08,960
okay

26
00:01:04,479 --> 00:01:10,799
so if uh x i j s is false then

27
00:01:08,960 --> 00:01:15,920
we don't want to fill

28
00:01:10,799 --> 00:01:17,840
as the symbol s into row i column j

29
00:01:15,920 --> 00:01:18,880
okay

30
00:01:17,840 --> 00:01:20,880
uh

31
00:01:18,880 --> 00:01:23,280
since we define boolean variable this

32
00:01:20,880 --> 00:01:24,840
way we want to make sure the table is a

33
00:01:23,280 --> 00:01:29,119
table that is

34
00:01:24,840 --> 00:01:30,320
every space every locate every location

35
00:01:29,119 --> 00:01:32,640
here

36
00:01:30,320 --> 00:01:35,040
will be filled by one

37
00:01:32,640 --> 00:01:36,320
and only one symbol

38
00:01:35,040 --> 00:01:38,079
so to

39
00:01:36,320 --> 00:01:39,280
accomplish this

40
00:01:38,079 --> 00:01:40,799
we design

41
00:01:39,280 --> 00:01:42,640
phi cell

42
00:01:40,799 --> 00:01:44,720
the boolean formula

43
00:01:42,640 --> 00:01:48,079
and

44
00:01:44,720 --> 00:01:48,960
use uh this part to make sure that

45
00:01:48,079 --> 00:01:51,119
rho

46
00:01:48,960 --> 00:01:52,240
rho i column j

47
00:01:51,119 --> 00:01:53,759
has

48
00:01:52,240 --> 00:01:56,479
more than

49
00:01:53,759 --> 00:02:00,000
one or equal to one symbol and use this

50
00:01:56,479 --> 00:02:00,000
part to make sure it

51
00:02:00,240 --> 00:02:04,880
feel

52
00:02:01,920 --> 00:02:07,520
equal to one or less than one symbol and

53
00:02:04,880 --> 00:02:08,399
by doing end that will be exactly one

54
00:02:07,520 --> 00:02:09,200
symbol

55
00:02:08,399 --> 00:02:12,000
okay

56
00:02:09,200 --> 00:02:15,920
and then this is a

57
00:02:12,000 --> 00:02:20,319
a double for loop to go through every

58
00:02:15,920 --> 00:02:21,200
spaces every uh sorry every space here

59
00:02:20,319 --> 00:02:23,840
so

60
00:02:21,200 --> 00:02:24,800
if uh you have a boolean assignment for

61
00:02:23,840 --> 00:02:25,840
these

62
00:02:24,800 --> 00:02:27,599
uh

63
00:02:25,840 --> 00:02:29,280
boolean variables

64
00:02:27,599 --> 00:02:32,080
to make

65
00:02:29,280 --> 00:02:33,280
to satisfy this

66
00:02:32,080 --> 00:02:34,640
formula

67
00:02:33,280 --> 00:02:37,599
then

68
00:02:34,640 --> 00:02:42,640
no the truth assignment of those boolean

69
00:02:37,599 --> 00:02:44,879
variables can be translated into a table

70
00:02:42,640 --> 00:02:44,879
of

71
00:02:45,840 --> 00:02:48,160
in which

72
00:02:47,280 --> 00:02:53,040
each

73
00:02:48,160 --> 00:02:54,800
blank is filled exactly with one symbol

74
00:02:53,040 --> 00:02:57,200
okay

75
00:02:54,800 --> 00:02:59,040
so apparently you will have a lot of

76
00:02:57,200 --> 00:03:01,040
truth assignment

77
00:02:59,040 --> 00:03:03,519
uh satisfying this

78
00:03:01,040 --> 00:03:07,200
file cell whenever the file cell is

79
00:03:03,519 --> 00:03:10,080
satisfied that means the table um

80
00:03:07,200 --> 00:03:12,400
is filled correctly uh by correctly i

81
00:03:10,080 --> 00:03:15,280
mean validly okay each

82
00:03:12,400 --> 00:03:17,440
blank is filled with one symbol and now

83
00:03:15,280 --> 00:03:20,000
they are and on the other hand if you

84
00:03:17,440 --> 00:03:22,239
have a table filled with one symbol in

85
00:03:20,000 --> 00:03:24,879
each blank then

86
00:03:22,239 --> 00:03:26,959
that table can be

87
00:03:24,879 --> 00:03:28,799
translated into

88
00:03:26,959 --> 00:03:30,239
one

89
00:03:28,799 --> 00:03:32,879
into a

90
00:03:30,239 --> 00:03:34,640
truth assignment satisfying this boolean

91
00:03:32,879 --> 00:03:35,760
formula

92
00:03:34,640 --> 00:03:37,760
okay

93
00:03:35,760 --> 00:03:40,400
then

94
00:03:37,760 --> 00:03:43,120
after uh we have a

95
00:03:40,400 --> 00:03:45,280
boolean formula for cell here now we

96
00:03:43,120 --> 00:03:48,080
want to pay attention to the content of

97
00:03:45,280 --> 00:03:51,760
the table okay so firstly we make sure

98
00:03:48,080 --> 00:03:54,879
the table is valid then we want to

99
00:03:51,760 --> 00:03:54,879
take care of the content

100
00:03:55,040 --> 00:03:58,959
the purpose we

101
00:03:56,640 --> 00:04:01,200
we have

102
00:03:58,959 --> 00:04:03,040
we have this table is that actually we

103
00:04:01,200 --> 00:04:04,319
want this table

104
00:04:03,040 --> 00:04:07,840
to

105
00:04:04,319 --> 00:04:07,840
be filled with

106
00:04:08,400 --> 00:04:12,319
a computation

107
00:04:10,560 --> 00:04:14,400
history

108
00:04:12,319 --> 00:04:16,160
to be filled with

109
00:04:14,400 --> 00:04:17,280
a computational history

110
00:04:16,160 --> 00:04:20,799
of

111
00:04:17,280 --> 00:04:22,240
the turing machine and running on

112
00:04:20,799 --> 00:04:23,280
input stream w

113
00:04:22,240 --> 00:04:24,160
okay

114
00:04:23,280 --> 00:04:26,639
then

115
00:04:24,160 --> 00:04:27,680
uh usually i talk about this after we

116
00:04:26,639 --> 00:04:30,960
finish the

117
00:04:27,680 --> 00:04:34,639
proof but i think i i should say it

118
00:04:30,960 --> 00:04:36,240
first then many of you can

119
00:04:34,639 --> 00:04:40,800
actually

120
00:04:36,240 --> 00:04:40,800
catch the idea of the whole thing

121
00:04:41,600 --> 00:04:45,120
okay

122
00:04:43,280 --> 00:04:47,120
so what uh

123
00:04:45,120 --> 00:04:50,240
some

124
00:04:47,120 --> 00:04:53,440
some of you may ask that uh since there

125
00:04:50,240 --> 00:04:57,120
are so many possibilities of uh

126
00:04:53,440 --> 00:05:00,320
the computation history of n on w

127
00:04:57,120 --> 00:05:01,520
how can we have that in one

128
00:05:00,320 --> 00:05:03,919
table

129
00:05:01,520 --> 00:05:06,800
actually we don't

130
00:05:03,919 --> 00:05:09,120
we don't want this table to contain all

131
00:05:06,800 --> 00:05:10,560
possibilities

132
00:05:09,120 --> 00:05:14,400
at the end

133
00:05:10,560 --> 00:05:16,960
you see uh when n on w

134
00:05:14,400 --> 00:05:19,360
it will be like this right because it's

135
00:05:16,960 --> 00:05:19,360
announced

136
00:05:20,160 --> 00:05:24,800
none determines the turing machine right

137
00:05:22,000 --> 00:05:27,840
so you will have many branches

138
00:05:24,800 --> 00:05:28,800
so we what we really want

139
00:05:27,840 --> 00:05:30,720
is

140
00:05:28,800 --> 00:05:34,080
by

141
00:05:30,720 --> 00:05:36,880
assigning these boolean variables

142
00:05:34,080 --> 00:05:38,800
with different assignments

143
00:05:36,880 --> 00:05:40,720
we want to have

144
00:05:38,800 --> 00:05:43,120
the table as

145
00:05:40,720 --> 00:05:43,120
one

146
00:05:43,520 --> 00:05:48,720
branch

147
00:05:45,360 --> 00:05:52,479
of the computation history that is so

148
00:05:48,720 --> 00:05:54,320
in the end we want this table

149
00:05:52,479 --> 00:05:56,240
to reflect

150
00:05:54,320 --> 00:05:57,840
one

151
00:05:56,240 --> 00:05:59,280
computational branch

152
00:05:57,840 --> 00:06:00,319
that's it

153
00:05:59,280 --> 00:06:01,199
okay

154
00:06:00,319 --> 00:06:04,160
so

155
00:06:01,199 --> 00:06:06,880
after knowing this you will know why we

156
00:06:04,160 --> 00:06:10,080
design the other three boolean formula

157
00:06:06,880 --> 00:06:11,600
then we complete the proof

158
00:06:10,080 --> 00:06:14,080
so we want to

159
00:06:11,600 --> 00:06:15,600
see we want to

160
00:06:14,080 --> 00:06:20,199
we want to have

161
00:06:15,600 --> 00:06:20,199
uh well we want to connect

162
00:06:20,639 --> 00:06:24,400
or we want to establish the connection

163
00:06:23,199 --> 00:06:27,039
between

164
00:06:24,400 --> 00:06:30,400
choose assignment

165
00:06:27,039 --> 00:06:33,440
within truth assignment and

166
00:06:30,400 --> 00:06:37,680
the record of the computation history

167
00:06:33,440 --> 00:06:40,720
so if uh perhaps you can have one set of

168
00:06:37,680 --> 00:06:42,000
truth assignment to reflect

169
00:06:40,720 --> 00:06:45,199
this one

170
00:06:42,000 --> 00:06:46,240
and the other set of truth assignment

171
00:06:45,199 --> 00:06:48,639
to

172
00:06:46,240 --> 00:06:51,039
reflect this one

173
00:06:48,639 --> 00:06:52,720
and yet another choose assignment to

174
00:06:51,039 --> 00:06:53,919
reflect

175
00:06:52,720 --> 00:06:56,160
this one

176
00:06:53,919 --> 00:06:56,160
okay

177
00:06:56,560 --> 00:07:01,520
then that's our purpose basically we

178
00:06:59,440 --> 00:07:04,240
want to

179
00:07:01,520 --> 00:07:09,240
we want this table to so to be so

180
00:07:04,240 --> 00:07:12,639
flexible that it can repl represent all

181
00:07:09,240 --> 00:07:14,560
computational branches of

182
00:07:12,639 --> 00:07:15,440
non w

183
00:07:14,560 --> 00:07:18,479
okay

184
00:07:15,440 --> 00:07:21,360
all computational branches actually more

185
00:07:18,479 --> 00:07:22,080
because you have many invalid content

186
00:07:21,360 --> 00:07:23,680
right

187
00:07:22,080 --> 00:07:24,880
but

188
00:07:23,680 --> 00:07:26,960
we want

189
00:07:24,880 --> 00:07:29,520
all possible

190
00:07:26,960 --> 00:07:31,599
computational branches to be represented

191
00:07:29,520 --> 00:07:33,599
by

192
00:07:31,599 --> 00:07:36,400
the truth assignment

193
00:07:33,599 --> 00:07:37,759
and we use boolean formulas

194
00:07:36,400 --> 00:07:40,880
to talk about

195
00:07:37,759 --> 00:07:42,800
those truth assignments that we want

196
00:07:40,880 --> 00:07:45,520
okay that's the key idea

197
00:07:42,800 --> 00:07:47,520
okay so if i say oh

198
00:07:45,520 --> 00:07:50,240
if your choose assignment

199
00:07:47,520 --> 00:07:50,960
satisfies by sale that means the table

200
00:07:50,240 --> 00:07:52,319
is

201
00:07:50,960 --> 00:07:53,360
okay a table

202
00:07:52,319 --> 00:07:55,599
then

203
00:07:53,360 --> 00:07:58,240
let's design another

204
00:07:55,599 --> 00:07:59,680
boolean formula called

205
00:07:58,240 --> 00:08:01,680
by start

206
00:07:59,680 --> 00:08:03,120
file start is easy

207
00:08:01,680 --> 00:08:04,639
we just end

208
00:08:03,120 --> 00:08:07,280
one one

209
00:08:04,639 --> 00:08:10,240
filled with you know separator

210
00:08:07,280 --> 00:08:11,440
and one two filled with

211
00:08:10,240 --> 00:08:14,639
q0

212
00:08:11,440 --> 00:08:20,080
then one three filled with w1

213
00:08:14,639 --> 00:08:22,240
then one for w2 etc then wn

214
00:08:20,080 --> 00:08:23,599
and blank blank

215
00:08:22,240 --> 00:08:24,960
till the end

216
00:08:23,599 --> 00:08:26,639
okay

217
00:08:24,960 --> 00:08:29,680
so

218
00:08:26,639 --> 00:08:31,840
you can clearly see

219
00:08:29,680 --> 00:08:36,159
if you were building

220
00:08:31,840 --> 00:08:38,959
a variable truth assignment satisfied

221
00:08:36,159 --> 00:08:40,399
satisfies by start

222
00:08:38,959 --> 00:08:42,880
that means

223
00:08:40,399 --> 00:08:44,720
the first row

224
00:08:42,880 --> 00:08:46,800
the first row

225
00:08:44,720 --> 00:08:48,480
of the table

226
00:08:46,800 --> 00:08:52,720
is exactly

227
00:08:48,480 --> 00:08:55,279
the start configuration of

228
00:08:52,720 --> 00:08:57,040
n on w

229
00:08:55,279 --> 00:09:00,080
right

230
00:08:57,040 --> 00:09:02,720
now you see uh how we use boolean

231
00:09:00,080 --> 00:09:05,440
formula to

232
00:09:02,720 --> 00:09:09,200
to make the table content as we want

233
00:09:05,440 --> 00:09:11,519
something you know concept like this

234
00:09:09,200 --> 00:09:11,519
okay

235
00:09:11,920 --> 00:09:15,200
then

236
00:09:12,720 --> 00:09:18,640
assuming that

237
00:09:15,200 --> 00:09:18,640
the table is really

238
00:09:19,040 --> 00:09:25,040
a computational history

239
00:09:21,760 --> 00:09:28,160
we just we want a formula to check

240
00:09:25,040 --> 00:09:30,080
if there is any

241
00:09:28,160 --> 00:09:32,160
if there is any

242
00:09:30,080 --> 00:09:33,279
blank filled with

243
00:09:32,160 --> 00:09:36,279
q

244
00:09:33,279 --> 00:09:36,279
accept

245
00:09:36,800 --> 00:09:41,440
okay

246
00:09:37,680 --> 00:09:44,160
so we just do and big or

247
00:09:41,440 --> 00:09:46,560
we order all

248
00:09:44,160 --> 00:09:47,920
positions with

249
00:09:46,560 --> 00:09:49,600
you accept

250
00:09:47,920 --> 00:09:50,720
we do a big or

251
00:09:49,600 --> 00:09:51,600
that means

252
00:09:50,720 --> 00:09:53,760
if

253
00:09:51,600 --> 00:09:57,760
y accept

254
00:09:53,760 --> 00:09:57,760
is true it's satisfied

255
00:09:59,680 --> 00:10:05,839
some blank of the table

256
00:10:03,360 --> 00:10:06,959
is q

257
00:10:05,839 --> 00:10:07,920
accept

258
00:10:06,959 --> 00:10:10,720
right

259
00:10:07,920 --> 00:10:12,720
but actually according to our assumption

260
00:10:10,720 --> 00:10:14,160
as long as

261
00:10:12,720 --> 00:10:18,640
for example

262
00:10:14,160 --> 00:10:21,440
here you got q accept then every talent

263
00:10:18,640 --> 00:10:23,279
every uh for all rows every position

264
00:10:21,440 --> 00:10:26,079
here is q accept because that's our

265
00:10:23,279 --> 00:10:27,040
assumption in the beginning of the

266
00:10:26,079 --> 00:10:28,000
proof

267
00:10:27,040 --> 00:10:30,839
okay

268
00:10:28,000 --> 00:10:34,399
we assume that the machine

269
00:10:30,839 --> 00:10:36,720
if nobody knows but if the machine

270
00:10:34,399 --> 00:10:39,040
enters q accept

271
00:10:36,720 --> 00:10:40,720
the whole thing stops so your

272
00:10:39,040 --> 00:10:43,839
computation history just you know

273
00:10:40,720 --> 00:10:46,640
duplicates on each row so that would be

274
00:10:43,839 --> 00:10:49,519
the case but doesn't matter as long as

275
00:10:46,640 --> 00:10:50,640
in the table there is a queue accept

276
00:10:49,519 --> 00:10:52,320
then

277
00:10:50,640 --> 00:10:56,959
that formula is true

278
00:10:52,320 --> 00:10:57,760
will be you know satisfied is satisfied

279
00:10:56,959 --> 00:11:00,320
so

280
00:10:57,760 --> 00:11:03,360
now you see the three uh boolean formula

281
00:11:00,320 --> 00:11:07,440
one is the five cell to make sure each

282
00:11:03,360 --> 00:11:08,959
blank is filled with one symbol and then

283
00:11:07,440 --> 00:11:11,200
five star

284
00:11:08,959 --> 00:11:15,600
make sure the first row is the star

285
00:11:11,200 --> 00:11:16,640
configuration of the machine n running

286
00:11:15,600 --> 00:11:18,560
on w

287
00:11:16,640 --> 00:11:21,519
uh input w

288
00:11:18,560 --> 00:11:22,959
then we have a final uh check

289
00:11:21,519 --> 00:11:25,839
fi

290
00:11:22,959 --> 00:11:30,240
accept to check

291
00:11:25,839 --> 00:11:32,320
whether q accept is

292
00:11:30,240 --> 00:11:36,240
appears in the table

293
00:11:32,320 --> 00:11:37,920
or whether the machine actually enters

294
00:11:36,240 --> 00:11:40,079
q accept

295
00:11:37,920 --> 00:11:40,079
but

296
00:11:41,680 --> 00:11:46,000
the missing part here

297
00:11:43,839 --> 00:11:48,399
the missing piece here is that

298
00:11:46,000 --> 00:11:50,639
how do we make sure

299
00:11:48,399 --> 00:11:51,760
each configuration

300
00:11:50,639 --> 00:11:54,839
yield

301
00:11:51,760 --> 00:11:57,760
next configuration so

302
00:11:54,839 --> 00:12:00,880
that the table is really

303
00:11:57,760 --> 00:12:03,600
one of the possible computation branches

304
00:12:00,880 --> 00:12:04,480
the history of the

305
00:12:03,600 --> 00:12:06,240
table

306
00:12:04,480 --> 00:12:07,600
really

307
00:12:06,240 --> 00:12:09,519
represents

308
00:12:07,600 --> 00:12:12,000
the history of one possible

309
00:12:09,519 --> 00:12:12,800
computational branch

310
00:12:12,000 --> 00:12:14,240
so

311
00:12:12,800 --> 00:12:17,680
that's the

312
00:12:14,240 --> 00:12:21,240
job of five move here

313
00:12:17,680 --> 00:12:21,240
if i move here

314
00:12:28,160 --> 00:12:33,120
so for five move here

315
00:12:31,120 --> 00:12:34,639
again we do

316
00:12:33,120 --> 00:12:38,560
a double loop

317
00:12:34,639 --> 00:12:40,800
for every row and then every column

318
00:12:38,560 --> 00:12:42,880
then

319
00:12:40,800 --> 00:12:45,440
we have the

320
00:12:42,880 --> 00:12:50,079
legal window check here and what is the

321
00:12:45,440 --> 00:12:50,079
legal window a legal window is actually

322
00:12:50,240 --> 00:12:57,120
two by three or yeah two by three

323
00:12:52,880 --> 00:12:58,560
actually so two by three

324
00:12:57,120 --> 00:13:00,800
window

325
00:12:58,560 --> 00:13:00,800
and

326
00:13:01,279 --> 00:13:05,519
if the content of the window

327
00:13:03,839 --> 00:13:08,639
is legal

328
00:13:05,519 --> 00:13:11,680
then we then the

329
00:13:08,639 --> 00:13:13,519
formula at least this part of formula

330
00:13:11,680 --> 00:13:15,279
is evaluated through

331
00:13:13,519 --> 00:13:18,320
and how do we know

332
00:13:15,279 --> 00:13:21,279
what kind of content

333
00:13:18,320 --> 00:13:24,320
for the by three window to be legal

334
00:13:21,279 --> 00:13:25,920
that will depend on

335
00:13:24,320 --> 00:13:28,720
the transition

336
00:13:25,920 --> 00:13:30,320
function of the machine

337
00:13:28,720 --> 00:13:34,000
so now you see

338
00:13:30,320 --> 00:13:35,600
five move is really

339
00:13:34,000 --> 00:13:38,959
it's really uh

340
00:13:35,600 --> 00:13:40,079
the one connected to the operation of

341
00:13:38,959 --> 00:13:44,320
the machine

342
00:13:40,079 --> 00:13:47,040
okay you see that even n on w

343
00:13:44,320 --> 00:13:49,920
we don't really need to take uh yeah we

344
00:13:47,040 --> 00:13:53,519
don't really need to check the machine

345
00:13:49,920 --> 00:13:55,839
then we uh and we can actually write up

346
00:13:53,519 --> 00:13:58,320
five cell

347
00:13:55,839 --> 00:14:01,639
file start and

348
00:13:58,320 --> 00:14:01,639
file accept

349
00:14:02,480 --> 00:14:05,920
so the

350
00:14:04,480 --> 00:14:09,120
fine move

351
00:14:05,920 --> 00:14:10,399
reflects the operations of the machine

352
00:14:09,120 --> 00:14:11,839
okay

353
00:14:10,399 --> 00:14:14,959
then

354
00:14:11,839 --> 00:14:17,040
for example if in the machine

355
00:14:14,959 --> 00:14:19,680
there is a

356
00:14:17,040 --> 00:14:19,680
transition

357
00:14:22,320 --> 00:14:28,560
for states q1 if you read a

358
00:14:25,680 --> 00:14:30,480
it becomes q1

359
00:14:28,560 --> 00:14:33,760
stays in the state

360
00:14:30,480 --> 00:14:34,560
q1 and you replace a with b and the left

361
00:14:33,760 --> 00:14:36,959
head

362
00:14:34,560 --> 00:14:39,600
move to right

363
00:14:36,959 --> 00:14:42,079
okay then you imagine that

364
00:14:39,600 --> 00:14:44,399
for the uh for one

365
00:14:42,079 --> 00:14:47,680
configuration

366
00:14:44,399 --> 00:14:48,480
you may have something like

367
00:14:47,680 --> 00:14:50,959
okay

368
00:14:48,480 --> 00:14:50,959
that would be

369
00:14:52,959 --> 00:14:55,760
q1a

370
00:14:57,040 --> 00:15:01,880
okay so

371
00:14:58,720 --> 00:15:01,880
for example

372
00:15:14,800 --> 00:15:20,320
so

373
00:15:16,320 --> 00:15:24,079
for example of this transition

374
00:15:20,320 --> 00:15:24,079
and you really have uh

375
00:15:24,160 --> 00:15:27,600
first the configuration and the second

376
00:15:25,839 --> 00:15:28,639
configuration like this

377
00:15:27,600 --> 00:15:30,639
then

378
00:15:28,639 --> 00:15:34,560
you have type content

379
00:15:30,639 --> 00:15:36,160
with uh a a q1 a something

380
00:15:34,560 --> 00:15:38,880
and then

381
00:15:36,160 --> 00:15:41,279
for the machine to operate

382
00:15:38,880 --> 00:15:45,120
on this transition

383
00:15:41,279 --> 00:15:47,360
legally you will get something like

384
00:15:45,120 --> 00:15:48,880
a becomes b right

385
00:15:47,360 --> 00:15:52,000
and then

386
00:15:48,880 --> 00:15:52,000
your head go

387
00:15:52,399 --> 00:15:56,000
right

388
00:15:53,360 --> 00:15:57,440
so that would be this one

389
00:15:56,000 --> 00:16:01,680
right

390
00:15:57,440 --> 00:16:03,360
then for this uh possibility

391
00:16:01,680 --> 00:16:06,079
these type

392
00:16:03,360 --> 00:16:08,800
of the six

393
00:16:06,079 --> 00:16:11,199
well uh two by three window

394
00:16:08,800 --> 00:16:13,600
will be the uh is legal according to

395
00:16:11,199 --> 00:16:16,399
this transition okay

396
00:16:13,600 --> 00:16:16,399
and also

397
00:16:17,199 --> 00:16:20,680
you will have

398
00:16:26,480 --> 00:16:32,160
these two by three to be legal

399
00:16:29,360 --> 00:16:32,160
and also

400
00:16:33,120 --> 00:16:36,560
something

401
00:16:34,880 --> 00:16:38,959
these two by three

402
00:16:36,560 --> 00:16:39,920
is legal two

403
00:16:38,959 --> 00:16:42,240
okay

404
00:16:39,920 --> 00:16:44,079
so for another another example if you

405
00:16:42,240 --> 00:16:44,959
have q1b

406
00:16:44,079 --> 00:16:47,759
and

407
00:16:44,959 --> 00:16:47,759
you have two

408
00:16:48,560 --> 00:16:53,759
you have two next move

409
00:16:51,279 --> 00:16:56,079
so this kind of

410
00:16:53,759 --> 00:16:57,519
this kind of transition

411
00:16:56,079 --> 00:16:59,839
will give you

412
00:16:57,519 --> 00:16:59,839
a

413
00:17:00,000 --> 00:17:05,600
legal window like this

414
00:17:03,120 --> 00:17:07,199
okay so q1

415
00:17:05,600 --> 00:17:10,559
you read b right

416
00:17:07,199 --> 00:17:14,799
then q1 becomes q2 and

417
00:17:10,559 --> 00:17:17,199
b becomes c right and this a is should

418
00:17:14,799 --> 00:17:18,720
be this a

419
00:17:17,199 --> 00:17:21,600
okay

420
00:17:18,720 --> 00:17:25,360
so actually you can have larger lego

421
00:17:21,600 --> 00:17:28,400
windows like two by four two by five

422
00:17:25,360 --> 00:17:29,679
but two by three is the minimum we want

423
00:17:28,400 --> 00:17:30,799
to have

424
00:17:29,679 --> 00:17:33,200
and

425
00:17:30,799 --> 00:17:36,960
don't forget that

426
00:17:33,200 --> 00:17:38,080
how do we do the legal window checking

427
00:17:36,960 --> 00:17:40,400
it's not

428
00:17:38,080 --> 00:17:43,440
like you check these three

429
00:17:40,400 --> 00:17:45,360
and check this three no it's not that

430
00:17:43,440 --> 00:17:47,600
like that

431
00:17:45,360 --> 00:17:48,640
we do the legal window checking like

432
00:17:47,600 --> 00:17:51,120
this

433
00:17:48,640 --> 00:17:51,120
check this

434
00:17:51,280 --> 00:17:58,000
two by three right then you do two by

435
00:17:54,559 --> 00:18:02,160
three then you do two by three then you

436
00:17:58,000 --> 00:18:04,400
do two by three and then

437
00:18:02,160 --> 00:18:06,320
after

438
00:18:04,400 --> 00:18:07,360
checking the whole

439
00:18:06,320 --> 00:18:10,720
uh

440
00:18:07,360 --> 00:18:11,919
the whole row actually two whole rows

441
00:18:10,720 --> 00:18:13,840
this way

442
00:18:11,919 --> 00:18:16,799
you can make sure

443
00:18:13,840 --> 00:18:19,919
this configuration really

444
00:18:16,799 --> 00:18:21,760
goes to next configuration

445
00:18:19,919 --> 00:18:24,000
for

446
00:18:21,760 --> 00:18:26,240
the transition defined

447
00:18:24,000 --> 00:18:27,120
of the machine

448
00:18:26,240 --> 00:18:29,360
okay

449
00:18:27,120 --> 00:18:32,400
and after doing that you will know

450
00:18:29,360 --> 00:18:35,200
configuration i goes to configuration i

451
00:18:32,400 --> 00:18:36,960
j uh i plus one

452
00:18:35,200 --> 00:18:37,919
according to the definition of the

453
00:18:36,960 --> 00:18:38,799
machine

454
00:18:37,919 --> 00:18:40,799
then

455
00:18:38,799 --> 00:18:43,280
you do

456
00:18:40,799 --> 00:18:45,520
checking this to roll then these two

457
00:18:43,280 --> 00:18:46,640
roll these two row

458
00:18:45,520 --> 00:18:47,919
and

459
00:18:46,640 --> 00:18:51,120
everything

460
00:18:47,919 --> 00:18:51,120
so that's why

461
00:18:51,600 --> 00:18:54,960
that's why

462
00:18:53,039 --> 00:18:57,840
we write this this way

463
00:18:54,960 --> 00:19:00,160
so for the double loop here

464
00:18:57,840 --> 00:19:00,160
okay

465
00:19:00,559 --> 00:19:07,520
we

466
00:19:02,640 --> 00:19:09,520
write out all possible legal content

467
00:19:07,520 --> 00:19:12,559
within

468
00:19:09,520 --> 00:19:14,080
a window 2x3 window

469
00:19:12,559 --> 00:19:17,520
then

470
00:19:14,080 --> 00:19:18,960
2x3 window is like like we

471
00:19:17,520 --> 00:19:22,880
write

472
00:19:18,960 --> 00:19:22,880
5 star we just end

473
00:19:23,280 --> 00:19:28,240
these six

474
00:19:25,679 --> 00:19:28,240
symbols

475
00:19:28,400 --> 00:19:32,640
okay

476
00:19:30,400 --> 00:19:32,640
so

477
00:19:33,600 --> 00:19:36,400
like this one

478
00:19:37,600 --> 00:19:42,000
we have a legal window make

479
00:19:41,120 --> 00:19:45,600
you know

480
00:19:42,000 --> 00:19:47,200
checks out these two by three and some

481
00:19:45,600 --> 00:19:49,360
uh

482
00:19:47,200 --> 00:19:51,679
previous student asked that

483
00:19:49,360 --> 00:19:55,280
what happened if actually you don't have

484
00:19:51,679 --> 00:19:56,400
q1 here you have like

485
00:19:55,280 --> 00:19:57,679
let's say

486
00:19:56,400 --> 00:19:59,440
c here

487
00:19:57,679 --> 00:20:02,159
then of course

488
00:19:59,440 --> 00:20:05,919
these two by three is true

489
00:20:02,159 --> 00:20:08,240
but these two by three is not true right

490
00:20:05,919 --> 00:20:10,480
then you have end

491
00:20:08,240 --> 00:20:14,640
then that will make

492
00:20:10,480 --> 00:20:16,960
the whole formula unsatisfied

493
00:20:14,640 --> 00:20:19,760
so that's why we can

494
00:20:16,960 --> 00:20:20,960
be sure that such a checking

495
00:20:19,760 --> 00:20:23,440
will

496
00:20:20,960 --> 00:20:23,440
help us

497
00:20:23,760 --> 00:20:27,600
to obtain

498
00:20:26,320 --> 00:20:29,120
a correct

499
00:20:27,600 --> 00:20:31,760
computational

500
00:20:29,120 --> 00:20:34,159
history of one possible computational

501
00:20:31,760 --> 00:20:35,200
branch of nlw

502
00:20:34,159 --> 00:20:37,360
okay

503
00:20:35,200 --> 00:20:39,520
and then

504
00:20:37,360 --> 00:20:42,240
it is possible that

505
00:20:39,520 --> 00:20:43,360
there are many many many legal windows

506
00:20:42,240 --> 00:20:44,320
here

507
00:20:43,360 --> 00:20:46,240
but

508
00:20:44,320 --> 00:20:49,520
you must know that

509
00:20:46,240 --> 00:20:52,000
no matter how many items of the legal

510
00:20:49,520 --> 00:20:52,000
windows

511
00:20:52,480 --> 00:20:57,679
the amount of little legal windows is

512
00:20:56,000 --> 00:20:58,559
irrelevant

513
00:20:57,679 --> 00:21:02,400
to

514
00:20:58,559 --> 00:21:03,919
the length of input stream

515
00:21:02,400 --> 00:21:06,320
why because

516
00:21:03,919 --> 00:21:09,039
the legal windows

517
00:21:06,320 --> 00:21:11,919
how many uh the amount of legal windows

518
00:21:09,039 --> 00:21:15,200
is a property of n

519
00:21:11,919 --> 00:21:18,400
the non-deterministic machine n

520
00:21:15,200 --> 00:21:19,679
itself not the input string

521
00:21:18,400 --> 00:21:21,360
therefore

522
00:21:19,679 --> 00:21:22,880
the amount of

523
00:21:21,360 --> 00:21:25,360
legal windows

524
00:21:22,880 --> 00:21:27,600
is a constant

525
00:21:25,360 --> 00:21:30,960
regarding

526
00:21:27,600 --> 00:21:31,919
the input string length

527
00:21:30,960 --> 00:21:33,600
right

528
00:21:31,919 --> 00:21:34,640
then since

529
00:21:33,600 --> 00:21:36,799
here

530
00:21:34,640 --> 00:21:39,679
the size is constant

531
00:21:36,799 --> 00:21:42,559
i shouldn't use k because k is used so

532
00:21:39,679 --> 00:21:43,440
anyway constant

533
00:21:42,559 --> 00:21:44,400
and

534
00:21:43,440 --> 00:21:47,440
we have

535
00:21:44,400 --> 00:21:48,960
n k by n k

536
00:21:47,440 --> 00:21:51,840
items of this

537
00:21:48,960 --> 00:21:54,159
so no problem here right

538
00:21:51,840 --> 00:21:54,159
then

539
00:21:57,200 --> 00:22:00,799
then we basically

540
00:21:59,120 --> 00:22:01,840
finish the proof here

541
00:22:00,799 --> 00:22:03,760
okay

542
00:22:01,840 --> 00:22:07,200
so that means

543
00:22:03,760 --> 00:22:07,200
back to our um

544
00:22:07,840 --> 00:22:11,200
proof of

545
00:22:09,039 --> 00:22:14,880
uh cook 11 theorem

546
00:22:11,200 --> 00:22:14,880
firstly for any

547
00:22:16,480 --> 00:22:21,360
well where is it okay

548
00:22:18,720 --> 00:22:25,200
for any

549
00:22:21,360 --> 00:22:26,480
language in mp for any language in mp

550
00:22:25,200 --> 00:22:29,039
okay

551
00:22:26,480 --> 00:22:30,640
we take the decider

552
00:22:29,039 --> 00:22:33,760
for that language

553
00:22:30,640 --> 00:22:36,559
and then we consider

554
00:22:33,760 --> 00:22:36,559
we consider

555
00:22:37,039 --> 00:22:43,200
the input w

556
00:22:39,600 --> 00:22:43,200
to be processed by n

557
00:22:44,080 --> 00:22:50,240
then we come up with

558
00:22:47,520 --> 00:22:50,240
phi cell

559
00:22:50,320 --> 00:22:56,960
to make sure

560
00:22:52,720 --> 00:23:00,080
the imaginary table is filled

561
00:22:56,960 --> 00:23:03,679
correctly or validly

562
00:23:00,080 --> 00:23:03,679
and we make sure

563
00:23:04,320 --> 00:23:09,120
the first row of the table

564
00:23:07,200 --> 00:23:13,360
is filled

565
00:23:09,120 --> 00:23:14,320
the starting configuration of n and w

566
00:23:13,360 --> 00:23:16,480
and

567
00:23:14,320 --> 00:23:18,880
we make sure

568
00:23:16,480 --> 00:23:18,880
each

569
00:23:19,440 --> 00:23:25,760
row

570
00:23:20,640 --> 00:23:28,000
as a configuration of nmw

571
00:23:25,760 --> 00:23:29,200
legally according to the definition of

572
00:23:28,000 --> 00:23:30,559
the machine

573
00:23:29,200 --> 00:23:31,520
legally

574
00:23:30,559 --> 00:23:35,840
leads

575
00:23:31,520 --> 00:23:37,120
legally yields the next configuration on

576
00:23:35,840 --> 00:23:40,320
the title

577
00:23:37,120 --> 00:23:44,480
that's the job of find move okay

578
00:23:40,320 --> 00:23:46,799
then we check if there is any

579
00:23:44,480 --> 00:23:50,559
blank on the table

580
00:23:46,799 --> 00:23:51,440
filled with q accept

581
00:23:50,559 --> 00:23:52,240
okay

582
00:23:51,440 --> 00:23:53,279
so

583
00:23:52,240 --> 00:23:55,919
now

584
00:23:53,279 --> 00:23:57,279
this would be our

585
00:23:55,919 --> 00:23:59,279
output

586
00:23:57,279 --> 00:24:01,840
when given n

587
00:23:59,279 --> 00:24:01,840
and w

588
00:24:03,520 --> 00:24:07,919
okay

589
00:24:05,600 --> 00:24:10,480
so that means

590
00:24:07,919 --> 00:24:14,240
again that means

591
00:24:10,480 --> 00:24:14,240
for any language a

592
00:24:14,799 --> 00:24:19,640
if

593
00:24:16,000 --> 00:24:19,640
you want to

594
00:24:20,640 --> 00:24:27,600
determine whether or not w is in a is in

595
00:24:25,440 --> 00:24:27,600
a

596
00:24:28,159 --> 00:24:33,279
the process we just present

597
00:24:31,679 --> 00:24:35,440
is

598
00:24:33,279 --> 00:24:37,200
a computable function

599
00:24:35,440 --> 00:24:39,360
to map

600
00:24:37,200 --> 00:24:42,559
the w

601
00:24:39,360 --> 00:24:45,520
actually into the 5 here right

602
00:24:42,559 --> 00:24:46,720
okay into the 5 here

603
00:24:45,520 --> 00:24:47,600
and

604
00:24:46,720 --> 00:24:51,279
if

605
00:24:47,600 --> 00:24:53,679
w is in a that means

606
00:24:51,279 --> 00:24:55,840
w

607
00:24:53,679 --> 00:24:57,520
given n you will get

608
00:24:55,840 --> 00:24:58,960
accept

609
00:24:57,520 --> 00:25:01,520
right

610
00:24:58,960 --> 00:25:03,520
the file here

611
00:25:01,520 --> 00:25:06,480
there will be

612
00:25:03,520 --> 00:25:07,919
choose assignment to satisfy the file

613
00:25:06,480 --> 00:25:11,559
here

614
00:25:07,919 --> 00:25:11,559
which choose assignment

615
00:25:14,080 --> 00:25:17,120
the machine n

616
00:25:17,200 --> 00:25:21,760
accepts

617
00:25:18,720 --> 00:25:25,120
the computation history of machine n to

618
00:25:21,760 --> 00:25:27,919
accept the input string w

619
00:25:25,120 --> 00:25:31,679
reflecting on the table and those

620
00:25:27,919 --> 00:25:34,240
content can be translated into the

621
00:25:31,679 --> 00:25:37,919
boolean variable truth assignment

622
00:25:34,240 --> 00:25:40,840
satisfying the five year so the five

623
00:25:37,919 --> 00:25:44,240
here is in

624
00:25:40,840 --> 00:25:46,880
sat right and we know that

625
00:25:44,240 --> 00:25:48,080
if w is in a

626
00:25:46,880 --> 00:25:50,640
then

627
00:25:48,080 --> 00:25:54,799
the boolean formula we converted

628
00:25:50,640 --> 00:25:57,600
is satisfiable that is 5 is in set

629
00:25:54,799 --> 00:26:00,480
on the other hand

630
00:25:57,600 --> 00:26:02,480
if we know that

631
00:26:00,480 --> 00:26:06,720
the 5

632
00:26:02,480 --> 00:26:06,720
the 5 here is in set

633
00:26:07,200 --> 00:26:11,360
we translate

634
00:26:09,039 --> 00:26:12,400
the truth assignment for these boolean

635
00:26:11,360 --> 00:26:13,279
variables

636
00:26:12,400 --> 00:26:14,960
back

637
00:26:13,279 --> 00:26:18,159
to the table

638
00:26:14,960 --> 00:26:18,159
then the table

639
00:26:18,320 --> 00:26:27,039
is the computational history of

640
00:26:22,039 --> 00:26:28,960
non-deterministic machine n accepting w

641
00:26:27,039 --> 00:26:32,400
and by definition

642
00:26:28,960 --> 00:26:32,400
w is in a

643
00:26:33,760 --> 00:26:38,400
so the procedure we present

644
00:26:36,799 --> 00:26:40,320
is actually

645
00:26:38,400 --> 00:26:42,400
the computable function

646
00:26:40,320 --> 00:26:44,559
and the computable function

647
00:26:42,400 --> 00:26:46,240
satisfy the definition of mapping

648
00:26:44,559 --> 00:26:47,120
reducibility

649
00:26:46,240 --> 00:26:48,480
why

650
00:26:47,120 --> 00:26:50,320
because

651
00:26:48,480 --> 00:26:51,279
if w is in a

652
00:26:50,320 --> 00:26:56,080
our

653
00:26:51,279 --> 00:26:57,440
formula is satisfiable and vice versa

654
00:26:56,080 --> 00:26:59,679
okay

655
00:26:57,440 --> 00:27:02,240
and more importantly

656
00:26:59,679 --> 00:27:03,200
a here

657
00:27:02,240 --> 00:27:08,480
can be

658
00:27:03,200 --> 00:27:08,480
any language in np

659
00:27:08,640 --> 00:27:12,880
so

660
00:27:10,000 --> 00:27:13,919
every language in mp

661
00:27:12,880 --> 00:27:17,760
can be

662
00:27:13,919 --> 00:27:20,760
reduced mapping reduced to

663
00:27:17,760 --> 00:27:20,760
sat

664
00:27:21,679 --> 00:27:24,799
okay

665
00:27:22,559 --> 00:27:24,799
so

666
00:27:25,440 --> 00:27:29,600
we have proved that

667
00:27:27,200 --> 00:27:32,159
we have proved that

668
00:27:29,600 --> 00:27:35,840
every language in mp can be

669
00:27:32,159 --> 00:27:37,120
mapping reducible to sat

670
00:27:35,840 --> 00:27:38,559
but

671
00:27:37,120 --> 00:27:41,919
is the

672
00:27:38,559 --> 00:27:43,039
computable function here

673
00:27:41,919 --> 00:27:44,240
can be

674
00:27:43,039 --> 00:27:46,559
uh

675
00:27:44,240 --> 00:27:50,480
is the computable function here a

676
00:27:46,559 --> 00:27:53,840
polynomial reduce a reduction

677
00:27:50,480 --> 00:27:55,600
so let's take a look at this so that's a

678
00:27:53,840 --> 00:27:58,240
analysis of the

679
00:27:55,600 --> 00:27:59,919
uh presented in the textbook so you can

680
00:27:58,240 --> 00:28:04,559
take a look at this but

681
00:27:59,919 --> 00:28:04,559
simply put simply put

682
00:28:04,720 --> 00:28:08,880
the whole table

683
00:28:07,360 --> 00:28:11,760
is a

684
00:28:08,880 --> 00:28:15,279
polynomial of n right

685
00:28:11,760 --> 00:28:17,600
and you can clearly clearly see that

686
00:28:15,279 --> 00:28:18,640
the length of y cell

687
00:28:17,600 --> 00:28:22,399
is

688
00:28:18,640 --> 00:28:24,559
well within polynomial of n

689
00:28:22,399 --> 00:28:26,880
probability 2k right

690
00:28:24,559 --> 00:28:30,039
actually 2k okay

691
00:28:26,880 --> 00:28:30,039
and then

692
00:28:30,399 --> 00:28:33,679
this one

693
00:28:31,679 --> 00:28:34,960
is only

694
00:28:33,679 --> 00:28:38,960
this

695
00:28:34,960 --> 00:28:42,480
long right and this one is 2k

696
00:28:38,960 --> 00:28:44,799
and this one is still 2k

697
00:28:42,480 --> 00:28:47,120
as i've explained earlier

698
00:28:44,799 --> 00:28:50,159
the size of the

699
00:28:47,120 --> 00:28:53,919
formula for legal windows

700
00:28:50,159 --> 00:28:57,679
is irrelevant to the length input length

701
00:28:53,919 --> 00:28:59,360
of input string so it's independent of n

702
00:28:57,679 --> 00:29:02,480
so it's constant

703
00:28:59,360 --> 00:29:04,399
then we just need to take a

704
00:29:02,480 --> 00:29:08,640
need to uh care about

705
00:29:04,399 --> 00:29:10,480
how many of it so that's actually 2k so

706
00:29:08,640 --> 00:29:13,440
everything is well

707
00:29:10,480 --> 00:29:16,559
in

708
00:29:13,440 --> 00:29:17,760
big o of n2 d2k

709
00:29:16,559 --> 00:29:19,679
okay

710
00:29:17,760 --> 00:29:22,640
but actually it is a

711
00:29:19,679 --> 00:29:23,440
you know it is a rough estimation

712
00:29:22,640 --> 00:29:25,840
uh

713
00:29:23,440 --> 00:29:27,840
in theory if you really want to

714
00:29:25,840 --> 00:29:30,960
write a program to do a conversion you

715
00:29:27,840 --> 00:29:33,919
actually at least need a little more

716
00:29:30,960 --> 00:29:35,760
okay so you will uh

717
00:29:33,919 --> 00:29:38,240
increase by

718
00:29:35,760 --> 00:29:41,279
big o of log n because you want to do

719
00:29:38,240 --> 00:29:42,399
the memory by numbering i mean

720
00:29:41,279 --> 00:29:45,440
you see that

721
00:29:42,399 --> 00:29:47,360
1 1 1 2 1 3

722
00:29:45,440 --> 00:29:49,440
1 4 stuff like that

723
00:29:47,360 --> 00:29:51,279
and you need

724
00:29:49,440 --> 00:29:53,679
space

725
00:29:51,279 --> 00:29:57,039
to record

726
00:29:53,679 --> 00:30:00,480
the enumeration of your variables so

727
00:29:57,039 --> 00:30:02,399
that would that would need extra log but

728
00:30:00,480 --> 00:30:04,799
it doesn't really matter

729
00:30:02,399 --> 00:30:07,200
for talking about polynomial okay so

730
00:30:04,799 --> 00:30:09,039
that's what we said here

731
00:30:07,200 --> 00:30:10,640
so

732
00:30:09,039 --> 00:30:13,120
as i

733
00:30:10,640 --> 00:30:15,840
as i said

734
00:30:13,120 --> 00:30:19,279
the procedure we present here is making

735
00:30:15,840 --> 00:30:20,880
reducible and now it can be finished

736
00:30:19,279 --> 00:30:24,320
in polynomial time

737
00:30:20,880 --> 00:30:25,600
so the whole thing is a polynomial

738
00:30:24,320 --> 00:30:26,880
reduction

739
00:30:25,600 --> 00:30:28,240
okay

740
00:30:26,880 --> 00:30:32,159
so

741
00:30:28,240 --> 00:30:32,159
cook 11 theorem is proofed

742
00:30:33,120 --> 00:30:40,159
and now we know that s a t

743
00:30:38,080 --> 00:30:43,440
is and b complete

744
00:30:40,159 --> 00:30:47,279
and as it is the first np complete

745
00:30:43,440 --> 00:30:48,480
problem we haven't um well not we but

746
00:30:47,279 --> 00:30:51,279
you know

747
00:30:48,480 --> 00:30:55,279
first and b complete

748
00:30:51,279 --> 00:30:56,559
problem to be proved in history actually

749
00:30:55,279 --> 00:30:58,159
then we

750
00:30:56,559 --> 00:31:00,399
we can uh

751
00:30:58,159 --> 00:31:03,279
have

752
00:31:00,399 --> 00:31:05,279
another theorem that three set is also

753
00:31:03,279 --> 00:31:06,480
and be complete

754
00:31:05,279 --> 00:31:09,039
okay

755
00:31:06,480 --> 00:31:11,679
to prove three set is mp complete of

756
00:31:09,039 --> 00:31:14,320
course we can use

757
00:31:11,679 --> 00:31:16,960
we can use the theorem here

758
00:31:14,320 --> 00:31:18,720
so we now know that that is and be

759
00:31:16,960 --> 00:31:19,919
complete

760
00:31:18,720 --> 00:31:23,279
and

761
00:31:19,919 --> 00:31:24,320
we know three set is in np

762
00:31:23,279 --> 00:31:26,399
right

763
00:31:24,320 --> 00:31:27,679
because uh the same reason as said is

764
00:31:26,399 --> 00:31:32,399
nmp

765
00:31:27,679 --> 00:31:33,440
we can provide a reduction from

766
00:31:32,399 --> 00:31:34,720
set

767
00:31:33,440 --> 00:31:36,880
two

768
00:31:34,720 --> 00:31:39,600
three

769
00:31:36,880 --> 00:31:40,880
set to three sets then we can finish the

770
00:31:39,600 --> 00:31:42,960
proof

771
00:31:40,880 --> 00:31:44,559
but here we do

772
00:31:42,960 --> 00:31:48,080
another approach

773
00:31:44,559 --> 00:31:48,080
which is follow the

774
00:31:48,240 --> 00:31:52,240
proof of

775
00:31:49,519 --> 00:31:54,000
theorem 73

776
00:31:52,240 --> 00:31:55,840
that is mp complete

777
00:31:54,000 --> 00:31:58,880
after we get

778
00:31:55,840 --> 00:31:58,880
you know by sale

779
00:31:59,120 --> 00:32:05,519
five star five accept and fight move

780
00:32:02,000 --> 00:32:08,240
after we get these four

781
00:32:05,519 --> 00:32:10,720
after we get these four formula

782
00:32:08,240 --> 00:32:14,799
the overall formula

783
00:32:10,720 --> 00:32:16,080
is five you know five uh

784
00:32:14,799 --> 00:32:18,240
sale

785
00:32:16,080 --> 00:32:19,919
and

786
00:32:18,240 --> 00:32:21,200
five

787
00:32:19,919 --> 00:32:23,279
five star

788
00:32:21,200 --> 00:32:24,799
and

789
00:32:23,279 --> 00:32:25,760
five move

790
00:32:24,799 --> 00:32:29,840
and

791
00:32:25,760 --> 00:32:29,840
fi accept right

792
00:32:30,640 --> 00:32:34,480
we can just make

793
00:32:32,640 --> 00:32:38,799
the whole thing

794
00:32:34,480 --> 00:32:39,679
to be in cnn conjunction normal form

795
00:32:38,799 --> 00:32:42,000
okay

796
00:32:39,679 --> 00:32:46,159
if you look at this

797
00:32:42,000 --> 00:32:46,159
more closely you will find that

798
00:32:46,320 --> 00:32:52,000
you will find that

799
00:32:48,880 --> 00:32:54,480
5 cell itself

800
00:32:52,000 --> 00:32:56,720
is already

801
00:32:54,480 --> 00:32:58,960
in cnf actually

802
00:32:56,720 --> 00:33:02,480
and the phi star

803
00:32:58,960 --> 00:33:02,480
is also in cnf

804
00:33:03,360 --> 00:33:05,919
okay

805
00:33:04,159 --> 00:33:07,760
because it's a

806
00:33:05,919 --> 00:33:11,679
you know a lot of end

807
00:33:07,760 --> 00:33:14,799
variable and together if you think of

808
00:33:11,679 --> 00:33:17,200
one variable as a clause com

809
00:33:14,799 --> 00:33:18,880
as a close of one

810
00:33:17,200 --> 00:33:22,240
literal then

811
00:33:18,880 --> 00:33:26,159
the whole five stars five stars is

812
00:33:22,240 --> 00:33:27,120
in cnn the same reason goes to five move

813
00:33:26,159 --> 00:33:30,480
is

814
00:33:27,120 --> 00:33:33,039
one close a single close you have n to

815
00:33:30,480 --> 00:33:34,080
the 2k leader row in that clause so

816
00:33:33,039 --> 00:33:35,519
that's

817
00:33:34,080 --> 00:33:38,480
in cnf

818
00:33:35,519 --> 00:33:40,480
so the only part of it nothing already

819
00:33:38,480 --> 00:33:42,960
not already in cnf

820
00:33:40,480 --> 00:33:44,880
is five sorry

821
00:33:42,960 --> 00:33:48,559
not move

822
00:33:44,880 --> 00:33:52,159
except okay so the only component

823
00:33:48,559 --> 00:33:55,760
not already in cnf is actually five move

824
00:33:52,159 --> 00:33:58,640
you do the legal window thing right but

825
00:33:55,760 --> 00:33:59,679
it's quite easy to make it in cnf

826
00:33:58,640 --> 00:34:02,559
because

827
00:33:59,679 --> 00:34:05,440
you can we can use distribution law

828
00:34:02,559 --> 00:34:07,840
to distribute you know and through all

829
00:34:05,440 --> 00:34:09,440
things like that and you can make it

830
00:34:07,840 --> 00:34:13,679
easy

831
00:34:09,440 --> 00:34:15,359
to be in cnf so after you make each of

832
00:34:13,679 --> 00:34:18,399
them in cnf

833
00:34:15,359 --> 00:34:19,359
then you end all of them that's in c and

834
00:34:18,399 --> 00:34:23,280
f2

835
00:34:19,359 --> 00:34:25,440
right because cmf is

836
00:34:23,280 --> 00:34:27,919
some closed and some

837
00:34:25,440 --> 00:34:29,040
something like this then you if you have

838
00:34:27,919 --> 00:34:31,359
something

839
00:34:29,040 --> 00:34:34,800
in cf and together

840
00:34:31,359 --> 00:34:38,000
still in cnf

841
00:34:34,800 --> 00:34:40,720
so we can easily make the formula

842
00:34:38,000 --> 00:34:41,599
resultant formula from the previous

843
00:34:40,720 --> 00:34:44,079
proof

844
00:34:41,599 --> 00:34:46,079
to be in cnf

845
00:34:44,079 --> 00:34:49,040
okay that's the first step

846
00:34:46,079 --> 00:34:49,839
the second step is that we need to make

847
00:34:49,040 --> 00:34:53,839
it

848
00:34:49,839 --> 00:34:56,000
three c and f

849
00:34:53,839 --> 00:34:58,079
okay that's it that's uh

850
00:34:56,000 --> 00:34:59,520
uh that's what we want to talk about

851
00:34:58,079 --> 00:35:02,560
here

852
00:34:59,520 --> 00:35:04,960
so since in cnf you have

853
00:35:02,560 --> 00:35:07,200
many clothes and together

854
00:35:04,960 --> 00:35:07,200
right

855
00:35:07,760 --> 00:35:12,000
and

856
00:35:09,359 --> 00:35:13,280
you will have some literal ore

857
00:35:12,000 --> 00:35:16,400
or

858
00:35:13,280 --> 00:35:18,079
and what is 3cnf you met you need to

859
00:35:16,400 --> 00:35:20,320
make each of them

860
00:35:18,079 --> 00:35:23,440
three literals

861
00:35:20,320 --> 00:35:27,040
okay so for one literal

862
00:35:23,440 --> 00:35:29,119
close you just repeat that that little

863
00:35:27,040 --> 00:35:32,720
okay for for example you have

864
00:35:29,119 --> 00:35:33,920
one literal of one sorry a clause of one

865
00:35:32,720 --> 00:35:35,760
zero

866
00:35:33,920 --> 00:35:38,400
you just need to make

867
00:35:35,760 --> 00:35:41,760
something repeat twice then you you will

868
00:35:38,400 --> 00:35:44,640
have a three literal cost right and the

869
00:35:41,760 --> 00:35:47,760
same thing goes to

870
00:35:44,640 --> 00:35:50,480
and you just you know arbitrarily repeat

871
00:35:47,760 --> 00:35:52,480
one of them then it will become three

872
00:35:50,480 --> 00:35:53,599
and for everything already three then

873
00:35:52,480 --> 00:35:56,160
it's a three

874
00:35:53,599 --> 00:35:59,680
uh clause or three literal colors you

875
00:35:56,160 --> 00:36:01,200
don't need to change it so what we want

876
00:35:59,680 --> 00:36:03,599
to

877
00:36:01,200 --> 00:36:05,920
what we really want to uh

878
00:36:03,599 --> 00:36:08,079
handle is

879
00:36:05,920 --> 00:36:11,359
more than

880
00:36:08,079 --> 00:36:13,440
more than the clothes more than

881
00:36:11,359 --> 00:36:16,240
three liters

882
00:36:13,440 --> 00:36:18,560
for example if you have

883
00:36:16,240 --> 00:36:18,560
four

884
00:36:18,720 --> 00:36:24,720
uh four liter rows in the close

885
00:36:21,599 --> 00:36:27,599
our approach is to add

886
00:36:24,720 --> 00:36:29,680
one

887
00:36:27,599 --> 00:36:31,359
variable here

888
00:36:29,680 --> 00:36:34,000
to introduce

889
00:36:31,359 --> 00:36:35,839
new variable into the clause and

890
00:36:34,000 --> 00:36:38,079
separate the

891
00:36:35,839 --> 00:36:39,680
four literal calls into

892
00:36:38,079 --> 00:36:41,839
two clauses

893
00:36:39,680 --> 00:36:43,359
so now

894
00:36:41,839 --> 00:36:45,359
we make it

895
00:36:43,359 --> 00:36:48,400
a1 a2

896
00:36:45,359 --> 00:36:49,359
or the new variable

897
00:36:48,400 --> 00:36:50,960
and that's

898
00:36:49,359 --> 00:36:51,920
one close

899
00:36:50,960 --> 00:36:53,200
and then

900
00:36:51,920 --> 00:36:55,839
z bar

901
00:36:53,200 --> 00:36:59,280
the negation of our new variable

902
00:36:55,839 --> 00:37:01,280
or a three a four another clause and we

903
00:36:59,280 --> 00:37:04,000
do an end

904
00:37:01,280 --> 00:37:06,720
then we make

905
00:37:04,000 --> 00:37:08,240
uh three c and f out of

906
00:37:06,720 --> 00:37:09,040
uh

907
00:37:08,240 --> 00:37:12,320
the

908
00:37:09,040 --> 00:37:14,240
four literal clause

909
00:37:12,320 --> 00:37:15,520
and you might ask that

910
00:37:14,240 --> 00:37:18,079
uh

911
00:37:15,520 --> 00:37:21,599
well that they are not equivalent

912
00:37:18,079 --> 00:37:22,880
exactly we we don't we don't need

913
00:37:21,599 --> 00:37:24,000
equivalence

914
00:37:22,880 --> 00:37:25,200
okay

915
00:37:24,000 --> 00:37:27,119
so

916
00:37:25,200 --> 00:37:29,760
you need to be

917
00:37:27,119 --> 00:37:32,400
clear about it that we don't need

918
00:37:29,760 --> 00:37:34,240
equivalence here we just need mapping

919
00:37:32,400 --> 00:37:36,400
reducibility

920
00:37:34,240 --> 00:37:39,760
what is mapping reducibility

921
00:37:36,400 --> 00:37:39,760
the original one

922
00:37:40,560 --> 00:37:45,200
in set

923
00:37:43,119 --> 00:37:47,599
okay that would be the four

924
00:37:45,200 --> 00:37:49,680
little miracles

925
00:37:47,599 --> 00:37:52,160
if and only if

926
00:37:49,680 --> 00:37:55,200
the converted one

927
00:37:52,160 --> 00:37:59,760
is in three set

928
00:37:55,200 --> 00:38:01,839
we only need this relationship okay so

929
00:37:59,760 --> 00:38:03,839
why

930
00:38:01,839 --> 00:38:05,760
this way works

931
00:38:03,839 --> 00:38:08,240
because you see

932
00:38:05,760 --> 00:38:11,680
if the original

933
00:38:08,240 --> 00:38:15,839
formula can be satisfied that means a1

934
00:38:11,680 --> 00:38:18,960
a2 a3 a4 at least

935
00:38:15,839 --> 00:38:20,160
one of them is true

936
00:38:18,960 --> 00:38:23,760
right

937
00:38:20,160 --> 00:38:25,520
so for example let's say s

938
00:38:23,760 --> 00:38:28,880
a2 is true

939
00:38:25,520 --> 00:38:28,880
since a2 is true

940
00:38:29,040 --> 00:38:34,800
the converted formula

941
00:38:31,119 --> 00:38:35,760
this part can be made true by a2 to be

942
00:38:34,800 --> 00:38:36,720
true

943
00:38:35,760 --> 00:38:40,240
right

944
00:38:36,720 --> 00:38:43,280
then we can set our new variable z to

945
00:38:40,240 --> 00:38:44,720
force so z bar is true

946
00:38:43,280 --> 00:38:48,800
then

947
00:38:44,720 --> 00:38:51,599
this close can be made true by using z

948
00:38:48,800 --> 00:38:53,440
we set v to be false then it's true

949
00:38:51,599 --> 00:38:55,760
then the clause is true

950
00:38:53,440 --> 00:38:57,599
then the whole thing

951
00:38:55,760 --> 00:38:59,520
is true

952
00:38:57,599 --> 00:39:03,040
so the original

953
00:38:59,520 --> 00:39:06,240
formula can be satisfiable

954
00:39:03,040 --> 00:39:09,200
the modified can be satisfiable on the

955
00:39:06,240 --> 00:39:12,480
other hand on the other hand

956
00:39:09,200 --> 00:39:14,320
if the modified formula can be

957
00:39:12,480 --> 00:39:16,720
satisfiable

958
00:39:14,320 --> 00:39:18,079
that means

959
00:39:16,720 --> 00:39:21,359
uh

960
00:39:18,079 --> 00:39:23,440
okay i should say you will find that

961
00:39:21,359 --> 00:39:26,960
setting z

962
00:39:23,440 --> 00:39:30,320
the truth of z alone

963
00:39:26,960 --> 00:39:31,280
cannot satisfy the

964
00:39:30,320 --> 00:39:34,240
two

965
00:39:31,280 --> 00:39:37,599
clause we generated right

966
00:39:34,240 --> 00:39:41,040
because if you set z to be true then

967
00:39:37,599 --> 00:39:44,800
first one is true but c alone cannot

968
00:39:41,040 --> 00:39:48,240
make the second one to be true

969
00:39:44,800 --> 00:39:51,119
and the vice versa if you set z to false

970
00:39:48,240 --> 00:39:52,800
we can make the second one true but not

971
00:39:51,119 --> 00:39:54,320
the first one

972
00:39:52,800 --> 00:39:58,560
so

973
00:39:54,320 --> 00:40:00,880
if the whole modified formula

974
00:39:58,560 --> 00:40:06,880
is true

975
00:40:00,880 --> 00:40:07,680
a1 a2 a3 a4 at least one of them is true

976
00:40:06,880 --> 00:40:11,119
right

977
00:40:07,680 --> 00:40:13,359
so the original formula

978
00:40:11,119 --> 00:40:16,480
is satisfiable

979
00:40:13,359 --> 00:40:18,640
so that's why

980
00:40:16,480 --> 00:40:21,359
the procedure works

981
00:40:18,640 --> 00:40:23,920
that's why we have

982
00:40:21,359 --> 00:40:25,200
a mapping with disability relationship

983
00:40:23,920 --> 00:40:28,079
between

984
00:40:25,200 --> 00:40:29,040
the original formula and the modified

985
00:40:28,079 --> 00:40:32,480
formula

986
00:40:29,040 --> 00:40:35,520
again they are not equivalent and we

987
00:40:32,480 --> 00:40:36,640
don't need equivalent

988
00:40:35,520 --> 00:40:38,720
that's the

989
00:40:36,640 --> 00:40:42,319
point

990
00:40:38,720 --> 00:40:44,880
okay don't be confused with

991
00:40:42,319 --> 00:40:45,760
we are actually maybe your disability

992
00:40:44,880 --> 00:40:47,839
right

993
00:40:45,760 --> 00:40:50,000
we have emphasized that

994
00:40:47,839 --> 00:40:52,480
don't think too much don't don't

995
00:40:50,000 --> 00:40:53,760
overthink it we just need this

996
00:40:52,480 --> 00:40:54,800
relationship

997
00:40:53,760 --> 00:40:56,480
okay

998
00:40:54,800 --> 00:41:00,000
so

999
00:40:56,480 --> 00:41:01,200
for l variables we can do the same

1000
00:41:00,000 --> 00:41:05,680
so

1001
00:41:01,200 --> 00:41:08,400
we separate a1 a2 first then we add z1

1002
00:41:05,680 --> 00:41:12,400
then we do z1 bar z2

1003
00:41:08,400 --> 00:41:15,760
with a3 z2 bar z3

1004
00:41:12,400 --> 00:41:17,200
with a4 and finally

1005
00:41:15,760 --> 00:41:20,240
the

1006
00:41:17,200 --> 00:41:21,280
arrow minus 3 bar with the last two

1007
00:41:20,240 --> 00:41:23,359
variables

1008
00:41:21,280 --> 00:41:24,319
and the same argument

1009
00:41:23,359 --> 00:41:27,200
if

1010
00:41:24,319 --> 00:41:27,200
the original

1011
00:41:27,760 --> 00:41:31,280
if the original

1012
00:41:30,160 --> 00:41:32,839
formula

1013
00:41:31,280 --> 00:41:36,319
is

1014
00:41:32,839 --> 00:41:36,319
in that

1015
00:41:36,400 --> 00:41:42,760
we know that

1016
00:41:38,800 --> 00:41:42,760
we can manipulate

1017
00:41:42,800 --> 00:41:46,319
we can manipulate z

1018
00:41:46,720 --> 00:41:52,000
to make everything true

1019
00:41:48,880 --> 00:41:54,800
so let's count it okay so we have

1020
00:41:52,000 --> 00:41:56,880
totally l minus two closed

1021
00:41:54,800 --> 00:42:00,480
and we add

1022
00:41:56,880 --> 00:42:04,079
l minus three new variables

1023
00:42:00,480 --> 00:42:07,200
so if the original one can

1024
00:42:04,079 --> 00:42:08,800
be satisfied that means one of a one

1025
00:42:07,200 --> 00:42:11,839
through a l

1026
00:42:08,800 --> 00:42:13,520
at least one of them is true

1027
00:42:11,839 --> 00:42:17,200
so

1028
00:42:13,520 --> 00:42:19,440
that one can make one of the l minus 2

1029
00:42:17,200 --> 00:42:22,400
closest to be true

1030
00:42:19,440 --> 00:42:24,960
then we can manipulate the arrow minus 3

1031
00:42:22,400 --> 00:42:26,400
variables to make the

1032
00:42:24,960 --> 00:42:29,599
whole

1033
00:42:26,400 --> 00:42:30,480
phi prime to be true that's no problem

1034
00:42:29,599 --> 00:42:33,440
and

1035
00:42:30,480 --> 00:42:34,880
on the other hand if we know that phi

1036
00:42:33,440 --> 00:42:35,680
prime is true

1037
00:42:34,880 --> 00:42:37,280
that

1038
00:42:35,680 --> 00:42:42,000
that means

1039
00:42:37,280 --> 00:42:44,880
at this the 1 of a 1 a 2 to a l

1040
00:42:42,000 --> 00:42:48,079
must be true one of them at least

1041
00:42:44,880 --> 00:42:51,599
why because we can only manipulate our

1042
00:42:48,079 --> 00:42:52,800
new variables actually l minus three new

1043
00:42:51,599 --> 00:42:54,560
variables

1044
00:42:52,800 --> 00:42:58,960
to satisfy

1045
00:42:54,560 --> 00:43:02,000
l minus three clauses and the final one

1046
00:42:58,960 --> 00:43:04,319
must be satisfied by the original

1047
00:43:02,000 --> 00:43:06,079
variables from

1048
00:43:04,319 --> 00:43:09,280
phi here

1049
00:43:06,079 --> 00:43:13,119
right and that variable alone

1050
00:43:09,280 --> 00:43:14,240
can make the whole thing true

1051
00:43:13,119 --> 00:43:16,480
okay

1052
00:43:14,240 --> 00:43:16,480
so

1053
00:43:19,119 --> 00:43:21,440
we may

1054
00:43:21,760 --> 00:43:26,880
easily convert

1055
00:43:24,560 --> 00:43:28,400
the formula obtained

1056
00:43:26,880 --> 00:43:31,760
from

1057
00:43:28,400 --> 00:43:34,880
the proof of cook 11 theorem and convert

1058
00:43:31,760 --> 00:43:37,520
it to 3 er 2b uh

1059
00:43:34,880 --> 00:43:38,319
to a formula in 3c and f

1060
00:43:37,520 --> 00:43:39,760
so

1061
00:43:38,319 --> 00:43:42,319
go

1062
00:43:39,760 --> 00:43:43,920
based on the same logic we know that

1063
00:43:42,319 --> 00:43:46,079
three sets

1064
00:43:43,920 --> 00:43:50,240
is come np complete

1065
00:43:46,079 --> 00:43:50,240
okay so he said it's np complete

1066
00:43:51,680 --> 00:43:56,880
okay

1067
00:43:53,200 --> 00:44:00,640
although sap satisfiability is our first

1068
00:43:56,880 --> 00:44:00,640
mb complete problem but

1069
00:44:02,000 --> 00:44:04,880
we use

1070
00:44:03,040 --> 00:44:08,400
we usually use

1071
00:44:04,880 --> 00:44:09,839
three sets to prove other problems to b

1072
00:44:08,400 --> 00:44:13,119
and d complete

1073
00:44:09,839 --> 00:44:16,560
why because threeset is you know

1074
00:44:13,119 --> 00:44:17,760
uh the form the form of threeset is

1075
00:44:16,560 --> 00:44:22,560
quite

1076
00:44:17,760 --> 00:44:25,920
regular quite limited because you have

1077
00:44:22,560 --> 00:44:28,720
clauses and each clause is exactly has

1078
00:44:25,920 --> 00:44:30,720
three leader roles in this way it's very

1079
00:44:28,720 --> 00:44:33,440
easy to manipulate

1080
00:44:30,720 --> 00:44:35,280
that is why we usually use three sets to

1081
00:44:33,440 --> 00:44:37,520
prove other

1082
00:44:35,280 --> 00:44:39,280
problem to be mp complete

1083
00:44:37,520 --> 00:44:40,640
let's have some

1084
00:44:39,280 --> 00:44:42,480
cases here

1085
00:44:40,640 --> 00:44:44,000
some showcases here

1086
00:44:42,480 --> 00:44:46,560
so see

1087
00:44:44,000 --> 00:44:47,680
we now prove that preset is and be

1088
00:44:46,560 --> 00:44:51,040
complete

1089
00:44:47,680 --> 00:44:54,560
then we want to apply

1090
00:44:51,040 --> 00:44:57,040
theorem here okay oh sorry it's bad i

1091
00:44:54,560 --> 00:44:57,920
should draw this way

1092
00:44:57,040 --> 00:44:58,960
right

1093
00:44:57,920 --> 00:45:01,760
so

1094
00:44:58,960 --> 00:45:03,760
don't forget the all uh

1095
00:45:01,760 --> 00:45:04,720
i don't know that order by the procedure

1096
00:45:03,760 --> 00:45:05,760
here

1097
00:45:04,720 --> 00:45:07,040
we now

1098
00:45:05,760 --> 00:45:08,800
know that

1099
00:45:07,040 --> 00:45:11,280
three sets

1100
00:45:08,800 --> 00:45:13,680
is and be complete

1101
00:45:11,280 --> 00:45:14,720
and the four

1102
00:45:13,680 --> 00:45:17,280
sum

1103
00:45:14,720 --> 00:45:19,119
problem in np

1104
00:45:17,280 --> 00:45:20,720
as long as

1105
00:45:19,119 --> 00:45:23,040
we can

1106
00:45:20,720 --> 00:45:26,160
develop

1107
00:45:23,040 --> 00:45:26,160
polynomial time

1108
00:45:26,240 --> 00:45:30,640
reduction making reduction

1109
00:45:28,640 --> 00:45:34,720
to the problem

1110
00:45:30,640 --> 00:45:37,760
we prove that the problem is in

1111
00:45:34,720 --> 00:45:40,560
sorry is empty complete

1112
00:45:37,760 --> 00:45:41,920
right according to this theorem

1113
00:45:40,560 --> 00:45:43,839
then

1114
00:45:41,920 --> 00:45:46,319
what we already we

1115
00:45:43,839 --> 00:45:48,400
we already have

1116
00:45:46,319 --> 00:45:49,760
because

1117
00:45:48,400 --> 00:45:51,839
we already

1118
00:45:49,760 --> 00:45:54,880
showed that

1119
00:45:51,839 --> 00:45:57,839
there is a polynomial time

1120
00:45:54,880 --> 00:46:00,240
actually we already showed that first

1121
00:45:57,839 --> 00:46:01,040
clique is an emp

1122
00:46:00,240 --> 00:46:03,520
right

1123
00:46:01,040 --> 00:46:04,640
because click is one of the

1124
00:46:03,520 --> 00:46:06,400
uh

1125
00:46:04,640 --> 00:46:09,359
let me

1126
00:46:06,400 --> 00:46:09,359
be sure about it

1127
00:46:09,920 --> 00:46:13,680
no okay

1128
00:46:11,200 --> 00:46:15,280
firstly clicker is in mp

1129
00:46:13,680 --> 00:46:17,359
why

1130
00:46:15,280 --> 00:46:19,119
why clicker is empty

1131
00:46:17,359 --> 00:46:21,839
uh

1132
00:46:19,119 --> 00:46:21,839
because if

1133
00:46:22,160 --> 00:46:29,560
actually we we we have clinton

1134
00:46:26,000 --> 00:46:29,560
okay doesn't matter

1135
00:46:33,280 --> 00:46:38,079
we can have a polynomial time verifier

1136
00:46:36,720 --> 00:46:40,079
for click

1137
00:46:38,079 --> 00:46:41,040
right because for

1138
00:46:40,079 --> 00:46:43,599
g

1139
00:46:41,040 --> 00:46:47,520
k

1140
00:46:43,599 --> 00:46:49,599
if uh it's it should be quite uh

1141
00:46:47,520 --> 00:46:52,000
relatively easy for you to write a

1142
00:46:49,599 --> 00:46:55,599
program a common program

1143
00:46:52,000 --> 00:46:57,839
and take the graph here and take

1144
00:46:55,599 --> 00:47:00,720
a sorry take the problem here and

1145
00:46:57,839 --> 00:47:02,720
someone give you k notes

1146
00:47:00,720 --> 00:47:04,560
and you verify if

1147
00:47:02,720 --> 00:47:06,640
these nodes is

1148
00:47:04,560 --> 00:47:07,920
on the graph and then

1149
00:47:06,640 --> 00:47:10,240
these nodes

1150
00:47:07,920 --> 00:47:13,359
really connect to each other then you

1151
00:47:10,240 --> 00:47:15,599
report yes so that's verifier the

1152
00:47:13,359 --> 00:47:16,880
implementation of such a

1153
00:47:15,599 --> 00:47:18,240
polynomial time verify is

1154
00:47:16,880 --> 00:47:19,680
straightforward

1155
00:47:18,240 --> 00:47:22,839
so one

1156
00:47:19,680 --> 00:47:26,079
click is in mp

1157
00:47:22,839 --> 00:47:28,400
two for the definition of polynomial

1158
00:47:26,079 --> 00:47:28,400
time

1159
00:47:28,880 --> 00:47:34,000
reduction

1160
00:47:30,000 --> 00:47:34,800
we have clique as our example

1161
00:47:34,000 --> 00:47:36,720
right

1162
00:47:34,800 --> 00:47:39,839
if you don't remember that you can go

1163
00:47:36,720 --> 00:47:39,839
back to

1164
00:47:40,800 --> 00:47:46,720
this part

1165
00:47:42,880 --> 00:47:46,720
whenever you are given

1166
00:47:46,880 --> 00:47:52,480
a boolean formula in three cnf you can

1167
00:47:50,400 --> 00:47:54,160
convert

1168
00:47:52,480 --> 00:47:55,520
a graph here

1169
00:47:54,160 --> 00:47:56,720
with

1170
00:47:55,520 --> 00:47:58,880
the number

1171
00:47:56,720 --> 00:48:00,319
of

1172
00:47:58,880 --> 00:48:03,359
clauses here

1173
00:48:00,319 --> 00:48:03,359
and this one

1174
00:48:05,280 --> 00:48:08,880
is the instance of click

1175
00:48:07,760 --> 00:48:11,119
right

1176
00:48:08,880 --> 00:48:13,280
so we have polynomial reduction from

1177
00:48:11,119 --> 00:48:16,960
preset to click

1178
00:48:13,280 --> 00:48:19,440
then combine these two facts

1179
00:48:16,960 --> 00:48:22,640
we know that

1180
00:48:19,440 --> 00:48:24,880
click ask and be complete

1181
00:48:22,640 --> 00:48:24,880
okay

1182
00:48:30,400 --> 00:48:35,440
so let's see another example here let's

1183
00:48:32,720 --> 00:48:38,480
say uh word is cover

1184
00:48:35,440 --> 00:48:38,480
okay where is color

1185
00:48:39,520 --> 00:48:45,119
if

1186
00:48:40,240 --> 00:48:45,119
given a undirected graph and

1187
00:48:45,920 --> 00:48:49,839
k

1188
00:48:46,880 --> 00:48:52,319
if that undirected graph has k note

1189
00:48:49,839 --> 00:48:54,480
where it is covered

1190
00:48:52,319 --> 00:48:56,720
as k node vertices cover

1191
00:48:54,480 --> 00:48:56,720
then

1192
00:48:57,920 --> 00:49:02,079
the input string is in

1193
00:49:00,559 --> 00:49:03,839
the

1194
00:49:02,079 --> 00:49:05,520
language

1195
00:49:03,839 --> 00:49:07,920
and we want uh

1196
00:49:05,520 --> 00:49:09,440
that let's have an example

1197
00:49:07,920 --> 00:49:12,960
for uh

1198
00:49:09,440 --> 00:49:12,960
if you have a graph like this

1199
00:49:13,520 --> 00:49:18,319
okay

1200
00:49:14,880 --> 00:49:22,000
so it's a bad okay this is much better

1201
00:49:18,319 --> 00:49:25,200
because we have one color of that graph

1202
00:49:22,000 --> 00:49:28,400
see if we choose this node

1203
00:49:25,200 --> 00:49:31,680
if we choose this node we cover

1204
00:49:28,400 --> 00:49:34,000
this uh this age this age this age and

1205
00:49:31,680 --> 00:49:35,440
this edge

1206
00:49:34,000 --> 00:49:38,400
uh this yeah

1207
00:49:35,440 --> 00:49:38,400
then you uh

1208
00:49:38,880 --> 00:49:42,720
you if you choose this one then you

1209
00:49:40,880 --> 00:49:44,640
cover this one and

1210
00:49:42,720 --> 00:49:46,319
choose this one or this one you cover

1211
00:49:44,640 --> 00:49:48,880
another one so

1212
00:49:46,319 --> 00:49:50,880
this graph has a three color

1213
00:49:48,880 --> 00:49:53,920
right three notes three vertices cover

1214
00:49:50,880 --> 00:49:55,839
to cover all the h you choose vertices

1215
00:49:53,920 --> 00:49:58,880
to cover h

1216
00:49:55,839 --> 00:49:58,880
that's why it's

1217
00:50:00,000 --> 00:50:03,839
very discovered

1218
00:50:01,599 --> 00:50:06,880
then we want to reduce three set to

1219
00:50:03,839 --> 00:50:08,559
vertex cover that means if we are given

1220
00:50:06,880 --> 00:50:11,760
a three cnf

1221
00:50:08,559 --> 00:50:12,960
we need to output you know a graph and a

1222
00:50:11,760 --> 00:50:14,960
k

1223
00:50:12,960 --> 00:50:16,240
4 vertice color

1224
00:50:14,960 --> 00:50:18,160
so

1225
00:50:16,240 --> 00:50:20,960
as an example here

1226
00:50:18,160 --> 00:50:23,839
if we have

1227
00:50:20,960 --> 00:50:25,359
formula in string c and f like this

1228
00:50:23,839 --> 00:50:27,920
okay

1229
00:50:25,359 --> 00:50:29,520
so of course you can go through the

1230
00:50:27,920 --> 00:50:31,119
formula first

1231
00:50:29,520 --> 00:50:34,720
then you know

1232
00:50:31,119 --> 00:50:38,880
you have two variables x1 and x2

1233
00:50:34,720 --> 00:50:41,520
so to produce the graph we output x1 and

1234
00:50:38,880 --> 00:50:44,559
x1 bar

1235
00:50:41,520 --> 00:50:45,839
and x2 and x2 bar

1236
00:50:44,559 --> 00:50:47,280
okay

1237
00:50:45,839 --> 00:50:48,400
so

1238
00:50:47,280 --> 00:50:52,160
this

1239
00:50:48,400 --> 00:50:55,599
the upper part is for boolean variables

1240
00:50:52,160 --> 00:50:58,319
so we write uh we output

1241
00:50:55,599 --> 00:51:02,559
something like this way something like

1242
00:50:58,319 --> 00:51:05,520
this to represent each boolean variable

1243
00:51:02,559 --> 00:51:07,280
the variable and its negation okay

1244
00:51:05,520 --> 00:51:09,359
then

1245
00:51:07,280 --> 00:51:13,359
we output

1246
00:51:09,359 --> 00:51:16,160
this part for each clause so you see x y

1247
00:51:13,359 --> 00:51:20,160
x and x 2 first clause

1248
00:51:16,160 --> 00:51:23,680
x 1 bar x 2 bar x 2 bar second cause

1249
00:51:20,160 --> 00:51:25,119
x 1 bar x 2 x x2 third clause

1250
00:51:23,680 --> 00:51:26,559
okay

1251
00:51:25,119 --> 00:51:30,800
then

1252
00:51:26,559 --> 00:51:33,359
we just connect the upper part

1253
00:51:30,800 --> 00:51:35,359
and the bottom part

1254
00:51:33,359 --> 00:51:39,040
connects the same

1255
00:51:35,359 --> 00:51:45,200
literal so you see x1 x1

1256
00:51:39,040 --> 00:51:47,119
x1 bar x1 bar x2 x2 x2 bar x2 x2 that's

1257
00:51:45,200 --> 00:51:48,319
it

1258
00:51:47,119 --> 00:51:50,640
so

1259
00:51:48,319 --> 00:51:52,960
the conversion is pretty easy

1260
00:51:50,640 --> 00:51:55,200
go through the formula ones and you will

1261
00:51:52,960 --> 00:51:59,040
know how many variables you have and

1262
00:51:55,200 --> 00:52:01,280
then output you know

1263
00:51:59,040 --> 00:52:03,680
this thing for each variable

1264
00:52:01,280 --> 00:52:06,480
and output

1265
00:52:03,680 --> 00:52:10,880
this thing for each clause

1266
00:52:06,480 --> 00:52:14,040
and then connect the same one that's it

1267
00:52:10,880 --> 00:52:14,040
and then

1268
00:52:24,480 --> 00:52:26,880
how many

1269
00:52:25,599 --> 00:52:28,400
since we have

1270
00:52:26,880 --> 00:52:30,640
g here right

1271
00:52:28,400 --> 00:52:31,599
g here

1272
00:52:30,640 --> 00:52:33,280
and

1273
00:52:31,599 --> 00:52:37,119
what is the k

1274
00:52:33,280 --> 00:52:37,839
we need to set for this problem instance

1275
00:52:37,119 --> 00:52:40,400
for

1276
00:52:37,839 --> 00:52:40,400
this part

1277
00:52:40,640 --> 00:52:43,440
we want to

1278
00:52:44,839 --> 00:52:47,680
uh

1279
00:52:46,800 --> 00:52:50,640
okay

1280
00:52:47,680 --> 00:52:51,760
we have three clothes right so three

1281
00:52:50,640 --> 00:52:53,200
cross

1282
00:52:51,760 --> 00:52:56,000
and uh

1283
00:52:53,200 --> 00:52:58,160
multiply by two plus

1284
00:52:56,000 --> 00:53:01,920
two boolean variables

1285
00:52:58,160 --> 00:53:04,000
so in this case we want to set uh

1286
00:53:01,920 --> 00:53:06,319
eight right

1287
00:53:04,000 --> 00:53:06,319
eight

1288
00:53:07,359 --> 00:53:10,720
so that would be the output of the

1289
00:53:09,680 --> 00:53:12,160
conversion

1290
00:53:10,720 --> 00:53:13,680
so again

1291
00:53:12,160 --> 00:53:15,839
we output this one

1292
00:53:13,680 --> 00:53:15,839
and

1293
00:53:17,040 --> 00:53:21,680
give eight so that would be the versus

1294
00:53:20,079 --> 00:53:23,280
cover

1295
00:53:21,680 --> 00:53:25,280
instance

1296
00:53:23,280 --> 00:53:29,559
then why um

1297
00:53:25,280 --> 00:53:29,559
why this uh conversion

1298
00:53:30,880 --> 00:53:36,240
why

1299
00:53:31,760 --> 00:53:39,040
is this conversion of maple reducibility

1300
00:53:36,240 --> 00:53:39,040
because you see

1301
00:53:39,200 --> 00:53:43,760
if this formula is satisfiable that

1302
00:53:42,480 --> 00:53:44,880
means

1303
00:53:43,760 --> 00:53:47,359
that means

1304
00:53:44,880 --> 00:53:50,079
at least the one of literal for each

1305
00:53:47,359 --> 00:53:51,280
cause is true

1306
00:53:50,079 --> 00:53:53,520
right

1307
00:53:51,280 --> 00:53:53,520
so

1308
00:53:55,119 --> 00:53:58,880
uh

1309
00:53:57,440 --> 00:54:01,920
if we choose

1310
00:53:58,880 --> 00:54:04,559
if we select the node correspond

1311
00:54:01,920 --> 00:54:07,599
for the upper bar for the upper body we

1312
00:54:04,559 --> 00:54:10,880
choose the literal the true literal and

1313
00:54:07,599 --> 00:54:12,640
for the bottom part we choose

1314
00:54:10,880 --> 00:54:15,119
the close

1315
00:54:12,640 --> 00:54:17,760
uh within a clause we choose the two

1316
00:54:15,119 --> 00:54:18,960
variable uh the two literal the two

1317
00:54:17,760 --> 00:54:20,880
liter rows

1318
00:54:18,960 --> 00:54:22,160
that are not that

1319
00:54:20,880 --> 00:54:24,559
are not true

1320
00:54:22,160 --> 00:54:25,359
then that will be a versus cover

1321
00:54:24,559 --> 00:54:26,160
okay

1322
00:54:25,359 --> 00:54:30,160
why

1323
00:54:26,160 --> 00:54:30,160
because you see uh let's say

1324
00:54:30,960 --> 00:54:34,319
uh

1325
00:54:31,920 --> 00:54:35,359
i really don't i really don't remember

1326
00:54:34,319 --> 00:54:39,839
which one

1327
00:54:35,359 --> 00:54:39,839
so let's say uh if x1

1328
00:54:41,680 --> 00:54:46,880
if x1 is true it's false

1329
00:54:44,559 --> 00:54:48,240
then we choose these two and this one is

1330
00:54:46,880 --> 00:54:49,200
true right

1331
00:54:48,240 --> 00:54:52,559
and

1332
00:54:49,200 --> 00:54:55,200
choose these two

1333
00:54:52,559 --> 00:54:55,200
and uh

1334
00:54:56,880 --> 00:55:02,880
okay so that would be a uh sorry

1335
00:55:00,720 --> 00:55:05,119
it doesn't really matter we choose which

1336
00:55:02,880 --> 00:55:06,960
two which two hit here right or for

1337
00:55:05,119 --> 00:55:08,079
example these two

1338
00:55:06,960 --> 00:55:10,160
so

1339
00:55:08,079 --> 00:55:13,200
if x y is false

1340
00:55:10,160 --> 00:55:13,200
x two is true

1341
00:55:14,319 --> 00:55:17,119
so

1342
00:55:15,040 --> 00:55:19,520
this one's true right and this one is

1343
00:55:17,119 --> 00:55:24,000
true and o is true okay that

1344
00:55:19,520 --> 00:55:26,319
x one fourth x two true is a boolean

1345
00:55:24,000 --> 00:55:29,440
uh variable two assignment to make the

1346
00:55:26,319 --> 00:55:31,760
original formula to to satisfy

1347
00:55:29,440 --> 00:55:35,520
and then according to

1348
00:55:31,760 --> 00:55:38,240
the truth assignment we have x1 bar

1349
00:55:35,520 --> 00:55:42,640
selected x2 selected

1350
00:55:38,240 --> 00:55:44,880
and then for each close what we select

1351
00:55:42,640 --> 00:55:47,040
the lateral not true

1352
00:55:44,880 --> 00:55:49,280
but if you have more than

1353
00:55:47,040 --> 00:55:51,040
one literal to be true you can arbitrary

1354
00:55:49,280 --> 00:55:52,880
select two or two

1355
00:55:51,040 --> 00:55:55,680
uh literal okay

1356
00:55:52,880 --> 00:55:55,680
so in this case

1357
00:55:57,280 --> 00:56:01,280
we can have

1358
00:55:58,480 --> 00:56:04,559
eight vertices cover why because you can

1359
00:56:01,280 --> 00:56:06,960
see that for all the edges here for all

1360
00:56:04,559 --> 00:56:10,160
the ages here

1361
00:56:06,960 --> 00:56:11,200
the node we selected covers o h why

1362
00:56:10,160 --> 00:56:13,920
because

1363
00:56:11,200 --> 00:56:17,200
for the three

1364
00:56:13,920 --> 00:56:19,520
nodes representing close

1365
00:56:17,200 --> 00:56:20,319
as long as you select this true these

1366
00:56:19,520 --> 00:56:24,400
two

1367
00:56:20,319 --> 00:56:25,520
you cover this one this one and this one

1368
00:56:24,400 --> 00:56:27,680
right

1369
00:56:25,520 --> 00:56:32,559
and

1370
00:56:27,680 --> 00:56:32,559
cover this one and this one this one

1371
00:56:32,799 --> 00:56:36,240
okay

1372
00:56:34,000 --> 00:56:36,240
then

1373
00:56:37,839 --> 00:56:44,480
the boolean variable we selected on the

1374
00:56:40,720 --> 00:56:46,000
upper part covers all this h all this

1375
00:56:44,480 --> 00:56:46,880
edge

1376
00:56:46,000 --> 00:56:48,640
okay

1377
00:56:46,880 --> 00:56:51,280
and

1378
00:56:48,640 --> 00:56:51,280
for not

1379
00:56:51,359 --> 00:56:58,400
true we cover from the bottom to the top

1380
00:56:57,040 --> 00:57:00,400
so that's why

1381
00:56:58,400 --> 00:57:02,319
according to the truth assignments the

1382
00:57:00,400 --> 00:57:04,160
node we selected

1383
00:57:02,319 --> 00:57:07,200
covers all ages

1384
00:57:04,160 --> 00:57:09,680
okay so the converted instance is really

1385
00:57:07,200 --> 00:57:10,839
inverted cover

1386
00:57:09,680 --> 00:57:14,400
that'll

1387
00:57:10,839 --> 00:57:16,799
be this direction right

1388
00:57:14,400 --> 00:57:20,480
now the reverse direction

1389
00:57:16,799 --> 00:57:21,599
what how to uh how can we be sure that

1390
00:57:20,480 --> 00:57:24,720
if

1391
00:57:21,599 --> 00:57:28,319
this graph has a vertical eighth note

1392
00:57:24,720 --> 00:57:30,960
vertices cover then the original

1393
00:57:28,319 --> 00:57:32,319
formula is satisfiable

1394
00:57:30,960 --> 00:57:35,839
the reason

1395
00:57:32,319 --> 00:57:37,839
is the same and the easy because

1396
00:57:35,839 --> 00:57:41,440
look at

1397
00:57:37,839 --> 00:57:44,319
the structure here

1398
00:57:41,440 --> 00:57:48,240
look at the structure here

1399
00:57:44,319 --> 00:57:51,599
for this one you must select one

1400
00:57:48,240 --> 00:57:54,240
for this one you must select one why

1401
00:57:51,599 --> 00:57:55,920
because you if you don't select one of

1402
00:57:54,240 --> 00:57:59,520
the two

1403
00:57:55,920 --> 00:58:02,000
then the h in the middle will not be

1404
00:57:59,520 --> 00:58:04,799
covered at all

1405
00:58:02,000 --> 00:58:08,240
you want to cover this edge you have to

1406
00:58:04,799 --> 00:58:10,319
select either one of the two nodes right

1407
00:58:08,240 --> 00:58:13,359
so

1408
00:58:10,319 --> 00:58:16,480
we must select one like select this one

1409
00:58:13,359 --> 00:58:19,040
select this one right to make sure this

1410
00:58:16,480 --> 00:58:20,720
h is covered

1411
00:58:19,040 --> 00:58:22,880
then for the

1412
00:58:20,720 --> 00:58:25,280
three node structure here

1413
00:58:22,880 --> 00:58:26,799
for each of the three node structure you

1414
00:58:25,280 --> 00:58:28,240
have to select

1415
00:58:26,799 --> 00:58:30,079
two of them

1416
00:58:28,240 --> 00:58:32,400
to cover

1417
00:58:30,079 --> 00:58:34,559
these three edge

1418
00:58:32,400 --> 00:58:36,880
as long as you don't select uh select

1419
00:58:34,559 --> 00:58:40,000
two of the two of the three nodes you

1420
00:58:36,880 --> 00:58:43,680
won't cover the h so in order to cover o

1421
00:58:40,000 --> 00:58:46,319
h you have to select two of the three

1422
00:58:43,680 --> 00:58:47,839
two nodes out of the three

1423
00:58:46,319 --> 00:58:49,280
node structure

1424
00:58:47,839 --> 00:58:50,559
right

1425
00:58:49,280 --> 00:58:52,880
then

1426
00:58:50,559 --> 00:58:55,599
we have three

1427
00:58:52,880 --> 00:58:57,760
structure here

1428
00:58:55,599 --> 00:59:00,880
you have to select two of them

1429
00:58:57,760 --> 00:59:04,720
and for the upper part

1430
00:59:00,880 --> 00:59:06,240
you have you must select this way eighth

1431
00:59:04,720 --> 00:59:07,839
note

1432
00:59:06,240 --> 00:59:10,240
select eight note this way you don't

1433
00:59:07,839 --> 00:59:11,760
have other notes can select so eighth

1434
00:59:10,240 --> 00:59:13,920
note

1435
00:59:11,760 --> 00:59:13,920
so

1436
00:59:14,160 --> 00:59:19,359
after you select eighth note and up

1437
00:59:17,839 --> 00:59:21,520
a vertice cover

1438
00:59:19,359 --> 00:59:21,520
see

1439
00:59:23,280 --> 00:59:26,960
you select

1440
00:59:24,880 --> 00:59:29,440
that for example

1441
00:59:26,960 --> 00:59:30,319
these two nodes to cover the edge here

1442
00:59:29,440 --> 00:59:33,520
right

1443
00:59:30,319 --> 00:59:36,160
and you select these node

1444
00:59:33,520 --> 00:59:39,359
to cover the edge here

1445
00:59:36,160 --> 00:59:39,359
and you select

1446
00:59:39,839 --> 00:59:47,520
this node arbitrary to cover the

1447
00:59:43,599 --> 00:59:50,000
edge here and the cover latch here okay

1448
00:59:47,520 --> 00:59:53,119
after you have a node and you tell me

1449
00:59:50,000 --> 00:59:54,160
that okay it is a vertice cover that

1450
00:59:53,119 --> 00:59:55,680
means

1451
00:59:54,160 --> 00:59:58,079
in addition to

1452
00:59:55,680 --> 00:59:59,359
those edges we think the structure to

1453
00:59:58,079 --> 01:00:00,640
node structure and the three note

1454
00:59:59,359 --> 01:00:04,240
structure

1455
01:00:00,640 --> 01:00:05,839
those notes also cover

1456
01:00:04,240 --> 01:00:07,520
the edges

1457
01:00:05,839 --> 01:00:11,119
the edges

1458
01:00:07,520 --> 01:00:13,760
between the upper

1459
01:00:11,119 --> 01:00:16,240
part and the bottom part

1460
01:00:13,760 --> 01:00:18,799
so for this example see

1461
01:00:16,240 --> 01:00:19,760
it cover these two

1462
01:00:18,799 --> 01:00:22,559
and

1463
01:00:19,760 --> 01:00:26,160
that one cover this one

1464
01:00:22,559 --> 01:00:28,480
and this one cover this one and the same

1465
01:00:26,160 --> 01:00:31,359
thing here and here

1466
01:00:28,480 --> 01:00:33,839
and also of course both of you know

1467
01:00:31,359 --> 01:00:33,839
covered

1468
01:00:34,160 --> 01:00:39,359
if this happened

1469
01:00:36,319 --> 01:00:41,599
if the eighth note in this case selected

1470
01:00:39,359 --> 01:00:44,559
really is a vertice cover

1471
01:00:41,599 --> 01:00:47,280
then we just need to translate

1472
01:00:44,559 --> 01:00:48,799
the selection

1473
01:00:47,280 --> 01:00:50,000
to

1474
01:00:48,799 --> 01:00:52,799
boolean

1475
01:00:50,000 --> 01:00:53,599
choose assignment

1476
01:00:52,799 --> 01:00:55,520
and

1477
01:00:53,599 --> 01:00:58,720
that's green choose assignment while

1478
01:00:55,520 --> 01:00:59,920
satisfied must satisfy the original

1479
01:00:58,720 --> 01:01:00,799
formula

1480
01:00:59,920 --> 01:01:02,240
why

1481
01:01:00,799 --> 01:01:05,359
because

1482
01:01:02,240 --> 01:01:07,599
all the edges between all the edges

1483
01:01:05,359 --> 01:01:08,559
between the upper body and the bottom

1484
01:01:07,599 --> 01:01:11,799
part

1485
01:01:08,559 --> 01:01:11,799
are covered

1486
01:01:12,960 --> 01:01:15,680
this one

1487
01:01:14,079 --> 01:01:18,480
covered

1488
01:01:15,680 --> 01:01:19,920
those two so

1489
01:01:18,480 --> 01:01:22,960
that means

1490
01:01:19,920 --> 01:01:26,000
these two clothes can be

1491
01:01:22,960 --> 01:01:28,160
satisfied by having

1492
01:01:26,000 --> 01:01:29,280
this variable to this little row to be

1493
01:01:28,160 --> 01:01:32,640
true

1494
01:01:29,280 --> 01:01:34,160
and this one cover this one right

1495
01:01:32,640 --> 01:01:37,200
then

1496
01:01:34,160 --> 01:01:39,040
that clause will be satisfied find that

1497
01:01:37,200 --> 01:01:40,640
literal to be true

1498
01:01:39,040 --> 01:01:42,880
so that's why

1499
01:01:40,640 --> 01:01:45,520
the vertices cover can be translated

1500
01:01:42,880 --> 01:01:48,640
back to the truth assignment

1501
01:01:45,520 --> 01:01:49,440
that satisfies the original formula

1502
01:01:48,640 --> 01:01:52,000
so

1503
01:01:49,440 --> 01:01:53,359
it is a mapping reducibility

1504
01:01:52,000 --> 01:01:54,319
property

1505
01:01:53,359 --> 01:01:57,280
okay

1506
01:01:54,319 --> 01:02:00,799
and of course the whole

1507
01:01:57,280 --> 01:02:05,760
the running time you need to convert 5

1508
01:02:00,799 --> 01:02:07,280
convert 5 into this graph and

1509
01:02:05,760 --> 01:02:09,039
the

1510
01:02:07,280 --> 01:02:10,160
integer here

1511
01:02:09,039 --> 01:02:13,280
well

1512
01:02:10,160 --> 01:02:15,119
well uh actually well within the

1513
01:02:13,280 --> 01:02:16,400
polynomial bound

1514
01:02:15,119 --> 01:02:19,280
okay

1515
01:02:16,400 --> 01:02:20,640
so since we have

1516
01:02:19,280 --> 01:02:22,400
a

1517
01:02:20,640 --> 01:02:24,400
polynomial time reduction

1518
01:02:22,400 --> 01:02:28,640
from three set

1519
01:02:24,400 --> 01:02:31,520
to where this cover oh sorry we have to

1520
01:02:28,640 --> 01:02:33,680
prove that vertical is in mp but that's

1521
01:02:31,520 --> 01:02:36,079
easy right you can have a polynomial

1522
01:02:33,680 --> 01:02:38,640
verifier and that someone give you k

1523
01:02:36,079 --> 01:02:40,799
notes you just you know check if that k

1524
01:02:38,640 --> 01:02:44,880
note is really a vertical

1525
01:02:40,799 --> 01:02:48,160
so versus cover is no doubt in mp so now

1526
01:02:44,880 --> 01:02:49,200
we know that vertex cover is mmp

1527
01:02:48,160 --> 01:02:51,680
complete

1528
01:02:49,200 --> 01:02:54,680
sorry is can be complete

1529
01:02:51,680 --> 01:02:54,680
okay

