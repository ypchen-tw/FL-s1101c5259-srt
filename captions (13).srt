1
00:00:02,240 --> 00:00:07,040
last time we

2
00:00:03,360 --> 00:00:10,559
introduced the formal definition

3
00:00:07,040 --> 00:00:14,960
of context-free grammars and

4
00:00:10,559 --> 00:00:14,960
we defined that

5
00:00:15,040 --> 00:00:22,240
the language generated by

6
00:00:18,960 --> 00:00:26,160
context requirements are context-free

7
00:00:22,240 --> 00:00:29,199
languages okay so that's the title of

8
00:00:26,160 --> 00:00:32,480
chapter two and

9
00:00:29,199 --> 00:00:35,200
why it is called text

10
00:00:32,480 --> 00:00:37,040
context free context-free grammar

11
00:00:35,200 --> 00:00:40,800
context free language

12
00:00:37,040 --> 00:00:41,440
okay the reason to code the grammar the

13
00:00:40,800 --> 00:00:45,840
language

14
00:00:41,440 --> 00:00:45,840
context free is that

15
00:00:46,000 --> 00:00:52,480
for the rule to derive

16
00:00:49,280 --> 00:00:55,280
strings terminal strings and the mixture

17
00:00:52,480 --> 00:00:58,960
of terminal and the variable strings

18
00:00:55,280 --> 00:01:03,120
you can see that

19
00:00:58,960 --> 00:01:07,040
as long as you have a rule like this

20
00:01:03,120 --> 00:01:10,960
let's say variable a may become

21
00:01:07,040 --> 00:01:10,960
a string w

22
00:01:11,040 --> 00:01:16,560
whenever you see a here in a mixture of

23
00:01:14,960 --> 00:01:20,320
variables and

24
00:01:16,560 --> 00:01:24,840
terminals you can you can

25
00:01:20,320 --> 00:01:28,479
make a w

26
00:01:24,840 --> 00:01:31,680
okay and as

27
00:01:28,479 --> 00:01:34,880
you can see like in natural language

28
00:01:31,680 --> 00:01:37,280
or article you know newspaper something

29
00:01:34,880 --> 00:01:37,280
like that

30
00:01:37,759 --> 00:01:42,799
u a v here

31
00:01:42,880 --> 00:01:48,000
what is u and what is v that's your

32
00:01:46,320 --> 00:01:51,920
context

33
00:01:48,000 --> 00:01:56,000
you know imagine that you are having a

34
00:01:51,920 --> 00:01:59,360
chat with your classmates or friends

35
00:01:56,000 --> 00:02:02,880
and you use pronouns like you

36
00:01:59,360 --> 00:02:06,840
me okay me and i may be

37
00:02:02,880 --> 00:02:10,399
clear but they he

38
00:02:06,840 --> 00:02:13,599
she pronounced like that

39
00:02:10,399 --> 00:02:19,520
how do you know who is he

40
00:02:13,599 --> 00:02:19,520
or who is she in your conversation

41
00:02:20,000 --> 00:02:26,400
if you just heard

42
00:02:23,200 --> 00:02:29,200
a sentence like uh

43
00:02:26,400 --> 00:02:31,440
she is going there something like that

44
00:02:29,200 --> 00:02:35,440
and you won't be able to know

45
00:02:31,440 --> 00:02:39,120
what is that so

46
00:02:35,440 --> 00:02:39,120
in our most

47
00:02:39,360 --> 00:02:47,440
most of our conversations or articles

48
00:02:43,599 --> 00:02:47,440
anything in natural language

49
00:02:49,200 --> 00:02:55,840
they are bounded in

50
00:02:52,640 --> 00:03:00,319
the particular context

51
00:02:55,840 --> 00:03:04,959
so for that example you

52
00:03:00,319 --> 00:03:08,159
here according to you here you know

53
00:03:04,959 --> 00:03:11,200
or you know what a can become

54
00:03:08,159 --> 00:03:14,879
or what a have to become

55
00:03:11,200 --> 00:03:18,239
okay so this kind of expansion rule

56
00:03:14,879 --> 00:03:21,280
the derivation rule we will call it

57
00:03:18,239 --> 00:03:24,640
context sensitive

58
00:03:21,280 --> 00:03:27,680
all right so like in the conversation

59
00:03:24,640 --> 00:03:31,040
after you know that

60
00:03:27,680 --> 00:03:34,239
some particular person is the

61
00:03:31,040 --> 00:03:37,920
she or is the he then

62
00:03:34,239 --> 00:03:38,959
you know late in the later part of the

63
00:03:37,920 --> 00:03:43,599
conversation

64
00:03:38,959 --> 00:03:46,720
she refers to that particular person

65
00:03:43,599 --> 00:03:49,840
so for context sensitive language

66
00:03:46,720 --> 00:03:52,560
or counter-sensitive grammars you can

67
00:03:49,840 --> 00:03:52,560
specify

68
00:03:52,959 --> 00:04:01,120
something like this whenever you see

69
00:03:57,040 --> 00:04:03,760
uav then in that case

70
00:04:01,120 --> 00:04:03,760
you can

71
00:04:04,239 --> 00:04:08,720
make a w

72
00:04:08,879 --> 00:04:12,720
okay only in this case not in other

73
00:04:11,840 --> 00:04:16,079
cases

74
00:04:12,720 --> 00:04:19,519
so that's called context sensitive and

75
00:04:16,079 --> 00:04:21,120
it on the con in contrast to context

76
00:04:19,519 --> 00:04:24,479
sensitive

77
00:04:21,120 --> 00:04:28,639
what we have here is that

78
00:04:24,479 --> 00:04:31,680
no matter your context is

79
00:04:28,639 --> 00:04:35,520
no matter what the context is

80
00:04:31,680 --> 00:04:40,080
a always can be

81
00:04:35,520 --> 00:04:42,960
w according to our rule here

82
00:04:40,080 --> 00:04:44,479
that's why the language we are talking

83
00:04:42,960 --> 00:04:48,240
about

84
00:04:44,479 --> 00:04:51,199
is called context free language and

85
00:04:48,240 --> 00:04:52,080
the grammar is called context-free

86
00:04:51,199 --> 00:04:56,479
grammar

87
00:04:52,080 --> 00:04:59,520
because the variable in the grammar

88
00:04:56,479 --> 00:05:03,360
can freely

89
00:04:59,520 --> 00:05:08,240
yield the string which is the body

90
00:05:03,360 --> 00:05:11,600
specified by the rules

91
00:05:08,240 --> 00:05:14,639
okay as long as you have a rule like

92
00:05:11,600 --> 00:05:19,120
b become a

93
00:05:14,639 --> 00:05:23,120
c b b a something like this

94
00:05:19,120 --> 00:05:26,800
and in any situation for example

95
00:05:23,120 --> 00:05:30,240
you have a b b

96
00:05:26,800 --> 00:05:33,280
c c a then you

97
00:05:30,240 --> 00:05:38,080
no matter the context

98
00:05:33,280 --> 00:05:42,960
you can change b to the string

99
00:05:38,080 --> 00:05:45,120
that is context free okay

100
00:05:42,960 --> 00:05:45,120
so

101
00:05:46,160 --> 00:05:50,840
it's the it's the reason why we call it

102
00:05:48,880 --> 00:05:56,240
context free

103
00:05:50,840 --> 00:05:56,240
and the rule

104
00:05:56,720 --> 00:06:04,560
here w here

105
00:06:00,960 --> 00:06:07,840
can be any

106
00:06:04,560 --> 00:06:07,840
string in

107
00:06:09,120 --> 00:06:12,160
the mixture of

108
00:06:13,120 --> 00:06:19,680
variables and terminals right

109
00:06:16,479 --> 00:06:22,319
which is called body here

110
00:06:19,680 --> 00:06:24,479
and according to the definition here we

111
00:06:22,319 --> 00:06:27,120
can know that

112
00:06:24,479 --> 00:06:28,240
the rule of a grammar can be you know

113
00:06:27,120 --> 00:06:31,440
quite

114
00:06:28,240 --> 00:06:32,319
arbitrary you can write any string as

115
00:06:31,440 --> 00:06:35,440
you like

116
00:06:32,319 --> 00:06:38,400
as long as it follows the spec

117
00:06:35,440 --> 00:06:39,520
the formal definition of the grammar

118
00:06:38,400 --> 00:06:42,800
that is a

119
00:06:39,520 --> 00:06:46,160
valid context free grammar

120
00:06:42,800 --> 00:06:49,520
well you can have a rule like s become

121
00:06:46,160 --> 00:06:52,800
a a c c b s s

122
00:06:49,520 --> 00:06:55,759
b b c a something

123
00:06:52,800 --> 00:06:57,120
and then you can also have x become

124
00:06:55,759 --> 00:07:02,720
epsilon

125
00:06:57,120 --> 00:07:05,199
right so as you can imagine

126
00:07:02,720 --> 00:07:05,919
there can be many kinds of you know

127
00:07:05,199 --> 00:07:10,720
rules

128
00:07:05,919 --> 00:07:10,720
as long as you follow the specs

129
00:07:11,199 --> 00:07:18,000
but if we want to discuss

130
00:07:14,840 --> 00:07:20,560
some property characteristics

131
00:07:18,000 --> 00:07:22,560
of context grammar context-free grammars

132
00:07:20,560 --> 00:07:25,599
or context-free languages

133
00:07:22,560 --> 00:07:28,960
we will we will need something more

134
00:07:25,599 --> 00:07:32,880
simple something more uh

135
00:07:28,960 --> 00:07:37,520
easy to do operations okay

136
00:07:32,880 --> 00:07:37,520
so that's why we are introducing

137
00:07:37,919 --> 00:07:40,639
normal form

138
00:07:40,960 --> 00:07:47,120
what is a normal form

139
00:07:44,000 --> 00:07:48,000
you can think of it that way a normal

140
00:07:47,120 --> 00:07:52,000
phone is

141
00:07:48,000 --> 00:07:56,240
some way to you have some way

142
00:07:52,000 --> 00:07:59,599
to write all

143
00:07:56,240 --> 00:08:01,919
the grammars or

144
00:07:59,599 --> 00:08:02,639
uh all context requirements can be

145
00:08:01,919 --> 00:08:05,360
written

146
00:08:02,639 --> 00:08:05,759
in some particular way and we call that

147
00:08:05,360 --> 00:08:08,879
way

148
00:08:05,759 --> 00:08:10,960
a normal form okay normal that

149
00:08:08,879 --> 00:08:12,160
like everybody's that something like

150
00:08:10,960 --> 00:08:14,879
that and

151
00:08:12,160 --> 00:08:16,800
uh there are several kinds of normal

152
00:08:14,879 --> 00:08:20,720
phones for context-free

153
00:08:16,800 --> 00:08:23,039
grammars like bnf or g something

154
00:08:20,720 --> 00:08:24,240
and the normal phone we want to

155
00:08:23,039 --> 00:08:27,599
introduce here

156
00:08:24,240 --> 00:08:31,680
is called chomsky nomophong and chong

157
00:08:27,599 --> 00:08:35,599
chomsky is a famous american

158
00:08:31,680 --> 00:08:40,479
linguist i guess he's older than

159
00:08:35,599 --> 00:08:44,399
90 years old now anyway so we say

160
00:08:40,479 --> 00:08:47,920
a context free grammar is in

161
00:08:44,399 --> 00:08:47,920
chomsky normal form

162
00:08:48,240 --> 00:08:55,360
if every rule

163
00:08:51,920 --> 00:08:59,120
in that grammar is one

164
00:08:55,360 --> 00:09:02,080
of the following form first form is

165
00:08:59,120 --> 00:09:03,360
you have one variable may become two

166
00:09:02,080 --> 00:09:07,360
variables

167
00:09:03,360 --> 00:09:08,080
two variables or you have one variable

168
00:09:07,360 --> 00:09:11,120
that variable

169
00:09:08,080 --> 00:09:14,640
can become a terminal

170
00:09:11,120 --> 00:09:14,640
okay so

171
00:09:14,880 --> 00:09:22,320
basically uh that's it

172
00:09:18,160 --> 00:09:25,440
you see if all your

173
00:09:22,320 --> 00:09:28,640
rules in the grammar either

174
00:09:25,440 --> 00:09:31,200
one variable becomes two variables or

175
00:09:28,640 --> 00:09:32,640
one variable become may become a

176
00:09:31,200 --> 00:09:36,800
terminal

177
00:09:32,640 --> 00:09:40,000
and of course there they there are

178
00:09:36,800 --> 00:09:44,080
and uh restriction that

179
00:09:40,000 --> 00:09:47,360
the variables on the right hand side

180
00:09:44,080 --> 00:09:50,720
or let's say in the body of the rule

181
00:09:47,360 --> 00:09:54,080
cannot be variable

182
00:09:50,720 --> 00:09:57,200
okay cannot be startable and

183
00:09:54,080 --> 00:10:00,640
also and

184
00:09:57,200 --> 00:10:05,680
also an exception

185
00:10:00,640 --> 00:10:09,680
that star variable can become

186
00:10:05,680 --> 00:10:13,040
empty string okay

187
00:10:09,680 --> 00:10:13,519
so we call it chomsky normal phone okay

188
00:10:13,040 --> 00:10:17,279
let me

189
00:10:13,519 --> 00:10:19,120
uh say that again

190
00:10:17,279 --> 00:10:20,800
a free a context-free grammar is in

191
00:10:19,120 --> 00:10:24,240
chongqing normal form

192
00:10:20,800 --> 00:10:27,760
if every rule is one of the form

193
00:10:24,240 --> 00:10:32,560
first a variable becomes

194
00:10:27,760 --> 00:10:37,360
may become two variables or a variable

195
00:10:32,560 --> 00:10:37,360
may become a terminal okay

196
00:10:38,160 --> 00:10:45,519
then the variable on the right hand side

197
00:10:41,680 --> 00:10:50,240
cannot be start variable

198
00:10:45,519 --> 00:10:53,519
okay then if you think of it

199
00:10:50,240 --> 00:10:56,800
you see from start variable

200
00:10:53,519 --> 00:11:00,399
either it becomes a terminal

201
00:10:56,800 --> 00:11:03,519
or it becomes two variables

202
00:11:00,399 --> 00:11:06,720
and cannot be storable okay and

203
00:11:03,519 --> 00:11:10,959
anyway there cannot be absolute

204
00:11:06,720 --> 00:11:14,320
right if your grammar

205
00:11:10,959 --> 00:11:19,440
has only these kinds of rules it is

206
00:11:14,320 --> 00:11:24,000
it is impossible from start variable

207
00:11:19,440 --> 00:11:24,000
derives an empty string

208
00:11:24,399 --> 00:11:28,880
all right so that creates a problem that

209
00:11:26,800 --> 00:11:31,920
if the language you want to describe

210
00:11:28,880 --> 00:11:34,079
has empty string then we will have a

211
00:11:31,920 --> 00:11:37,360
problem here

212
00:11:34,079 --> 00:11:41,680
right so let us

213
00:11:37,360 --> 00:11:44,880
think of that way if you have

214
00:11:41,680 --> 00:11:47,839
if you have a language

215
00:11:44,880 --> 00:11:49,600
which can be described by some

216
00:11:47,839 --> 00:11:51,680
context-free grammar

217
00:11:49,600 --> 00:11:53,040
so the language is context-free language

218
00:11:51,680 --> 00:11:57,760
right

219
00:11:53,040 --> 00:12:01,519
and we can convert that grammar

220
00:11:57,760 --> 00:12:04,240
into okay the language you have

221
00:12:01,519 --> 00:12:05,600
can be described by some context free

222
00:12:04,240 --> 00:12:08,839
grammar

223
00:12:05,600 --> 00:12:11,920
and then we can convert this grammar

224
00:12:08,839 --> 00:12:15,360
into a grammar in

225
00:12:11,920 --> 00:12:19,120
chongqing normal phone but chong's

226
00:12:15,360 --> 00:12:22,320
normal form cannot let's say

227
00:12:19,120 --> 00:12:23,440
in this case there are two ways to

228
00:12:22,320 --> 00:12:27,600
handle it

229
00:12:23,440 --> 00:12:31,519
there are two ways to handle it one way

230
00:12:27,600 --> 00:12:35,600
is that you convert

231
00:12:31,519 --> 00:12:39,360
choose chunks normal phone

232
00:12:35,600 --> 00:12:41,440
and you allow that if the original

233
00:12:39,360 --> 00:12:45,040
language

234
00:12:41,440 --> 00:12:49,600
has epson

235
00:12:45,040 --> 00:12:54,320
has epson is in the original language

236
00:12:49,600 --> 00:12:59,120
you allow that the grammar you converted

237
00:12:54,320 --> 00:12:59,120
is actually the original

238
00:12:59,839 --> 00:13:08,639
sorry i shouldn't write it this way

239
00:13:06,079 --> 00:13:09,200
grammar you converted the language of

240
00:13:08,639 --> 00:13:12,000
the

241
00:13:09,200 --> 00:13:15,360
grammar in chongqing nomophong is the

242
00:13:12,000 --> 00:13:15,360
original language

243
00:13:16,880 --> 00:13:24,000
without episode

244
00:13:20,399 --> 00:13:27,279
okay that's one way to handle it if

245
00:13:24,000 --> 00:13:28,720
the language if the grammar you convert

246
00:13:27,279 --> 00:13:33,200
it from a language and

247
00:13:28,720 --> 00:13:36,720
that's grammar sorry that language has

248
00:13:33,200 --> 00:13:37,839
empty string then you are willing to

249
00:13:36,720 --> 00:13:40,560
allow

250
00:13:37,839 --> 00:13:41,199
the converted grammar in chomsky normal

251
00:13:40,560 --> 00:13:45,680
phone

252
00:13:41,199 --> 00:13:49,600
describe generate a language

253
00:13:45,680 --> 00:13:53,040
equal to the original language without

254
00:13:49,600 --> 00:13:54,880
empty string so that's one possible way

255
00:13:53,040 --> 00:13:57,680
to handle it

256
00:13:54,880 --> 00:13:58,959
the other possible way to handle it is

257
00:13:57,680 --> 00:14:02,000
the one we used

258
00:13:58,959 --> 00:14:05,519
here we allow

259
00:14:02,000 --> 00:14:08,639
exception in the form of rule

260
00:14:05,519 --> 00:14:08,639
so we allow

261
00:14:09,680 --> 00:14:16,639
star variable directly become

262
00:14:12,880 --> 00:14:20,079
may become empty string in this way

263
00:14:16,639 --> 00:14:22,079
we can have a chongxin aguama in chongxi

264
00:14:20,079 --> 00:14:25,519
novo phong

265
00:14:22,079 --> 00:14:28,560
exactly describe

266
00:14:25,519 --> 00:14:33,199
the original language generate

267
00:14:28,560 --> 00:14:35,360
the original language okay let me

268
00:14:33,199 --> 00:14:37,279
say that again if you have a context

269
00:14:35,360 --> 00:14:41,040
free language

270
00:14:37,279 --> 00:14:44,000
and if that language has

271
00:14:41,040 --> 00:14:45,519
no empty string then there is no problem

272
00:14:44,000 --> 00:14:48,720
at all

273
00:14:45,519 --> 00:14:51,760
if that language has empty string

274
00:14:48,720 --> 00:14:55,279
then there are two ways to handle it

275
00:14:51,760 --> 00:14:58,480
in some textbook they they don't allow

276
00:14:55,279 --> 00:15:02,160
exception in rules but they

277
00:14:58,480 --> 00:15:05,440
allow exception that the converted

278
00:15:02,160 --> 00:15:08,959
grammar the language described generated

279
00:15:05,440 --> 00:15:08,959
by the converted grammar

280
00:15:09,600 --> 00:15:15,600
has no empty string

281
00:15:13,440 --> 00:15:17,120
so the resultant language and the

282
00:15:15,600 --> 00:15:20,320
original language

283
00:15:17,120 --> 00:15:24,079
are you know different by one

284
00:15:20,320 --> 00:15:24,639
empty string that's one way to handle

285
00:15:24,079 --> 00:15:27,279
this

286
00:15:24,639 --> 00:15:28,880
and the other way is what we adopted

287
00:15:27,279 --> 00:15:32,320
here

288
00:15:28,880 --> 00:15:35,759
we allow exceptions

289
00:15:32,320 --> 00:15:38,959
in the form of rules we allow that

290
00:15:35,759 --> 00:15:42,800
we allow that start variable

291
00:15:38,959 --> 00:15:47,040
may become empty string directly so

292
00:15:42,800 --> 00:15:50,240
we can have an totally equivalent

293
00:15:47,040 --> 00:15:53,279
language okay so

294
00:15:50,240 --> 00:15:56,959
again what is chongxi nomophong chomping

295
00:15:53,279 --> 00:15:57,920
in our textbook is that the rule in your

296
00:15:56,959 --> 00:16:00,720
grammar

297
00:15:57,920 --> 00:16:03,120
are either one rule one variable may

298
00:16:00,720 --> 00:16:06,800
become two variables or one variable

299
00:16:03,120 --> 00:16:10,399
may become one terminal

300
00:16:06,800 --> 00:16:13,680
okay and right hand side cannot have

301
00:16:10,399 --> 00:16:16,320
the variable and you may have

302
00:16:13,680 --> 00:16:16,880
this kind of rule for you know the

303
00:16:16,320 --> 00:16:20,639
exception

304
00:16:16,880 --> 00:16:22,959
empty string okay then what what do we

305
00:16:20,639 --> 00:16:22,959
want

306
00:16:23,600 --> 00:16:26,800
okay first since it is a normal asset

307
00:16:26,079 --> 00:16:31,040
set

308
00:16:26,800 --> 00:16:35,199
all possible context with grammars

309
00:16:31,040 --> 00:16:37,199
can be returned into this kind of form

310
00:16:35,199 --> 00:16:40,160
okay that's why it is called normal

311
00:16:37,199 --> 00:16:43,360
phone of course there are slightly

312
00:16:40,160 --> 00:16:46,560
uh issues regarding empty string but

313
00:16:43,360 --> 00:16:48,720
you know that that can be handled

314
00:16:46,560 --> 00:16:50,800
and why do we want a normal phone like

315
00:16:48,720 --> 00:16:55,279
this because

316
00:16:50,800 --> 00:17:00,240
it it will be much easier to discuss

317
00:16:55,279 --> 00:17:00,240
the derivation the positivity

318
00:17:00,720 --> 00:17:08,240
the property of those quantities

319
00:17:04,640 --> 00:17:11,039
okay you see since you have

320
00:17:08,240 --> 00:17:12,400
one variable may become two variable so

321
00:17:11,039 --> 00:17:15,760
on the past three

322
00:17:12,400 --> 00:17:15,760
you may have something like

323
00:17:15,839 --> 00:17:24,000
a variable becomes two variable

324
00:17:20,480 --> 00:17:25,199
right and then a variable becomes two

325
00:17:24,000 --> 00:17:30,480
variable

326
00:17:25,199 --> 00:17:30,480
and then variable becomes like terminal

327
00:17:30,840 --> 00:17:37,760
c you will see that

328
00:17:33,840 --> 00:17:38,320
the terminal string the number of

329
00:17:37,760 --> 00:17:41,919
terminals

330
00:17:38,320 --> 00:17:41,919
in the length of terminal string

331
00:17:42,000 --> 00:17:45,039
is exactly

332
00:17:45,520 --> 00:17:52,559
if you uh consider the last

333
00:17:50,160 --> 00:17:52,559
variable

334
00:17:53,200 --> 00:17:56,320
the number of the last the leaf let's

335
00:17:55,840 --> 00:18:01,280
say

336
00:17:56,320 --> 00:18:04,400
leave leave leaf

337
00:18:01,280 --> 00:18:08,160
variables are exactly the same as the

338
00:18:04,400 --> 00:18:10,960
the length of the terminal string

339
00:18:08,160 --> 00:18:12,240
okay that's first and the second you

340
00:18:10,960 --> 00:18:16,080
know that

341
00:18:12,240 --> 00:18:19,200
these three is a binary tree

342
00:18:16,080 --> 00:18:22,320
right because it always one node

343
00:18:19,200 --> 00:18:26,640
has two node as child always

344
00:18:22,320 --> 00:18:28,480
a binary tree then

345
00:18:26,640 --> 00:18:29,840
since it is the positivity must be a

346
00:18:28,480 --> 00:18:33,120
binary tree then

347
00:18:29,840 --> 00:18:35,679
you can have all the theorems proven on

348
00:18:33,120 --> 00:18:39,120
binary trees

349
00:18:35,679 --> 00:18:41,840
for in your arsenal right you can use

350
00:18:39,120 --> 00:18:44,240
any theorem to describe the derivation

351
00:18:41,840 --> 00:18:45,360
process the size of the posterior or

352
00:18:44,240 --> 00:18:49,120
things like that

353
00:18:45,360 --> 00:18:50,160
and also the length of the terminal

354
00:18:49,120 --> 00:18:53,840
string

355
00:18:50,160 --> 00:18:56,880
and bounded the height

356
00:18:53,840 --> 00:19:00,000
of the pastry

357
00:18:56,880 --> 00:19:02,480
so that'll be easier for discussion

358
00:19:00,000 --> 00:19:03,679
okay so chongqing normal form and we

359
00:19:02,480 --> 00:19:07,520
will use that

360
00:19:03,679 --> 00:19:12,559
later so let's say

361
00:19:07,520 --> 00:19:15,600
we present now we present a process

362
00:19:12,559 --> 00:19:18,880
to convert any grammar into

363
00:19:15,600 --> 00:19:20,880
chongqing normal form okay and the

364
00:19:18,880 --> 00:19:22,000
process is pretty easy actually easier

365
00:19:20,880 --> 00:19:25,280
than you know

366
00:19:22,000 --> 00:19:28,880
nfa to dfa in my personal

367
00:19:25,280 --> 00:19:32,400
viewpoint okay there are only four

368
00:19:28,880 --> 00:19:36,720
steps and as long as you remember

369
00:19:32,400 --> 00:19:36,720
what chomsky normal phone is

370
00:19:37,760 --> 00:19:42,559
you will remember the four steps because

371
00:19:40,320 --> 00:19:45,200
they are course

372
00:19:42,559 --> 00:19:46,320
they are corresponding to each other

373
00:19:45,200 --> 00:19:49,600
okay

374
00:19:46,320 --> 00:19:51,200
so the first step is add a new start

375
00:19:49,600 --> 00:19:53,679
variable

376
00:19:51,200 --> 00:19:54,320
okay when you have a context free

377
00:19:53,679 --> 00:19:57,200
grammar

378
00:19:54,320 --> 00:19:57,840
don't don't forget that a context free

379
00:19:57,200 --> 00:20:00,960
grammar

380
00:19:57,840 --> 00:20:05,360
is what variables

381
00:20:00,960 --> 00:20:08,799
terminals rules and star variable

382
00:20:05,360 --> 00:20:10,400
right and since you want to convert the

383
00:20:08,799 --> 00:20:13,600
form of the given grammar

384
00:20:10,400 --> 00:20:15,360
into chongqing normal form

385
00:20:13,600 --> 00:20:16,960
there is nothing to do with the

386
00:20:15,360 --> 00:20:17,360
terminals because you don't need to

387
00:20:16,960 --> 00:20:20,080
change

388
00:20:17,360 --> 00:20:20,880
anything right and start variable you

389
00:20:20,080 --> 00:20:24,320
don't need to change

390
00:20:20,880 --> 00:20:25,039
anything and you know that you want to

391
00:20:24,320 --> 00:20:28,559
change

392
00:20:25,039 --> 00:20:31,840
rules and you want to make rules

393
00:20:28,559 --> 00:20:34,240
the start variable not showing

394
00:20:31,840 --> 00:20:34,960
in the right hand side and you don't

395
00:20:34,240 --> 00:20:38,159
know

396
00:20:34,960 --> 00:20:39,600
the given grammar

397
00:20:38,159 --> 00:20:42,880
you don't know the rules in a given

398
00:20:39,600 --> 00:20:46,400
grammar so the

399
00:20:42,880 --> 00:20:50,000
first thing to do is you add

400
00:20:46,400 --> 00:20:52,960
a new start variable then that will not

401
00:20:50,000 --> 00:20:53,280
that new star variable will not show in

402
00:20:52,960 --> 00:20:55,120
the

403
00:20:53,280 --> 00:20:57,840
right hand side of the rules right

404
00:20:55,120 --> 00:21:01,600
because the rules are given

405
00:20:57,840 --> 00:21:03,039
so first step is to add a new star

406
00:21:01,600 --> 00:21:06,400
variable

407
00:21:03,039 --> 00:21:09,760
second step because we only permit

408
00:21:06,400 --> 00:21:13,360
start variable to become epsilon

409
00:21:09,760 --> 00:21:17,039
empty string so we want to eliminate

410
00:21:13,360 --> 00:21:22,240
o at epsom rules

411
00:21:17,039 --> 00:21:25,679
like this one in the original rule set

412
00:21:22,240 --> 00:21:28,840
okay then

413
00:21:25,679 --> 00:21:31,039
we only allow one variable to become two

414
00:21:28,840 --> 00:21:33,280
variable

415
00:21:31,039 --> 00:21:33,280
so

416
00:21:35,120 --> 00:21:42,960
we eliminate all unit rules

417
00:21:38,480 --> 00:21:46,880
in the original grammar okay after that

418
00:21:42,960 --> 00:21:50,080
you can you can

419
00:21:46,880 --> 00:21:52,880
think about it after that you will have

420
00:21:50,080 --> 00:21:54,720
the grammar have something like a

421
00:21:52,880 --> 00:21:58,000
variable become terminal

422
00:21:54,720 --> 00:22:01,440
and variable becomes some

423
00:21:58,000 --> 00:22:03,679
two or three or

424
00:22:01,440 --> 00:22:03,679
four

425
00:22:04,799 --> 00:22:08,480
the length of two or three or four the

426
00:22:07,600 --> 00:22:11,360
bodies

427
00:22:08,480 --> 00:22:12,000
the length of the bodies are like this

428
00:22:11,360 --> 00:22:15,120
then

429
00:22:12,000 --> 00:22:19,440
we make them

430
00:22:15,120 --> 00:22:21,840
chunks okay so that's the example and

431
00:22:19,440 --> 00:22:25,120
you will know the four steps are

432
00:22:21,840 --> 00:22:27,919
pretty straightforward

433
00:22:25,120 --> 00:22:28,559
so assuming that the grammar is from the

434
00:22:27,919 --> 00:22:32,000
textbook

435
00:22:28,559 --> 00:22:35,520
so assuming that

436
00:22:32,000 --> 00:22:37,840
we have a grammar g6 we want to convert

437
00:22:35,520 --> 00:22:41,360
to chongqing normal phone

438
00:22:37,840 --> 00:22:43,600
and here we only have the rules but you

439
00:22:41,360 --> 00:22:47,200
formally you need to describe that okay

440
00:22:43,600 --> 00:22:50,640
i have a grammar g6

441
00:22:47,200 --> 00:22:53,679
for table right now b s

442
00:22:50,640 --> 00:22:56,799
a b uh

443
00:22:53,679 --> 00:22:59,840
okay as our variables and terminal

444
00:22:56,799 --> 00:23:02,480
is a and b right yes

445
00:22:59,840 --> 00:23:03,280
and then rules are you know the six

446
00:23:02,480 --> 00:23:06,480
rules

447
00:23:03,280 --> 00:23:09,600
one two three four

448
00:23:06,480 --> 00:23:12,720
five six rules here

449
00:23:09,600 --> 00:23:14,000
and then usually we use s as star

450
00:23:12,720 --> 00:23:18,159
variable

451
00:23:14,000 --> 00:23:21,360
so that's the formal definition of g6

452
00:23:18,159 --> 00:23:22,880
now we want to convert g6 into chomsky

453
00:23:21,360 --> 00:23:26,000
normal form

454
00:23:22,880 --> 00:23:27,600
so first step what is first step add a

455
00:23:26,000 --> 00:23:30,559
new

456
00:23:27,600 --> 00:23:32,080
start variable so we add a new start

457
00:23:30,559 --> 00:23:36,480
variable called

458
00:23:32,080 --> 00:23:38,720
s0 and s0 is the star variable

459
00:23:36,480 --> 00:23:40,640
and if we want to add a new star

460
00:23:38,720 --> 00:23:44,799
variable and without changing the

461
00:23:40,640 --> 00:23:48,159
language generated by the grammar

462
00:23:44,799 --> 00:23:50,480
what should we do we should add one rule

463
00:23:48,159 --> 00:23:54,240
like this

464
00:23:50,480 --> 00:23:57,279
right and only one rule

465
00:23:54,240 --> 00:23:59,360
and according to the derivation of

466
00:23:57,279 --> 00:24:03,679
context-free grammar you know that

467
00:23:59,360 --> 00:24:06,880
see what is the language of g6

468
00:24:03,679 --> 00:24:10,400
6 l of g6

469
00:24:06,880 --> 00:24:13,760
is all possible string

470
00:24:10,400 --> 00:24:13,760
in terminal

471
00:24:15,760 --> 00:24:22,880
which can be derived

472
00:24:19,600 --> 00:24:26,720
from s

473
00:24:22,880 --> 00:24:33,760
right that's our definition then

474
00:24:26,720 --> 00:24:37,360
we add as 0 here as our new variable

475
00:24:33,760 --> 00:24:41,200
we just need to add these

476
00:24:37,360 --> 00:24:44,640
rule then we have what is the

477
00:24:41,200 --> 00:24:44,640
what is the language of this

478
00:24:45,360 --> 00:24:51,360
new grammar the language of this new

479
00:24:49,039 --> 00:24:54,880
grammar

480
00:24:51,360 --> 00:24:59,120
let's say is

481
00:24:54,880 --> 00:25:00,880
by definition all string

482
00:24:59,120 --> 00:25:04,000
all possible string determine all

483
00:25:00,880 --> 00:25:04,000
possible terminal string

484
00:25:04,559 --> 00:25:13,039
which can be derived from s0

485
00:25:08,799 --> 00:25:16,720
right and you know

486
00:25:13,039 --> 00:25:18,159
there is only one way for s 0 to become

487
00:25:16,720 --> 00:25:21,760
something

488
00:25:18,159 --> 00:25:26,640
so s 0 b always become

489
00:25:21,760 --> 00:25:33,120
s and become w

490
00:25:26,640 --> 00:25:33,120
see so that's the original language

491
00:25:34,480 --> 00:25:41,120
of g6 right

492
00:25:38,080 --> 00:25:42,159
okay so we will have this all the way

493
00:25:41,120 --> 00:25:47,200
through

494
00:25:42,159 --> 00:25:49,200
every step we do is actually

495
00:25:47,200 --> 00:25:52,640
can make the grammar connect the

496
00:25:49,200 --> 00:25:55,520
modified or converted grammar

497
00:25:52,640 --> 00:25:56,000
generates exactly what the original

498
00:25:55,520 --> 00:26:00,960
grammar

499
00:25:56,000 --> 00:26:04,159
generate so the context free language

500
00:26:00,960 --> 00:26:07,760
is not changed we only

501
00:26:04,159 --> 00:26:11,360
change the rules

502
00:26:07,760 --> 00:26:14,799
to make them in chongqing number four

503
00:26:11,360 --> 00:26:18,000
okay if you have no problem here

504
00:26:14,799 --> 00:26:21,279
then you know that adding

505
00:26:18,000 --> 00:26:23,360
a new star variable so that's you see

506
00:26:21,279 --> 00:26:24,000
the star variable original star variable

507
00:26:23,360 --> 00:26:27,120
on the right hand

508
00:26:24,000 --> 00:26:28,640
side doesn't matter anymore and we add

509
00:26:27,120 --> 00:26:31,679
this rule here

510
00:26:28,640 --> 00:26:34,720
so the language is not changed

511
00:26:31,679 --> 00:26:38,240
okay then next step

512
00:26:34,720 --> 00:26:42,080
we want to eliminate what epsilon rules

513
00:26:38,240 --> 00:26:45,279
like this one okay so how do we

514
00:26:42,080 --> 00:26:48,480
eliminate absent rules without

515
00:26:45,279 --> 00:26:49,919
changing all the strings possibly

516
00:26:48,480 --> 00:26:53,600
generated

517
00:26:49,919 --> 00:26:56,960
by the original grammar well

518
00:26:53,600 --> 00:27:00,159
it's kind of simple

519
00:26:56,960 --> 00:27:02,000
and some someone may think them tricky

520
00:27:00,159 --> 00:27:06,080
but actually it's not

521
00:27:02,000 --> 00:27:09,840
you think of think of the rule here

522
00:27:06,080 --> 00:27:13,120
you know you have a rule b may become

523
00:27:09,840 --> 00:27:16,720
empty string so

524
00:27:13,120 --> 00:27:20,240
whenever you have a string like a

525
00:27:16,720 --> 00:27:23,440
b a c c or

526
00:27:20,240 --> 00:27:28,240
no c here sorry a b a a

527
00:27:23,440 --> 00:27:31,919
b something like this and the b

528
00:27:28,240 --> 00:27:36,240
may eventually become m strong or

529
00:27:31,919 --> 00:27:41,840
may become b right that means

530
00:27:36,240 --> 00:27:41,840
this string may become

531
00:27:43,039 --> 00:27:49,520
a b a a

532
00:27:46,480 --> 00:27:53,200
b or

533
00:27:49,520 --> 00:27:56,240
a nothing right empty string

534
00:27:53,200 --> 00:28:00,640
a a b

535
00:27:56,240 --> 00:28:04,080
right so there will be

536
00:28:00,640 --> 00:28:06,799
two possibility for

537
00:28:04,080 --> 00:28:06,799
b here

538
00:28:07,840 --> 00:28:15,679
right and one will you have b

539
00:28:12,480 --> 00:28:18,720
the capital b always

540
00:28:15,679 --> 00:28:22,799
generated by

541
00:28:18,720 --> 00:28:22,799
other rules right hand side

542
00:28:22,960 --> 00:28:26,159
right you start from the start variable

543
00:28:25,200 --> 00:28:29,679
and when

544
00:28:26,159 --> 00:28:33,919
you get capital b and you know later

545
00:28:29,679 --> 00:28:37,679
that capital b may become epsilon

546
00:28:33,919 --> 00:28:41,279
if we do that if we do

547
00:28:37,679 --> 00:28:44,720
that a step

548
00:28:41,279 --> 00:28:48,399
a derivation step before

549
00:28:44,720 --> 00:28:52,240
b we can keep

550
00:28:48,399 --> 00:28:55,600
we can maintain all possibilities

551
00:28:52,240 --> 00:28:58,640
so for this example here right

552
00:28:55,600 --> 00:29:01,760
so this example here

553
00:28:58,640 --> 00:29:05,120
assume that the b is generated by

554
00:29:01,760 --> 00:29:08,640
a b or a b

555
00:29:05,120 --> 00:29:12,880
a or something anyway so

556
00:29:08,640 --> 00:29:16,880
when a b is generated

557
00:29:12,880 --> 00:29:16,880
we make it to version

558
00:29:17,440 --> 00:29:24,880
we change the process here

559
00:29:21,520 --> 00:29:27,840
make the possibility here

560
00:29:24,880 --> 00:29:27,840
one step

561
00:29:28,159 --> 00:29:34,799
ahead okay so

562
00:29:31,360 --> 00:29:38,240
when some string make a b

563
00:29:34,799 --> 00:29:42,480
a a b we make it make

564
00:29:38,240 --> 00:29:46,000
two possibilities a b

565
00:29:42,480 --> 00:29:49,200
a a b and

566
00:29:46,000 --> 00:29:52,480
a a a

567
00:29:49,200 --> 00:29:56,080
b then this will be only

568
00:29:52,480 --> 00:30:00,159
a b a a b

569
00:29:56,080 --> 00:30:04,640
okay how do we do that

570
00:30:00,159 --> 00:30:08,799
we examine the right hand side with b

571
00:30:04,640 --> 00:30:12,640
with capital b and we make

572
00:30:08,799 --> 00:30:15,919
a b and other version without

573
00:30:12,640 --> 00:30:20,080
b which is empty string a

574
00:30:15,919 --> 00:30:24,240
also like this one we make a two version

575
00:30:20,080 --> 00:30:26,720
and epsilon okay

576
00:30:24,240 --> 00:30:28,799
so in this way we can make the

577
00:30:26,720 --> 00:30:32,159
derivation step

578
00:30:28,799 --> 00:30:32,880
one step uh another head actually before

579
00:30:32,159 --> 00:30:35,840
that step

580
00:30:32,880 --> 00:30:37,200
okay so you you move the derivation

581
00:30:35,840 --> 00:30:40,720
steps

582
00:30:37,200 --> 00:30:43,600
then as long as we leave all

583
00:30:40,720 --> 00:30:48,000
possibilities

584
00:30:43,600 --> 00:30:51,200
we can eliminate eliminate this rule

585
00:30:48,000 --> 00:30:54,559
so it's like we eliminate

586
00:30:51,200 --> 00:30:54,559
b become epsilon

587
00:30:54,640 --> 00:31:01,600
then for this one we have two version

588
00:30:58,399 --> 00:31:05,360
one is a capital b but capital b

589
00:31:01,600 --> 00:31:09,360
here will be small b

590
00:31:05,360 --> 00:31:12,320
and no epsilon anymore but the

591
00:31:09,360 --> 00:31:12,799
capital b the version for capital b to

592
00:31:12,320 --> 00:31:16,480
become

593
00:31:12,799 --> 00:31:19,840
epsilon we kept recap we keep the

594
00:31:16,480 --> 00:31:23,840
possibility here okay so for the send

595
00:31:19,840 --> 00:31:26,399
for the same idea we

596
00:31:23,840 --> 00:31:26,960
make it we make the capital b here two

597
00:31:26,399 --> 00:31:29,919
version

598
00:31:26,960 --> 00:31:31,840
first version capital b itself but this

599
00:31:29,919 --> 00:31:32,799
version now cannot be empty string

600
00:31:31,840 --> 00:31:35,360
anymore

601
00:31:32,799 --> 00:31:36,480
and also we make it empty string the

602
00:31:35,360 --> 00:31:40,240
possibility

603
00:31:36,480 --> 00:31:43,360
we need to keep okay

604
00:31:40,240 --> 00:31:47,760
after that we remove

605
00:31:43,360 --> 00:31:51,200
b may become epsom the rule here

606
00:31:47,760 --> 00:31:54,640
then we check again we find that okay

607
00:31:51,200 --> 00:31:58,960
actually we create another epsilon

608
00:31:54,640 --> 00:32:03,519
rule then we keep removing it

609
00:31:58,960 --> 00:32:06,799
so we want to remove this one

610
00:32:03,519 --> 00:32:09,919
in order to remove a may become epsilon

611
00:32:06,799 --> 00:32:13,120
we need to consider all the capital a

612
00:32:09,919 --> 00:32:14,320
on the right hand side in the body body

613
00:32:13,120 --> 00:32:19,279
strings

614
00:32:14,320 --> 00:32:22,320
so we have asa here

615
00:32:19,279 --> 00:32:25,760
okay then since there are two a

616
00:32:22,320 --> 00:32:29,760
here we need to make four versions

617
00:32:25,760 --> 00:32:32,799
the first one is a

618
00:32:29,760 --> 00:32:36,559
s a right but the asa

619
00:32:32,799 --> 00:32:39,600
is not the asa anymore because the asa

620
00:32:36,559 --> 00:32:43,360
the two a's cannot be apt cannot be

621
00:32:39,600 --> 00:32:48,559
empty string anymore but we need to

622
00:32:43,360 --> 00:32:53,360
keep the possibility so we add

623
00:32:48,559 --> 00:32:56,960
s a that means the first a becomes

624
00:32:53,360 --> 00:33:01,039
empty string and a s

625
00:32:56,960 --> 00:33:05,760
the second a becomes empty string and

626
00:33:01,039 --> 00:33:10,000
s both a become empty strings

627
00:33:05,760 --> 00:33:13,440
so we add three new possibilities here

628
00:33:10,000 --> 00:33:16,240
okay i i think this

629
00:33:13,440 --> 00:33:17,440
this case is easier to understand right

630
00:33:16,240 --> 00:33:21,279
because

631
00:33:17,440 --> 00:33:24,399
x may become a s a

632
00:33:21,279 --> 00:33:28,080
and originally that a that both a

633
00:33:24,399 --> 00:33:31,279
may become empty string

634
00:33:28,080 --> 00:33:35,440
since we want to eliminate a may become

635
00:33:31,279 --> 00:33:38,799
empty string but we still need

636
00:33:35,440 --> 00:33:40,880
all the strings

637
00:33:38,799 --> 00:33:42,480
which can be derived in the original

638
00:33:40,880 --> 00:33:45,760
grammar

639
00:33:42,480 --> 00:33:49,360
we make the possibility here so

640
00:33:45,760 --> 00:33:52,720
we directly eliminate a right so

641
00:33:49,360 --> 00:33:56,159
asa s a a s

642
00:33:52,720 --> 00:34:00,000
and s so all possibilities

643
00:33:56,159 --> 00:34:02,799
are kept right in this case

644
00:34:00,000 --> 00:34:04,840
we can eliminate a may become epsilon

645
00:34:02,799 --> 00:34:07,840
now

646
00:34:04,840 --> 00:34:11,359
so let's check again

647
00:34:07,840 --> 00:34:13,919
after this step there is no epsilon rule

648
00:34:11,359 --> 00:34:13,919
anymore

649
00:34:14,560 --> 00:34:22,000
and here comes the interesting part that

650
00:34:18,879 --> 00:34:25,040
if if the language

651
00:34:22,000 --> 00:34:25,520
generated by the original grammar really

652
00:34:25,040 --> 00:34:28,879
has

653
00:34:25,520 --> 00:34:32,399
empty string as the terminal string

654
00:34:28,879 --> 00:34:32,879
for this example here obviously we know

655
00:34:32,399 --> 00:34:36,800
that

656
00:34:32,879 --> 00:34:40,720
g6 l of g6 doesn't have

657
00:34:36,800 --> 00:34:43,839
empty string as its member okay

658
00:34:40,720 --> 00:34:43,839
if the original

659
00:34:44,240 --> 00:34:50,960
grammar the language described generated

660
00:34:47,599 --> 00:34:51,919
by the original grammar has the empty

661
00:34:50,960 --> 00:34:56,240
string

662
00:34:51,919 --> 00:34:59,680
then eventually you will have

663
00:34:56,240 --> 00:35:02,880
s0 or s may become

664
00:34:59,680 --> 00:35:04,320
empty string see you will finally

665
00:35:02,880 --> 00:35:08,240
convert your conversion

666
00:35:04,320 --> 00:35:11,359
into this row and this is allowed

667
00:35:08,240 --> 00:35:12,400
so we also will stop the process and we

668
00:35:11,359 --> 00:35:15,920
also know that

669
00:35:12,400 --> 00:35:17,280
the original language will uh does have

670
00:35:15,920 --> 00:35:19,200
empty string

671
00:35:17,280 --> 00:35:20,960
okay but in this case we don't have we

672
00:35:19,200 --> 00:35:21,520
don't we don't have empty string so we

673
00:35:20,960 --> 00:35:25,040
don't need

674
00:35:21,520 --> 00:35:28,880
that exception here

675
00:35:25,040 --> 00:35:32,079
then after the absolute

676
00:35:28,880 --> 00:35:32,640
rules we want to remove units rules that

677
00:35:32,079 --> 00:35:35,440
is

678
00:35:32,640 --> 00:35:37,040
one variable become may become one

679
00:35:35,440 --> 00:35:40,079
variable

680
00:35:37,040 --> 00:35:43,280
and also the the same idea

681
00:35:40,079 --> 00:35:46,640
is as we do the

682
00:35:43,280 --> 00:35:46,640
epsilon rules removing

683
00:35:47,599 --> 00:35:54,480
if we want to remove unit rules okay so

684
00:35:51,440 --> 00:35:54,960
one unit rules is pretty easy that s

685
00:35:54,480 --> 00:35:58,400
become

686
00:35:54,960 --> 00:36:01,280
s there is nothing to do to remove

687
00:35:58,400 --> 00:36:02,960
s become may become s right because

688
00:36:01,280 --> 00:36:05,599
nothing

689
00:36:02,960 --> 00:36:06,160
happened you have one more derivation

690
00:36:05,599 --> 00:36:09,599
step

691
00:36:06,160 --> 00:36:12,880
but no uh no change

692
00:36:09,599 --> 00:36:16,000
will be cost

693
00:36:12,880 --> 00:36:16,560
by remove just removing this one because

694
00:36:16,000 --> 00:36:20,560
s is

695
00:36:16,560 --> 00:36:24,079
s right so that's the easy part

696
00:36:20,560 --> 00:36:27,119
then we want to we want to

697
00:36:24,079 --> 00:36:30,160
move remove other unit rules

698
00:36:27,119 --> 00:36:33,280
then we also the

699
00:36:30,160 --> 00:36:36,240
idea is like removing epsilon

700
00:36:33,280 --> 00:36:38,320
rules we want to keep all possibilities

701
00:36:36,240 --> 00:36:41,119
so

702
00:36:38,320 --> 00:36:41,520
s may become s if we want to remove this

703
00:36:41,119 --> 00:36:44,480
row

704
00:36:41,520 --> 00:36:44,480
how do we do that

705
00:36:44,720 --> 00:36:52,560
it's pretty easy that we remove s here

706
00:36:48,720 --> 00:36:56,880
with that with that as the row

707
00:36:52,560 --> 00:36:56,880
may become anything

708
00:36:57,839 --> 00:37:02,560
that s may become so we copy everything

709
00:37:01,359 --> 00:37:04,800
here

710
00:37:02,560 --> 00:37:04,800
so

711
00:37:05,680 --> 00:37:12,560
we get sorry

712
00:37:09,200 --> 00:37:15,520
we get this one just the

713
00:37:12,560 --> 00:37:18,160
you know copy and paste see that's

714
00:37:15,520 --> 00:37:20,800
pretty straightforward right

715
00:37:18,160 --> 00:37:22,160
you just let s neuro become anything

716
00:37:20,800 --> 00:37:25,920
else can become

717
00:37:22,160 --> 00:37:29,760
then you can remove s0 becomes s

718
00:37:25,920 --> 00:37:32,720
right and also generate exactly the same

719
00:37:29,760 --> 00:37:36,320
set of terminal strings

720
00:37:32,720 --> 00:37:39,599
so follow the same thing

721
00:37:36,320 --> 00:37:42,640
we want to remove a become b we just

722
00:37:39,599 --> 00:37:46,079
copy what b make become

723
00:37:42,640 --> 00:37:50,000
and remove here and a may become

724
00:37:46,079 --> 00:37:53,920
s we copy everything

725
00:37:50,000 --> 00:37:58,160
as here right

726
00:37:53,920 --> 00:38:02,960
okay then done right

727
00:37:58,160 --> 00:38:05,839
step three is done so after step three

728
00:38:02,960 --> 00:38:05,839
what do we have

729
00:38:06,880 --> 00:38:18,079
we have a grammar

730
00:38:10,800 --> 00:38:22,079
that is close to the chongqing nomophong

731
00:38:18,079 --> 00:38:24,720
and what grammar is that that would be

732
00:38:22,079 --> 00:38:26,000
a variable either generate a terminal

733
00:38:24,720 --> 00:38:29,119
like this

734
00:38:26,000 --> 00:38:29,119
or this

735
00:38:29,760 --> 00:38:36,880
or generate

736
00:38:33,280 --> 00:38:40,400
two things

737
00:38:36,880 --> 00:38:43,680
or three things or longer okay so one

738
00:38:40,400 --> 00:38:43,680
terminal one terminal

739
00:38:45,359 --> 00:38:49,119
then it's pretty straightforward that

740
00:38:48,240 --> 00:38:51,680
you just need

741
00:38:49,119 --> 00:38:51,680
everything

742
00:38:52,240 --> 00:39:00,000
longer than one becomes all

743
00:38:55,520 --> 00:39:03,280
variables and then split it

744
00:39:00,000 --> 00:39:06,560
okay so

745
00:39:03,280 --> 00:39:09,839
we uh introduce a new variable

746
00:39:06,560 --> 00:39:12,400
become a

747
00:39:09,839 --> 00:39:13,359
in general you you you you will need to

748
00:39:12,400 --> 00:39:16,400
have

749
00:39:13,359 --> 00:39:19,440
a new variable like you

750
00:39:16,400 --> 00:39:23,280
become a b become b

751
00:39:19,440 --> 00:39:27,680
and so on you

752
00:39:23,280 --> 00:39:32,800
give each terminal a variable

753
00:39:27,680 --> 00:39:32,800
and then replace all terminals

754
00:39:33,040 --> 00:39:36,240
in rules

755
00:39:36,320 --> 00:39:43,040
longer than one

756
00:39:39,440 --> 00:39:47,040
two or three or longer you

757
00:39:43,040 --> 00:39:51,040
change all the terminals in that rows

758
00:39:47,040 --> 00:39:54,720
as variables okay so in this case

759
00:39:51,040 --> 00:39:58,720
the the author only adds u becomes a

760
00:39:54,720 --> 00:39:58,720
and you change all a's

761
00:39:59,040 --> 00:40:06,160
in the rule right so change this one

762
00:40:02,480 --> 00:40:09,599
change this one and this one

763
00:40:06,160 --> 00:40:13,920
and then you make all

764
00:40:09,599 --> 00:40:18,960
rules longer than two

765
00:40:13,920 --> 00:40:22,240
more rules okay so in this case

766
00:40:18,960 --> 00:40:26,160
a s a

767
00:40:22,240 --> 00:40:30,480
s may become asa you make

768
00:40:26,160 --> 00:40:35,119
the two variable one new variable

769
00:40:30,480 --> 00:40:39,839
s a and rewrite this as a one

770
00:40:35,119 --> 00:40:39,839
so that's what we have here

771
00:40:39,920 --> 00:40:44,400
and in general you can do something like

772
00:40:42,640 --> 00:40:48,160
this

773
00:40:44,400 --> 00:40:51,200
you have a become a

774
00:40:48,160 --> 00:40:54,640
whatever b c d

775
00:40:51,200 --> 00:40:57,680
e f okay then

776
00:40:54,640 --> 00:41:01,760
you make this for another variable

777
00:40:57,680 --> 00:41:05,040
so g become

778
00:41:01,760 --> 00:41:08,720
c and you want you you want to have

779
00:41:05,040 --> 00:41:13,119
d e f another variable

780
00:41:08,720 --> 00:41:16,720
d then

781
00:41:13,119 --> 00:41:21,839
i become e f

782
00:41:16,720 --> 00:41:21,839
and you fill it back i h

783
00:41:24,160 --> 00:41:31,520
right and then this part will be

784
00:41:28,160 --> 00:41:35,440
what g so a become

785
00:41:31,520 --> 00:41:38,640
b g and then you can

786
00:41:35,440 --> 00:41:39,760
remove these rules become the four rules

787
00:41:38,640 --> 00:41:43,119
here

788
00:41:39,760 --> 00:41:46,400
see a become b g and g becomes c h

789
00:41:43,119 --> 00:41:50,960
h becomes the i i become ef so

790
00:41:46,400 --> 00:41:55,599
a will become abcdef

791
00:41:50,960 --> 00:41:58,880
well you use the number of rules

792
00:41:55,599 --> 00:42:02,319
to replace the length of

793
00:41:58,880 --> 00:42:03,680
of a body of a body of a rule right in

794
00:42:02,319 --> 00:42:06,960
general you can do that

795
00:42:03,680 --> 00:42:09,920
anyway and you don't need to care about

796
00:42:06,960 --> 00:42:10,880
the you know finite set thing because

797
00:42:09,920 --> 00:42:14,240
the rule here

798
00:42:10,880 --> 00:42:17,920
the body length here is finite

799
00:42:14,240 --> 00:42:19,119
then you convert to number of rules

800
00:42:17,920 --> 00:42:22,960
which is finite

801
00:42:19,119 --> 00:42:27,280
so no problem with it with that okay

802
00:42:22,960 --> 00:42:31,119
so we can convert any

803
00:42:27,280 --> 00:42:36,319
grammar into normal phone

804
00:42:31,119 --> 00:42:36,319
and it is one example

805
00:42:37,040 --> 00:42:42,079
again some uh i remember that someone

806
00:42:40,079 --> 00:42:45,280
asked me

807
00:42:42,079 --> 00:42:49,680
can we okay in that case a become

808
00:42:45,280 --> 00:42:49,680
b c d e

809
00:42:49,760 --> 00:42:53,599
can we make this one a variable this one

810
00:42:52,640 --> 00:42:56,800
a variable

811
00:42:53,599 --> 00:42:59,839
for example uh f g so

812
00:42:56,800 --> 00:43:03,920
a can become f g and f

813
00:42:59,839 --> 00:43:07,200
can become b c and the g can become

814
00:43:03,920 --> 00:43:10,720
d e yes you can but

815
00:43:07,200 --> 00:43:15,520
uh you then you need to write

816
00:43:10,720 --> 00:43:18,960
some more clever way to handle

817
00:43:15,520 --> 00:43:23,440
long bodies right there's no

818
00:43:18,960 --> 00:43:26,319
rules against that you can you know

819
00:43:23,440 --> 00:43:27,040
use your imagination to do all possible

820
00:43:26,319 --> 00:43:31,440
operation

821
00:43:27,040 --> 00:43:35,520
to minimize the rule the number of rules

822
00:43:31,440 --> 00:43:38,839
but in mathematics

823
00:43:35,520 --> 00:43:42,560
usually optimization on

824
00:43:38,839 --> 00:43:45,680
these not important part

825
00:43:42,560 --> 00:43:46,400
is not that important because what we

826
00:43:45,680 --> 00:43:51,040
care

827
00:43:46,400 --> 00:43:51,040
what mathematicians care is

828
00:43:51,359 --> 00:43:59,599
the existence is the possibility

829
00:43:55,440 --> 00:44:02,800
that a grammar can be converted

830
00:43:59,599 --> 00:44:07,040
to chomsky normal form

831
00:44:02,800 --> 00:44:10,319
if the answer is yes then okay it's yes

832
00:44:07,040 --> 00:44:13,599
we don't really care about you know uh

833
00:44:10,319 --> 00:44:16,960
making rules or variables

834
00:44:13,599 --> 00:44:19,280
as few as possible

835
00:44:16,960 --> 00:44:20,400
that's not you can do that but that's

836
00:44:19,280 --> 00:44:23,520
not the thing

837
00:44:20,400 --> 00:44:24,000
we care about in this course or in the

838
00:44:23,520 --> 00:44:27,839
field

839
00:44:24,000 --> 00:44:31,040
of uh in a related field

840
00:44:27,839 --> 00:44:34,960
okay so of course you can do that that

841
00:44:31,040 --> 00:44:38,400
and we only want to provide us

842
00:44:34,960 --> 00:44:41,680
a safest way to do

843
00:44:38,400 --> 00:44:45,040
it okay maybe stupid but it

844
00:44:41,680 --> 00:44:48,640
always works so that's why i said

845
00:44:45,040 --> 00:44:49,280
for a very long body you kept the first

846
00:44:48,640 --> 00:44:52,560
one

847
00:44:49,280 --> 00:44:52,560
and you make then

848
00:44:53,599 --> 00:44:59,839
another rule and you

849
00:44:57,040 --> 00:45:00,400
have the first one here and make the

850
00:44:59,839 --> 00:45:03,280
rest

851
00:45:00,400 --> 00:45:04,400
another rule and finally you will get

852
00:45:03,280 --> 00:45:08,160
the last two

853
00:45:04,400 --> 00:45:12,400
here so maybe last two here

854
00:45:08,160 --> 00:45:15,760
then you have the you have the grammar

855
00:45:12,400 --> 00:45:19,280
in chongqing normal phone okay

856
00:45:15,760 --> 00:45:22,400
anyway so we

857
00:45:19,280 --> 00:45:25,359
now know that uh there are

858
00:45:22,400 --> 00:45:26,880
at least there is a chomsky normal phone

859
00:45:25,359 --> 00:45:32,160
for context pre-grammar

860
00:45:26,880 --> 00:45:35,920
and all possible chomsky all possible

861
00:45:32,160 --> 00:45:39,520
context-free grammar can be converted

862
00:45:35,920 --> 00:45:43,040
into chongxin normal phone

863
00:45:39,520 --> 00:45:45,280
only that if your original

864
00:45:43,040 --> 00:45:46,960
context-free language has empty string

865
00:45:45,280 --> 00:45:50,960
then there will be there

866
00:45:46,960 --> 00:45:55,040
will there may be an exception for that

867
00:45:50,960 --> 00:45:58,720
otherwise everything is almost identical

868
00:45:55,040 --> 00:46:02,160
okay all non-empty strings

869
00:45:58,720 --> 00:46:05,680
are kept and there is no

870
00:46:02,160 --> 00:46:08,880
more uh no other non

871
00:46:05,680 --> 00:46:13,200
empty string can be generated

872
00:46:08,880 --> 00:46:16,640
okay so that's the uh

873
00:46:13,200 --> 00:46:19,920
conversion for

874
00:46:16,640 --> 00:46:26,480
context-free grammars into chongusky

875
00:46:19,920 --> 00:46:26,480
normal phone

