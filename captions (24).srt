1
00:00:02,480 --> 00:00:07,680
okay uh we have established the

2
00:00:04,960 --> 00:00:09,679
relationship among classes of languages

3
00:00:07,680 --> 00:00:10,559
like

4
00:00:09,679 --> 00:00:12,160
figure

5
00:00:10,559 --> 00:00:15,839
410

6
00:00:12,160 --> 00:00:18,640
and firstly in chapter one

7
00:00:15,839 --> 00:00:20,960
we defined

8
00:00:18,640 --> 00:00:22,960
a computational model called

9
00:00:20,960 --> 00:00:26,080
uh final temper

10
00:00:22,960 --> 00:00:28,840
and later deterministic final automata

11
00:00:26,080 --> 00:00:34,320
and we define that the

12
00:00:28,840 --> 00:00:34,320
language recognized by dfa

13
00:00:35,520 --> 00:00:40,320
is regular it's a class of regular

14
00:00:38,320 --> 00:00:42,800
languages

15
00:00:40,320 --> 00:00:46,079
and then in chapter 2

16
00:00:42,800 --> 00:00:47,200
okay after defining regular languages we

17
00:00:46,079 --> 00:00:49,239
uh

18
00:00:47,200 --> 00:00:52,000
discussed some properties and the

19
00:00:49,239 --> 00:00:53,680
characteristics of regular languages and

20
00:00:52,000 --> 00:00:55,440
the closure properties

21
00:00:53,680 --> 00:00:59,120
and we also

22
00:00:55,440 --> 00:01:00,879
found that there are languages outside

23
00:00:59,120 --> 00:01:01,920
of regular languages

24
00:01:00,879 --> 00:01:04,559
and

25
00:01:01,920 --> 00:01:06,640
our first example is

26
00:01:04,559 --> 00:01:09,200
uh

27
00:01:06,640 --> 00:01:12,880
like this one 0 and 1n

28
00:01:09,200 --> 00:01:15,360
and then we are in chapter 2 defined

29
00:01:12,880 --> 00:01:17,920
context free grammar and the say that

30
00:01:15,360 --> 00:01:20,159
said that

31
00:01:17,920 --> 00:01:24,400
the class of languages that can be

32
00:01:20,159 --> 00:01:27,600
generated by context-free grammars

33
00:01:24,400 --> 00:01:30,640
is context is the context free language

34
00:01:27,600 --> 00:01:32,240
and we know that uh

35
00:01:30,640 --> 00:01:34,159
this language

36
00:01:32,240 --> 00:01:35,759
the first example outside of regular

37
00:01:34,159 --> 00:01:39,119
language

38
00:01:35,759 --> 00:01:41,840
regular languages is definitely

39
00:01:39,119 --> 00:01:44,320
context free language because you can

40
00:01:41,840 --> 00:01:44,320
easily

41
00:01:44,640 --> 00:01:49,520
write down the grammar for less language

42
00:01:47,600 --> 00:01:52,479
so we know that

43
00:01:49,520 --> 00:01:56,159
context three languages

44
00:01:52,479 --> 00:01:57,200
include regular languages and contain

45
00:01:56,159 --> 00:01:59,600
more

46
00:01:57,200 --> 00:02:01,600
non-regular languages

47
00:01:59,600 --> 00:02:04,079
other non-regular

48
00:02:01,600 --> 00:02:06,240
non-regular languages

49
00:02:04,079 --> 00:02:09,039
and then we

50
00:02:06,240 --> 00:02:10,399
we are defined two machines in chapter

51
00:02:09,039 --> 00:02:13,040
three right

52
00:02:10,399 --> 00:02:16,080
and according to two

53
00:02:13,040 --> 00:02:20,000
uh according to the difference

54
00:02:16,080 --> 00:02:23,360
of the operations of tuning machines and

55
00:02:20,000 --> 00:02:25,840
uh pdas and the dfas for two machines we

56
00:02:23,360 --> 00:02:28,160
defined two class

57
00:02:25,840 --> 00:02:31,120
two classes of languages one is

58
00:02:28,160 --> 00:02:33,280
decidable and the one is recognizable

59
00:02:31,120 --> 00:02:36,319
right uh two recognizable

60
00:02:33,280 --> 00:02:38,319
and for decidable that means for every

61
00:02:36,319 --> 00:02:39,760
possible strings

62
00:02:38,319 --> 00:02:42,239
of a given

63
00:02:39,760 --> 00:02:44,319
alphabet

64
00:02:42,239 --> 00:02:47,760
a decidable languages

65
00:02:44,319 --> 00:02:49,040
a decidable language means that

66
00:02:47,760 --> 00:02:51,760
you

67
00:02:49,040 --> 00:02:54,879
at least you have a turing machine

68
00:02:51,760 --> 00:02:57,040
for all possible strings

69
00:02:54,879 --> 00:02:58,879
the turing machine either

70
00:02:57,040 --> 00:03:01,920
accept that string

71
00:02:58,879 --> 00:03:02,840
that means the string is in the language

72
00:03:01,920 --> 00:03:04,480
or

73
00:03:02,840 --> 00:03:07,519
reject

74
00:03:04,480 --> 00:03:10,159
that string that means the string is not

75
00:03:07,519 --> 00:03:13,040
in the language that's decidable

76
00:03:10,159 --> 00:03:15,599
and for recognizable we have only you

77
00:03:13,040 --> 00:03:17,519
know accept part that means

78
00:03:15,599 --> 00:03:18,879
if you have a language

79
00:03:17,519 --> 00:03:21,599
and you find a turing machine

80
00:03:18,879 --> 00:03:23,920
recognizing that language that means all

81
00:03:21,599 --> 00:03:26,000
the strings in that language will be

82
00:03:23,920 --> 00:03:27,120
accepted by the turing machine and all

83
00:03:26,000 --> 00:03:29,200
the strings

84
00:03:27,120 --> 00:03:30,400
not in a language

85
00:03:29,200 --> 00:03:32,400
will not

86
00:03:30,400 --> 00:03:33,519
be accepted by two machine

87
00:03:32,400 --> 00:03:34,959
however

88
00:03:33,519 --> 00:03:36,239
as we

89
00:03:34,959 --> 00:03:37,760
know that

90
00:03:36,239 --> 00:03:40,959
not except

91
00:03:37,760 --> 00:03:42,720
not not accepted by the turing machine

92
00:03:40,959 --> 00:03:44,959
uh

93
00:03:42,720 --> 00:03:48,000
for the phone the

94
00:03:44,959 --> 00:03:50,640
not accept accepted part there are two

95
00:03:48,000 --> 00:03:54,799
possibilities one is that the machine

96
00:03:50,640 --> 00:03:57,280
still tell you reject and

97
00:03:54,799 --> 00:03:58,959
it is also possible that

98
00:03:57,280 --> 00:04:01,200
the machine will never give you an

99
00:03:58,959 --> 00:04:03,040
answer okay

100
00:04:01,200 --> 00:04:05,439
anyway so uh

101
00:04:03,040 --> 00:04:07,040
we also proved uh

102
00:04:05,439 --> 00:04:09,040
we also proved

103
00:04:07,040 --> 00:04:11,840
a theorem that

104
00:04:09,040 --> 00:04:14,560
every contextry language

105
00:04:11,840 --> 00:04:17,919
every context free language is decidable

106
00:04:14,560 --> 00:04:18,799
so we know that context free language

107
00:04:17,919 --> 00:04:21,440
is

108
00:04:18,799 --> 00:04:25,680
the class of tongue context languages

109
00:04:21,440 --> 00:04:27,199
is definitely within decidable right

110
00:04:25,680 --> 00:04:30,400
and we also we

111
00:04:27,199 --> 00:04:32,639
have an example that

112
00:04:30,400 --> 00:04:36,080
languages like this one

113
00:04:32,639 --> 00:04:37,680
we can prove that it is not in context

114
00:04:36,080 --> 00:04:40,960
with languages

115
00:04:37,680 --> 00:04:43,600
but we can also easily

116
00:04:40,960 --> 00:04:46,400
design a turing machine to accept to

117
00:04:43,600 --> 00:04:47,440
recognize to actually to decide this

118
00:04:46,400 --> 00:04:49,919
language

119
00:04:47,440 --> 00:04:51,840
so we have examples that

120
00:04:49,919 --> 00:04:54,240
uh

121
00:04:51,840 --> 00:04:58,639
languages outside of contextual language

122
00:04:54,240 --> 00:04:58,639
but inside of decidable so we know

123
00:04:59,280 --> 00:05:05,440
for the relationship here is uh

124
00:05:01,680 --> 00:05:06,560
appropriate drone in figure figure 410

125
00:05:05,440 --> 00:05:09,360
here

126
00:05:06,560 --> 00:05:12,080
and according to the definition

127
00:05:09,360 --> 00:05:12,080
decidable

128
00:05:12,479 --> 00:05:18,160
the class of decidable languages must be

129
00:05:15,520 --> 00:05:19,840
within recognizable right according to

130
00:05:18,160 --> 00:05:23,120
the definition

131
00:05:19,840 --> 00:05:24,880
and the problem now here is that is

132
00:05:23,120 --> 00:05:26,880
there any

133
00:05:24,880 --> 00:05:29,039
language here

134
00:05:26,880 --> 00:05:31,199
if there is no language here that means

135
00:05:29,039 --> 00:05:32,720
decidable and recognizable

136
00:05:31,199 --> 00:05:35,919
are identical

137
00:05:32,720 --> 00:05:37,280
if there is something here then that

138
00:05:35,919 --> 00:05:40,880
means they are

139
00:05:37,280 --> 00:05:43,199
not identical they are different right

140
00:05:40,880 --> 00:05:43,199
and

141
00:05:43,680 --> 00:05:48,240
uh

142
00:05:45,120 --> 00:05:49,440
since we will be using turing machine as

143
00:05:48,240 --> 00:05:51,120
our

144
00:05:49,440 --> 00:05:53,840
computational model

145
00:05:51,120 --> 00:05:53,840
you know

146
00:05:54,960 --> 00:06:01,280
similar to the computers we have right

147
00:05:57,840 --> 00:06:03,840
now like your tablet notebook or desktop

148
00:06:01,280 --> 00:06:07,840
computers

149
00:06:03,840 --> 00:06:07,840
let's uh think about

150
00:06:07,919 --> 00:06:12,080
the

151
00:06:09,360 --> 00:06:16,479
meaning of decidable languages or and

152
00:06:12,080 --> 00:06:17,840
nutrient recognizable languages okay

153
00:06:16,479 --> 00:06:21,600
since we

154
00:06:17,840 --> 00:06:24,160
consider problems as languages and

155
00:06:21,600 --> 00:06:27,280
strings in a language as problem

156
00:06:24,160 --> 00:06:29,440
instances of that problem although

157
00:06:27,280 --> 00:06:32,240
the problem we consider

158
00:06:29,440 --> 00:06:35,360
are yes or no type right

159
00:06:32,240 --> 00:06:39,120
the machine either tells you yes or no

160
00:06:35,360 --> 00:06:43,280
like a graph connect connectivity we use

161
00:06:39,120 --> 00:06:43,280
as an example in previous chapters

162
00:06:43,759 --> 00:06:49,199
we can easily

163
00:06:46,759 --> 00:06:51,120
conceptualize that

164
00:06:49,199 --> 00:06:54,720
decidable

165
00:06:51,120 --> 00:06:56,240
the class of decidable languages

166
00:06:54,720 --> 00:06:57,759
is more

167
00:06:56,240 --> 00:06:59,360
what we want

168
00:06:57,759 --> 00:07:02,160
as

169
00:06:59,360 --> 00:07:04,319
uh problems that are a

170
00:07:02,160 --> 00:07:06,160
practical solvable

171
00:07:04,319 --> 00:07:09,520
practical soluble

172
00:07:06,160 --> 00:07:10,639
algorithmically practically solvable

173
00:07:09,520 --> 00:07:13,360
why

174
00:07:10,639 --> 00:07:14,840
why because

175
00:07:13,360 --> 00:07:19,199
think about it

176
00:07:14,840 --> 00:07:22,160
uh if you have a problem instance

177
00:07:19,199 --> 00:07:23,919
then if you have an algorithm

178
00:07:22,160 --> 00:07:26,479
then

179
00:07:23,919 --> 00:07:27,520
you give that algorithm the problem

180
00:07:26,479 --> 00:07:30,880
instance

181
00:07:27,520 --> 00:07:32,240
of course you expect that the algorithm

182
00:07:30,880 --> 00:07:33,039
tells you

183
00:07:32,240 --> 00:07:36,400
yes

184
00:07:33,039 --> 00:07:38,560
the answer is yes or the algorithm tell

185
00:07:36,400 --> 00:07:39,599
you the answer is no

186
00:07:38,560 --> 00:07:42,800
right

187
00:07:39,599 --> 00:07:45,360
and for the recognizable case for the

188
00:07:42,800 --> 00:07:47,199
case of recognizable languages

189
00:07:45,360 --> 00:07:50,160
if you have a problem that is

190
00:07:47,199 --> 00:07:52,240
recognizable during recognizable and you

191
00:07:50,160 --> 00:07:54,960
have the recognizer

192
00:07:52,240 --> 00:07:57,039
you give an instance

193
00:07:54,960 --> 00:07:58,400
to that algorithm

194
00:07:57,039 --> 00:08:00,639
then

195
00:07:58,400 --> 00:08:03,120
if yes

196
00:08:00,639 --> 00:08:05,599
you will get the answer of yes that's no

197
00:08:03,120 --> 00:08:10,160
problem right but

198
00:08:05,599 --> 00:08:12,720
if the problem instance is actually not

199
00:08:10,160 --> 00:08:15,039
in the language

200
00:08:12,720 --> 00:08:15,039
then

201
00:08:15,360 --> 00:08:20,960
when you

202
00:08:17,039 --> 00:08:22,879
input that corresponding string into the

203
00:08:20,960 --> 00:08:26,160
recognizer the turing machine

204
00:08:22,879 --> 00:08:29,280
recognizing the language

205
00:08:26,160 --> 00:08:32,560
you got lucky you will have a no as the

206
00:08:29,280 --> 00:08:33,440
answer then your case is closed that's

207
00:08:32,560 --> 00:08:36,080
okay

208
00:08:33,440 --> 00:08:38,719
but it is probable that

209
00:08:36,080 --> 00:08:41,760
the recognizer will never give you an

210
00:08:38,719 --> 00:08:42,959
answer and you don't

211
00:08:41,760 --> 00:08:44,480
know

212
00:08:42,959 --> 00:08:47,519
if the string

213
00:08:44,480 --> 00:08:49,519
is in the language or not

214
00:08:47,519 --> 00:08:52,080
so

215
00:08:49,519 --> 00:08:53,440
in a way of thinking recognizable

216
00:08:52,080 --> 00:08:54,640
languages

217
00:08:53,440 --> 00:08:57,760
are not

218
00:08:54,640 --> 00:08:57,760
you know are really

219
00:08:58,959 --> 00:09:04,000
eco rhetorically

220
00:09:00,880 --> 00:09:06,880
solvable in practice

221
00:09:04,000 --> 00:09:09,279
right in some way of thinking

222
00:09:06,880 --> 00:09:12,800
recognize recognizable is not really

223
00:09:09,279 --> 00:09:15,200
what we want we want decidable

224
00:09:12,800 --> 00:09:17,680
okay so that's

225
00:09:15,200 --> 00:09:20,399
we that's the uh

226
00:09:17,680 --> 00:09:21,360
you know informal conclusion

227
00:09:20,399 --> 00:09:24,080
when we

228
00:09:21,360 --> 00:09:26,480
uh discuss computability

229
00:09:24,080 --> 00:09:29,360
in practice what we want is really

230
00:09:26,480 --> 00:09:31,360
decidable because you always want

231
00:09:29,360 --> 00:09:33,920
you always expect

232
00:09:31,360 --> 00:09:37,200
the algorithm you are running give you

233
00:09:33,920 --> 00:09:38,160
an answer either yes or no

234
00:09:37,200 --> 00:09:41,839
okay

235
00:09:38,160 --> 00:09:44,560
or you think about the situation that um

236
00:09:41,839 --> 00:09:46,800
you ask someone a question

237
00:09:44,560 --> 00:09:46,800
and

238
00:09:46,959 --> 00:09:52,080
the pers the person never gives you an

239
00:09:49,279 --> 00:09:53,440
answer and you don't know yes or no

240
00:09:52,080 --> 00:09:56,080
and

241
00:09:53,440 --> 00:09:57,920
all you can do is keep waiting but you

242
00:09:56,080 --> 00:09:59,519
don't know whether or not you will be

243
00:09:57,920 --> 00:10:02,880
waiting forever

244
00:09:59,519 --> 00:10:07,040
so that's the case of recognizable right

245
00:10:02,880 --> 00:10:09,440
so we we really want to know if uh

246
00:10:07,040 --> 00:10:11,200
are the classes of decidable languages

247
00:10:09,440 --> 00:10:13,279
and the

248
00:10:11,200 --> 00:10:16,480
pretty much uh turin recognizable

249
00:10:13,279 --> 00:10:18,399
languages identical or not

250
00:10:16,480 --> 00:10:19,920
okay or not

251
00:10:18,399 --> 00:10:20,959
and

252
00:10:19,920 --> 00:10:24,160
that's

253
00:10:20,959 --> 00:10:24,330
what we want to talk about uh

254
00:10:24,160 --> 00:10:25,680
in

255
00:10:24,330 --> 00:10:26,959
[Music]

256
00:10:25,680 --> 00:10:29,519
this lecture

257
00:10:26,959 --> 00:10:32,519
so is there any problem algorithmically

258
00:10:29,519 --> 00:10:32,519
unsolvable

259
00:10:37,440 --> 00:10:40,240
what we want to

260
00:10:42,800 --> 00:10:47,360
talk about the link the problem we want

261
00:10:44,880 --> 00:10:50,320
to talk about right now is atm

262
00:10:47,360 --> 00:10:52,480
okay so it's not the auto tailor machine

263
00:10:50,320 --> 00:10:55,600
it's not the machine you get money from

264
00:10:52,480 --> 00:10:57,760
you know of the bank

265
00:10:55,600 --> 00:10:58,720
so it's acceptance

266
00:10:57,760 --> 00:11:01,600
of

267
00:10:58,720 --> 00:11:04,480
turing machine so

268
00:11:01,600 --> 00:11:06,399
the naming convention here is that we

269
00:11:04,480 --> 00:11:10,000
have a turing machine

270
00:11:06,399 --> 00:11:12,079
okay and the input stream w is for the

271
00:11:10,000 --> 00:11:13,680
machine

272
00:11:12,079 --> 00:11:14,640
and

273
00:11:13,680 --> 00:11:18,480
if

274
00:11:14,640 --> 00:11:19,600
this machine can really accept the input

275
00:11:18,480 --> 00:11:21,680
for it

276
00:11:19,600 --> 00:11:24,320
which is w here

277
00:11:21,680 --> 00:11:29,040
then the whole string

278
00:11:24,320 --> 00:11:31,680
is in atm okay that's the definition

279
00:11:29,040 --> 00:11:34,720
or you can think about that you are a

280
00:11:31,680 --> 00:11:36,880
teaching assistant or you are a teacher

281
00:11:34,720 --> 00:11:37,839
an instructor for some programming

282
00:11:36,880 --> 00:11:39,440
course

283
00:11:37,839 --> 00:11:41,360
and you ask

284
00:11:39,440 --> 00:11:42,640
you ask

285
00:11:41,360 --> 00:11:45,200
students to

286
00:11:42,640 --> 00:11:47,519
write to

287
00:11:45,200 --> 00:11:48,720
finish the homework assignment

288
00:11:47,519 --> 00:11:50,399
and

289
00:11:48,720 --> 00:11:53,360
and here

290
00:11:50,399 --> 00:11:54,959
you can think you can consider it as

291
00:11:53,360 --> 00:11:57,279
the program

292
00:11:54,959 --> 00:12:00,079
returned by the student

293
00:11:57,279 --> 00:12:01,360
okay so to machine basically is a

294
00:12:00,079 --> 00:12:02,560
program

295
00:12:01,360 --> 00:12:05,760
and

296
00:12:02,560 --> 00:12:10,399
w here is the

297
00:12:05,760 --> 00:12:11,839
test input or test cases

298
00:12:10,399 --> 00:12:13,440
then

299
00:12:11,839 --> 00:12:16,000
atm here

300
00:12:13,440 --> 00:12:16,000
is that

301
00:12:16,079 --> 00:12:24,800
all the program and test cases pair

302
00:12:21,519 --> 00:12:27,120
in which the program accepts

303
00:12:24,800 --> 00:12:28,399
the input

304
00:12:27,120 --> 00:12:30,079
okay

305
00:12:28,399 --> 00:12:32,800
then

306
00:12:30,079 --> 00:12:35,839
what is atm

307
00:12:32,800 --> 00:12:35,839
atm mean uh

308
00:12:36,000 --> 00:12:41,440
the decidability of atm means that can

309
00:12:39,360 --> 00:12:43,760
you write a turing machine

310
00:12:41,440 --> 00:12:46,560
can you design a tier machine which is

311
00:12:43,760 --> 00:12:47,680
also a program right

312
00:12:46,560 --> 00:12:50,639
and

313
00:12:47,680 --> 00:12:53,600
all the string sorry i shouldn't use w

314
00:12:50,639 --> 00:12:55,760
here all the string in

315
00:12:53,600 --> 00:12:56,880
sigma star

316
00:12:55,760 --> 00:12:58,639
if

317
00:12:56,880 --> 00:13:02,160
x in

318
00:12:58,639 --> 00:13:07,839
atm your machine says yes

319
00:13:02,160 --> 00:13:07,839
if x not in atm your machine says no

320
00:13:08,000 --> 00:13:14,079
and it is it possible to

321
00:13:10,720 --> 00:13:18,079
design such a turing machine that's the

322
00:13:14,079 --> 00:13:19,120
problem of the decidability of atm

323
00:13:18,079 --> 00:13:21,040
okay

324
00:13:19,120 --> 00:13:22,800
now you have seen that

325
00:13:21,040 --> 00:13:25,200
we want to prove

326
00:13:22,800 --> 00:13:28,560
theorem 4.11

327
00:13:25,200 --> 00:13:29,680
atm is undecidable

328
00:13:28,560 --> 00:13:33,560
okay

329
00:13:29,680 --> 00:13:33,560
atm is undecidable

330
00:13:34,160 --> 00:13:38,160
before that as we just

331
00:13:36,959 --> 00:13:41,360
discussed

332
00:13:38,160 --> 00:13:44,000
we actually want to have

333
00:13:41,360 --> 00:13:45,040
the example here right

334
00:13:44,000 --> 00:13:47,360
we want to

335
00:13:45,040 --> 00:13:48,240
have the example here

336
00:13:47,360 --> 00:13:50,000
to

337
00:13:48,240 --> 00:13:53,519
differentiate

338
00:13:50,000 --> 00:13:55,760
to recognizable and decidable right

339
00:13:53,519 --> 00:13:55,760
so

340
00:13:55,920 --> 00:14:00,639
firstly we want to show that firstly we

341
00:13:58,720 --> 00:14:05,120
want to show that

342
00:14:00,639 --> 00:14:05,120
atm is recognizable

343
00:14:05,440 --> 00:14:13,360
atm is recognizable right and to

344
00:14:10,160 --> 00:14:16,560
prove atm recon is recognizable we just

345
00:14:13,360 --> 00:14:18,639
need to you know design a recognizer

346
00:14:16,560 --> 00:14:23,680
so

347
00:14:18,639 --> 00:14:23,680
we say that atm is too recognizable

348
00:14:24,720 --> 00:14:31,519
and we design recognizer so we just

349
00:14:27,680 --> 00:14:35,120
write down a turing machine like this

350
00:14:31,519 --> 00:14:39,199
says that on input mw

351
00:14:35,120 --> 00:14:42,160
and don't forget that there is a step 0

352
00:14:39,199 --> 00:14:44,800
as i describe step 0

353
00:14:42,160 --> 00:14:46,800
to do format checking right

354
00:14:44,800 --> 00:14:49,120
any invalid

355
00:14:46,800 --> 00:14:53,279
format for the input

356
00:14:49,120 --> 00:14:53,279
our machine will do a reject

357
00:14:54,720 --> 00:14:57,360
okay

358
00:14:55,839 --> 00:15:00,639
so

359
00:14:57,360 --> 00:15:03,680
we only consider

360
00:15:00,639 --> 00:15:05,040
inputs of valid formats

361
00:15:03,680 --> 00:15:08,720
okay

362
00:15:05,040 --> 00:15:11,199
so an input mw

363
00:15:08,720 --> 00:15:12,560
where m is a turing machine and a w

364
00:15:11,199 --> 00:15:15,519
research string

365
00:15:12,560 --> 00:15:18,240
that's after checking format checking

366
00:15:15,519 --> 00:15:20,639
and we know that there is a program here

367
00:15:18,240 --> 00:15:24,079
there is a valid c program here or java

368
00:15:20,639 --> 00:15:26,399
program here and there are inputs there

369
00:15:24,079 --> 00:15:28,320
is a input string for that

370
00:15:26,399 --> 00:15:31,040
program

371
00:15:28,320 --> 00:15:32,800
then we just need to simulate the

372
00:15:31,040 --> 00:15:34,079
machine on

373
00:15:32,800 --> 00:15:36,320
the w

374
00:15:34,079 --> 00:15:37,839
on the input string

375
00:15:36,320 --> 00:15:39,040
and how to do that

376
00:15:37,839 --> 00:15:42,399
well

377
00:15:39,040 --> 00:15:44,800
details depend on all your you know

378
00:15:42,399 --> 00:15:46,959
computational models machines or

379
00:15:44,800 --> 00:15:49,759
whatever you want to use

380
00:15:46,959 --> 00:15:50,800
but you can think of it that you use

381
00:15:49,759 --> 00:15:52,480
your

382
00:15:50,800 --> 00:15:55,040
notebook

383
00:15:52,480 --> 00:15:58,880
to run virtual machines

384
00:15:55,040 --> 00:16:01,279
okay so virtual machines is a simulation

385
00:15:58,880 --> 00:16:04,800
from your host machine

386
00:16:01,279 --> 00:16:07,440
and simulate guest machine

387
00:16:04,800 --> 00:16:10,320
okay or you can think of that we have

388
00:16:07,440 --> 00:16:13,440
underlying hardware and

389
00:16:10,320 --> 00:16:14,800
your computer running a program

390
00:16:13,440 --> 00:16:16,880
in a way

391
00:16:14,800 --> 00:16:17,839
that's also simulation

392
00:16:16,880 --> 00:16:20,839
okay

393
00:16:17,839 --> 00:16:22,639
so we just need to simulate

394
00:16:20,839 --> 00:16:24,160
n

395
00:16:22,639 --> 00:16:25,759
and the

396
00:16:24,160 --> 00:16:29,920
feed

397
00:16:25,759 --> 00:16:31,120
feed w input w into the m

398
00:16:29,920 --> 00:16:34,079
okay

399
00:16:31,120 --> 00:16:37,519
so when you simulate another machine

400
00:16:34,079 --> 00:16:39,600
then you know each step of that machine

401
00:16:37,519 --> 00:16:40,959
but you have no con uh you have no

402
00:16:39,600 --> 00:16:42,880
control right

403
00:16:40,959 --> 00:16:45,120
the control i mean

404
00:16:42,880 --> 00:16:48,160
you don't know uh okay i shouldn't use

405
00:16:45,120 --> 00:16:52,800
the word control i should know that

406
00:16:48,160 --> 00:16:56,800
you cannot uh foresee what will happen

407
00:16:52,800 --> 00:17:00,160
you can simulate one step by one step

408
00:16:56,800 --> 00:17:00,959
and know what is happening right now

409
00:17:00,160 --> 00:17:01,920
okay

410
00:17:00,959 --> 00:17:04,559
so

411
00:17:01,920 --> 00:17:07,520
if you observed if our

412
00:17:04,559 --> 00:17:12,880
algorithm yeah sorry our turn machine

413
00:17:07,520 --> 00:17:13,919
observe that m enters its accept state

414
00:17:12,880 --> 00:17:15,919
if

415
00:17:13,919 --> 00:17:17,280
if it enters

416
00:17:15,919 --> 00:17:20,959
accepted

417
00:17:17,280 --> 00:17:23,439
then you know right then we just do and

418
00:17:20,959 --> 00:17:25,760
accept

419
00:17:23,439 --> 00:17:27,360
don't forget that the accept here

420
00:17:25,760 --> 00:17:29,600
accepts what

421
00:17:27,360 --> 00:17:32,720
accepts

422
00:17:29,600 --> 00:17:33,600
this whole string

423
00:17:32,720 --> 00:17:35,679
and

424
00:17:33,600 --> 00:17:36,880
the accept here is

425
00:17:35,679 --> 00:17:39,120
you

426
00:17:36,880 --> 00:17:40,960
our turing machine universal turing

427
00:17:39,120 --> 00:17:43,919
machine actually

428
00:17:40,960 --> 00:17:43,919
accepts

429
00:17:45,120 --> 00:17:48,000
its own input

430
00:17:47,039 --> 00:17:52,080
right

431
00:17:48,000 --> 00:17:53,200
although this accept is caused by

432
00:17:52,080 --> 00:17:56,080
and

433
00:17:53,200 --> 00:17:56,080
accept

434
00:17:57,200 --> 00:17:59,200
w

435
00:17:58,400 --> 00:18:00,400
right

436
00:17:59,200 --> 00:18:01,280
because

437
00:18:00,400 --> 00:18:05,120
u

438
00:18:01,280 --> 00:18:08,799
simulated m on input w and observe that

439
00:18:05,120 --> 00:18:12,960
observes that m enters its accept states

440
00:18:08,799 --> 00:18:16,240
that means m accepts w then

441
00:18:12,960 --> 00:18:19,039
you accept its input

442
00:18:16,240 --> 00:18:21,280
the pair of mw

443
00:18:19,039 --> 00:18:23,120
okay

444
00:18:21,280 --> 00:18:26,559
and if n

445
00:18:23,120 --> 00:18:30,320
enters reject then we know that m reject

446
00:18:26,559 --> 00:18:34,640
w then we reject our

447
00:18:30,320 --> 00:18:37,280
reject our input sorry use rejects use

448
00:18:34,640 --> 00:18:37,280
on input

449
00:18:39,919 --> 00:18:44,880
and

450
00:18:40,960 --> 00:18:46,880
you know that the behavior of you here

451
00:18:44,880 --> 00:18:48,080
is already

452
00:18:46,880 --> 00:18:50,720
status

453
00:18:48,080 --> 00:18:53,520
satisfying the definition

454
00:18:50,720 --> 00:18:55,360
of a recognizer

455
00:18:53,520 --> 00:18:58,080
right

456
00:18:55,360 --> 00:19:02,080
you may be asking that why

457
00:18:58,080 --> 00:19:03,120
and maybe it enters a loop

458
00:19:02,080 --> 00:19:06,559
or

459
00:19:03,120 --> 00:19:09,039
i or we should we can consider it at it

460
00:19:06,559 --> 00:19:11,520
as a loop but

461
00:19:09,039 --> 00:19:14,000
for the word loop you may think that you

462
00:19:11,520 --> 00:19:16,720
can see repeating things

463
00:19:14,000 --> 00:19:16,720
but no

464
00:19:16,799 --> 00:19:21,360
and

465
00:19:17,600 --> 00:19:26,080
let's say m may enters a situation or a

466
00:19:21,360 --> 00:19:27,840
condition that it runs forever

467
00:19:26,080 --> 00:19:30,000
maybe without

468
00:19:27,840 --> 00:19:32,320
repeating anything

469
00:19:30,000 --> 00:19:34,480
how's that possible of course it is

470
00:19:32,320 --> 00:19:38,480
possible because you have a

471
00:19:34,480 --> 00:19:40,640
infinite tape right

472
00:19:38,480 --> 00:19:43,200
that say

473
00:19:40,640 --> 00:19:47,039
if it enters some state

474
00:19:43,200 --> 00:19:50,320
or some situation condition that

475
00:19:47,039 --> 00:19:54,720
it just keep going right

476
00:19:50,320 --> 00:19:57,679
okay in the right hand direction

477
00:19:54,720 --> 00:19:59,120
not goes wrong or goes right right

478
00:19:57,679 --> 00:20:00,880
so

479
00:19:59,120 --> 00:20:02,559
just go

480
00:20:00,880 --> 00:20:05,440
in uh

481
00:20:02,559 --> 00:20:06,880
talk towards the right direction keep

482
00:20:05,440 --> 00:20:08,400
going

483
00:20:06,880 --> 00:20:10,240
it is not a loop

484
00:20:08,400 --> 00:20:13,520
but it enters

485
00:20:10,240 --> 00:20:16,720
some kind of loop for uh sorry some kind

486
00:20:13,520 --> 00:20:18,880
of runs forever situation right

487
00:20:16,720 --> 00:20:21,200
so in a way you don't you you don't have

488
00:20:18,880 --> 00:20:23,440
a chance to

489
00:20:21,200 --> 00:20:26,000
in general

490
00:20:23,440 --> 00:20:29,440
detecting a repeat

491
00:20:26,000 --> 00:20:32,480
or loop situation so sometimes we say

492
00:20:29,440 --> 00:20:34,559
loop just you know um means that there

493
00:20:32,480 --> 00:20:37,039
is a situation in which the machine runs

494
00:20:34,559 --> 00:20:38,400
forever runs forever

495
00:20:37,039 --> 00:20:41,039
okay

496
00:20:38,400 --> 00:20:42,880
if n enters such

497
00:20:41,039 --> 00:20:45,200
situation

498
00:20:42,880 --> 00:20:48,720
as a simulator you

499
00:20:45,200 --> 00:20:52,480
it also enters that simula uh situation

500
00:20:48,720 --> 00:20:55,120
right so it so you will never give you

501
00:20:52,480 --> 00:20:57,200
an answer regarding

502
00:20:55,120 --> 00:21:00,840
its own input

503
00:20:57,200 --> 00:21:04,000
in atm or

504
00:21:00,840 --> 00:21:07,200
not right

505
00:21:04,000 --> 00:21:10,799
so in short you can consider that

506
00:21:07,200 --> 00:21:14,840
the answer of m exactly

507
00:21:10,799 --> 00:21:20,080
is the answer of sorry the answer of u

508
00:21:14,840 --> 00:21:23,200
here is it is exactly the answer of

509
00:21:20,080 --> 00:21:25,600
wronging and

510
00:21:23,200 --> 00:21:25,600
w

511
00:21:26,159 --> 00:21:31,200
just by doing so

512
00:21:28,559 --> 00:21:34,080
just by doing so

513
00:21:31,200 --> 00:21:35,679
we already proved that

514
00:21:34,080 --> 00:21:39,600
atn

515
00:21:35,679 --> 00:21:43,440
is a tuning recognizable language

516
00:21:39,600 --> 00:21:45,919
because the behavior of you satisfies

517
00:21:43,440 --> 00:21:47,520
the definition of

518
00:21:45,919 --> 00:21:51,039
recognizer

519
00:21:47,520 --> 00:21:54,159
so the recognizer for atn exists

520
00:21:51,039 --> 00:21:56,880
so atm is a recognizable to recognizable

521
00:21:54,159 --> 00:21:58,640
language so that's

522
00:21:56,880 --> 00:22:02,799
we know that

523
00:21:58,640 --> 00:22:06,480
atm is somewhere in the circle here atm

524
00:22:02,799 --> 00:22:08,400
is somewhere in the circle here okay

525
00:22:06,480 --> 00:22:10,320
now we want to

526
00:22:08,400 --> 00:22:15,919
prove that

527
00:22:10,320 --> 00:22:20,080
atm is exactly outside of decidable

528
00:22:15,919 --> 00:22:22,960
okay so we want to prove atm is here

529
00:22:20,080 --> 00:22:25,280
it's not in decidable that's what we

530
00:22:22,960 --> 00:22:26,880
want to do now

531
00:22:25,280 --> 00:22:29,360
so

532
00:22:26,880 --> 00:22:34,000
what we want to do

533
00:22:29,360 --> 00:22:37,039
is to use the contradiction in logics to

534
00:22:34,000 --> 00:22:41,840
prove that atm is undecidable

535
00:22:37,039 --> 00:22:43,760
firstly what means by being undecidable

536
00:22:41,840 --> 00:22:45,280
what does that mean

537
00:22:43,760 --> 00:22:48,000
same as

538
00:22:45,280 --> 00:22:49,840
language is non-regular or the language

539
00:22:48,000 --> 00:22:52,000
is not context-free

540
00:22:49,840 --> 00:22:53,360
that means

541
00:22:52,000 --> 00:22:55,840
you

542
00:22:53,360 --> 00:22:59,120
no one can ever

543
00:22:55,840 --> 00:23:03,120
design a turing machine

544
00:22:59,120 --> 00:23:06,799
that is able to decide atm

545
00:23:03,120 --> 00:23:11,039
right being undecidable means that

546
00:23:06,799 --> 00:23:11,919
and the same argument comes again that

547
00:23:11,039 --> 00:23:13,760
well

548
00:23:11,919 --> 00:23:16,000
perhaps we can

549
00:23:13,760 --> 00:23:18,400
not design a tuned machine to be the

550
00:23:16,000 --> 00:23:21,120
decider for atm

551
00:23:18,400 --> 00:23:23,360
that doesn't mean that some very smart

552
00:23:21,120 --> 00:23:24,559
people cannot do it

553
00:23:23,360 --> 00:23:26,720
right

554
00:23:24,559 --> 00:23:28,880
so we must

555
00:23:26,720 --> 00:23:32,320
prove

556
00:23:28,880 --> 00:23:36,120
the undecidability of atm in some

557
00:23:32,320 --> 00:23:36,120
absolute way

558
00:23:36,240 --> 00:23:39,120
you see

559
00:23:37,520 --> 00:23:41,520
for recognizable we just need to

560
00:23:39,120 --> 00:23:43,120
construct recognizer and since we

561
00:23:41,520 --> 00:23:44,159
already construct recognize that there's

562
00:23:43,120 --> 00:23:46,400
no

563
00:23:44,159 --> 00:23:48,799
problem here

564
00:23:46,400 --> 00:23:52,080
atm is recognizable

565
00:23:48,799 --> 00:23:54,480
but to prove atm is undecidable we need

566
00:23:52,080 --> 00:23:57,120
to have some

567
00:23:54,480 --> 00:24:01,120
way to absolutely

568
00:23:57,120 --> 00:24:05,840
shows that it is not possible

569
00:24:01,120 --> 00:24:05,840
to design a decider for atm

570
00:24:08,720 --> 00:24:12,240
so the skill we want to use in this

571
00:24:11,279 --> 00:24:16,919
proof

572
00:24:12,240 --> 00:24:16,919
is you know proof by contradiction

573
00:24:23,760 --> 00:24:28,640
okay

574
00:24:25,440 --> 00:24:30,320
so proof by contradiction firstly we

575
00:24:28,640 --> 00:24:34,880
assume that

576
00:24:30,320 --> 00:24:37,120
we assume that atm is desirable right we

577
00:24:34,880 --> 00:24:39,679
assume atm is desirable we have used

578
00:24:37,120 --> 00:24:39,679
this uh

579
00:24:40,559 --> 00:24:43,919
technique

580
00:24:41,919 --> 00:24:46,240
previously with

581
00:24:43,919 --> 00:24:48,559
pumping lemma for either regular

582
00:24:46,240 --> 00:24:50,400
language or country free language right

583
00:24:48,559 --> 00:24:54,720
we firstly

584
00:24:50,400 --> 00:24:57,600
assume that they are regular or they are

585
00:24:54,720 --> 00:24:59,760
context-free languages then

586
00:24:57,600 --> 00:25:01,120
we derive some

587
00:24:59,760 --> 00:25:04,400
contradiction

588
00:25:01,120 --> 00:25:06,559
so our assumption is wrong so

589
00:25:04,400 --> 00:25:08,960
the theorem proved

590
00:25:06,559 --> 00:25:12,000
so now

591
00:25:08,960 --> 00:25:17,760
assume that atm is decidable

592
00:25:12,000 --> 00:25:17,760
okay assume that atn is decidable

593
00:25:23,919 --> 00:25:26,919
then

594
00:25:29,760 --> 00:25:35,039
the decider for atn

595
00:25:33,200 --> 00:25:36,159
exists

596
00:25:35,039 --> 00:25:37,440
right

597
00:25:36,159 --> 00:25:41,200
so

598
00:25:37,440 --> 00:25:43,679
let's say h here

599
00:25:41,200 --> 00:25:47,440
is the decider for atm

600
00:25:43,679 --> 00:25:47,440
why it's called edge because

601
00:25:47,840 --> 00:25:53,200
the first undecidable problem is called

602
00:25:51,039 --> 00:25:54,080
holding problem

603
00:25:53,200 --> 00:25:58,080
and

604
00:25:54,080 --> 00:26:01,200
you know the author of the textbook of

605
00:25:58,080 --> 00:26:04,559
aligns the acceptance definition for

606
00:26:01,200 --> 00:26:07,200
tuning machines pdas and the regular

607
00:26:04,559 --> 00:26:08,159
uh dfas

608
00:26:07,200 --> 00:26:10,400
so

609
00:26:08,159 --> 00:26:13,279
uh they it

610
00:26:10,400 --> 00:26:15,760
the other changes the holding problem to

611
00:26:13,279 --> 00:26:19,840
be atm here

612
00:26:15,760 --> 00:26:22,640
but the whole proof structure

613
00:26:19,840 --> 00:26:25,440
we can borrow that from the original

614
00:26:22,640 --> 00:26:26,720
proof something like like it so we call

615
00:26:25,440 --> 00:26:30,320
it h

616
00:26:26,720 --> 00:26:31,440
means the decider for holding problem

617
00:26:30,320 --> 00:26:32,400
okay

618
00:26:31,440 --> 00:26:33,919
so

619
00:26:32,400 --> 00:26:37,200
let's say h

620
00:26:33,919 --> 00:26:37,200
is the decider

621
00:26:37,360 --> 00:26:39,840
of atm

622
00:26:40,080 --> 00:26:45,279
then since h is the decider of atn

623
00:26:43,840 --> 00:26:48,320
that means

624
00:26:45,279 --> 00:26:48,320
for its input

625
00:26:48,960 --> 00:26:54,799
there is a

626
00:26:50,320 --> 00:26:54,799
theory machine m and the two machine w

627
00:26:56,720 --> 00:27:01,600
you set up the input

628
00:26:58,880 --> 00:27:03,760
for h2 process

629
00:27:01,600 --> 00:27:05,039
then h will

630
00:27:03,760 --> 00:27:07,279
definitely

631
00:27:05,039 --> 00:27:10,320
tell you the answer

632
00:27:07,279 --> 00:27:11,120
the answer is probably probably accept

633
00:27:10,320 --> 00:27:12,320
or

634
00:27:11,120 --> 00:27:14,400
reject

635
00:27:12,320 --> 00:27:15,760
right it will

636
00:27:14,400 --> 00:27:16,799
definitely

637
00:27:15,760 --> 00:27:19,840
within

638
00:27:16,799 --> 00:27:21,360
some time to tell you that accept or

639
00:27:19,840 --> 00:27:24,080
reject

640
00:27:21,360 --> 00:27:26,720
if h tells you

641
00:27:24,080 --> 00:27:28,559
if h tells you accept

642
00:27:26,720 --> 00:27:30,480
that means

643
00:27:28,559 --> 00:27:32,240
that means

644
00:27:30,480 --> 00:27:35,840
the given n

645
00:27:32,240 --> 00:27:35,840
accepts w

646
00:27:36,080 --> 00:27:41,520
if the answer is reject that means

647
00:27:40,000 --> 00:27:45,120
m

648
00:27:41,520 --> 00:27:47,440
does not accept w

649
00:27:45,120 --> 00:27:50,480
okay so here you

650
00:27:47,440 --> 00:27:50,480
you have to know that

651
00:27:51,279 --> 00:27:55,919
there is no other possibilities

652
00:27:53,919 --> 00:27:59,480
h always

653
00:27:55,919 --> 00:27:59,480
as a decider

654
00:28:06,159 --> 00:28:09,520
as a decider h always gives you an

655
00:28:08,640 --> 00:28:11,919
answer

656
00:28:09,520 --> 00:28:14,919
and the answer is either accept or

657
00:28:11,919 --> 00:28:14,919
reject

658
00:28:17,039 --> 00:28:19,360
and

659
00:28:17,760 --> 00:28:20,399
for accept

660
00:28:19,360 --> 00:28:22,320
that means

661
00:28:20,399 --> 00:28:24,480
m accept w

662
00:28:22,320 --> 00:28:28,000
for reject

663
00:28:24,480 --> 00:28:30,880
that means m does not reject w

664
00:28:28,000 --> 00:28:32,640
and don't forget that does not reject

665
00:28:30,880 --> 00:28:34,080
actually con

666
00:28:32,640 --> 00:28:37,200
contains

667
00:28:34,080 --> 00:28:39,279
two possibilities one

668
00:28:37,200 --> 00:28:41,520
you know runs forever

669
00:28:39,279 --> 00:28:41,520
right

670
00:28:42,320 --> 00:28:47,760
one runs forever the other is of course

671
00:28:45,279 --> 00:28:47,760
reject

672
00:28:49,279 --> 00:28:51,200
okay

673
00:28:50,320 --> 00:28:54,240
so

674
00:28:51,200 --> 00:28:55,840
m's behavior may have three

675
00:28:54,240 --> 00:28:59,360
possibilities but

676
00:28:55,840 --> 00:29:00,320
edge tells you accept when m accept w

677
00:28:59,360 --> 00:29:05,440
and

678
00:29:00,320 --> 00:29:05,440
reject when m does not accept w

679
00:29:07,679 --> 00:29:13,600
okay so

680
00:29:08,799 --> 00:29:14,559
we assume that such a decider exists

681
00:29:13,600 --> 00:29:16,720
okay

682
00:29:14,559 --> 00:29:20,480
or you can imagine

683
00:29:16,720 --> 00:29:21,600
that there is some api existing

684
00:29:20,480 --> 00:29:25,039
somewhere

685
00:29:21,600 --> 00:29:28,320
someone provides you this api

686
00:29:25,039 --> 00:29:31,360
you know on amazon ec2 or

687
00:29:28,320 --> 00:29:33,760
other you know github

688
00:29:31,360 --> 00:29:37,039
website and you don't need to know the

689
00:29:33,760 --> 00:29:40,559
detail of edge you just need to know

690
00:29:37,039 --> 00:29:45,279
when you give when you give a h

691
00:29:40,559 --> 00:29:46,480
m and w h will return you an answer and

692
00:29:45,279 --> 00:29:51,039
the answer

693
00:29:46,480 --> 00:29:53,039
is either accept or reject and if accept

694
00:29:51,039 --> 00:29:56,559
that means

695
00:29:53,039 --> 00:29:58,480
the m and w you give

696
00:29:56,559 --> 00:30:02,480
m will accept w

697
00:29:58,480 --> 00:30:05,120
otherwise and does not accept w okay so

698
00:30:02,480 --> 00:30:08,399
we assume that such an api such a time

699
00:30:05,120 --> 00:30:10,480
machine exists somewhere in the world

700
00:30:08,399 --> 00:30:12,320
then we can write down a program like

701
00:30:10,480 --> 00:30:13,919
here d

702
00:30:12,320 --> 00:30:16,240
let's write a program

703
00:30:13,919 --> 00:30:17,039
okay

704
00:30:16,240 --> 00:30:20,240
what

705
00:30:17,039 --> 00:30:22,480
does our program d do

706
00:30:20,240 --> 00:30:26,480
our program on a turing machine which is

707
00:30:22,480 --> 00:30:29,440
a program okay which is a program

708
00:30:26,480 --> 00:30:29,440
our program

709
00:30:31,600 --> 00:30:34,240
calls h

710
00:30:33,279 --> 00:30:36,559
okay

711
00:30:34,240 --> 00:30:37,679
we call the api edge here

712
00:30:36,559 --> 00:30:41,120
and what

713
00:30:37,679 --> 00:30:41,120
on the input m

714
00:30:41,360 --> 00:30:45,760
and m as a input

715
00:30:44,640 --> 00:30:48,159
okay

716
00:30:45,760 --> 00:30:54,399
it is possible you you need to do a you

717
00:30:48,159 --> 00:30:54,399
know uh re-encoding for the n but

718
00:30:55,120 --> 00:30:57,600
you can

719
00:30:57,760 --> 00:31:03,840
you just need to reformat m according to

720
00:31:01,039 --> 00:31:05,120
m's alphabet something like that so

721
00:31:03,840 --> 00:31:06,880
anyway

722
00:31:05,120 --> 00:31:08,880
m here

723
00:31:06,880 --> 00:31:11,760
it's in the same it

724
00:31:08,880 --> 00:31:15,200
essentially we just

725
00:31:11,760 --> 00:31:17,600
repeat m itself as its own input that's

726
00:31:15,200 --> 00:31:19,840
what we are doing right now

727
00:31:17,600 --> 00:31:23,200
so

728
00:31:19,840 --> 00:31:23,200
our program d here

729
00:31:25,519 --> 00:31:28,720
is given

730
00:31:27,120 --> 00:31:30,840
a program

731
00:31:28,720 --> 00:31:33,120
then we call

732
00:31:30,840 --> 00:31:35,760
h on

733
00:31:33,120 --> 00:31:38,240
the program as a program and the program

734
00:31:35,760 --> 00:31:40,880
itself as the input

735
00:31:38,240 --> 00:31:42,640
so that's what we the the program d do

736
00:31:40,880 --> 00:31:43,679
here

737
00:31:42,640 --> 00:31:46,720
then

738
00:31:43,679 --> 00:31:50,159
since we know that edge will

739
00:31:46,720 --> 00:31:51,120
either return accept or reject it must

740
00:31:50,159 --> 00:31:53,200
return

741
00:31:51,120 --> 00:31:56,320
and there is only two possibility there

742
00:31:53,200 --> 00:31:59,440
is no other possibilities okay

743
00:31:56,320 --> 00:32:00,559
so if h accepts

744
00:31:59,440 --> 00:32:04,480
okay

745
00:32:00,559 --> 00:32:07,200
our d report reject

746
00:32:04,480 --> 00:32:09,200
if edge rejects

747
00:32:07,200 --> 00:32:11,200
our d report

748
00:32:09,200 --> 00:32:12,559
accept

749
00:32:11,200 --> 00:32:16,960
okay

750
00:32:12,559 --> 00:32:19,440
so we just re uh reverse the answer of

751
00:32:16,960 --> 00:32:22,320
h that's what

752
00:32:19,440 --> 00:32:25,320
d do oh sorry that's what d does

753
00:32:22,320 --> 00:32:25,320
okay

754
00:32:28,480 --> 00:32:33,120
so

755
00:32:29,519 --> 00:32:33,120
first question here is that

756
00:32:33,440 --> 00:32:38,960
does the program d

757
00:32:36,480 --> 00:32:38,960
exist

758
00:32:40,240 --> 00:32:47,120
of course it it exists right because you

759
00:32:43,519 --> 00:32:47,120
can write in any language

760
00:32:47,200 --> 00:32:52,480
because all you all d

761
00:32:50,320 --> 00:32:53,600
all d does

762
00:32:52,480 --> 00:32:56,720
is

763
00:32:53,600 --> 00:32:58,720
get an input

764
00:32:56,720 --> 00:33:00,559
and duplicate

765
00:32:58,720 --> 00:33:03,360
or possibly

766
00:33:00,559 --> 00:33:05,200
re-encode the input

767
00:33:03,360 --> 00:33:08,399
and then it

768
00:33:05,200 --> 00:33:10,640
calls an api h and

769
00:33:08,399 --> 00:33:12,640
that edge to c

770
00:33:10,640 --> 00:33:15,279
to process the

771
00:33:12,640 --> 00:33:15,279
input here

772
00:33:15,519 --> 00:33:19,519
and since edge will return an answer we

773
00:33:18,240 --> 00:33:22,880
just you know

774
00:33:19,519 --> 00:33:25,679
uh make the answer false to true or true

775
00:33:22,880 --> 00:33:27,519
to false reverse the answer and then

776
00:33:25,679 --> 00:33:29,760
return

777
00:33:27,519 --> 00:33:32,480
so there is nothing

778
00:33:29,760 --> 00:33:33,360
in question

779
00:33:32,480 --> 00:33:34,080
that

780
00:33:33,360 --> 00:33:35,440
d

781
00:33:34,080 --> 00:33:39,279
cannot do

782
00:33:35,440 --> 00:33:40,720
so the existence of d

783
00:33:39,279 --> 00:33:41,440
is no problem

784
00:33:40,720 --> 00:33:43,600
d

785
00:33:41,440 --> 00:33:46,880
always exists

786
00:33:43,600 --> 00:33:48,640
okay so that's the first question here

787
00:33:46,880 --> 00:33:51,279
then there if there is no problem

788
00:33:48,640 --> 00:33:53,360
regarding the existence of d

789
00:33:51,279 --> 00:33:54,159
then

790
00:33:53,360 --> 00:33:55,760
what

791
00:33:54,159 --> 00:33:57,360
suppose

792
00:33:55,760 --> 00:33:59,840
supposedly

793
00:33:57,360 --> 00:34:00,720
d will do is

794
00:33:59,840 --> 00:34:02,720
here

795
00:34:00,720 --> 00:34:05,440
that

796
00:34:02,720 --> 00:34:06,720
this is the behavior of d

797
00:34:05,440 --> 00:34:07,760
right

798
00:34:06,720 --> 00:34:09,359
we

799
00:34:07,760 --> 00:34:13,760
input

800
00:34:09,359 --> 00:34:17,119
a program into d and that's wrong d

801
00:34:13,760 --> 00:34:18,639
and d will definitely give us accept or

802
00:34:17,119 --> 00:34:21,679
reject

803
00:34:18,639 --> 00:34:22,879
why because there's no there's no

804
00:34:21,679 --> 00:34:25,760
particular

805
00:34:22,879 --> 00:34:27,359
you know uh there's nothing particularly

806
00:34:25,760 --> 00:34:30,720
difficult

807
00:34:27,359 --> 00:34:32,639
or possibly impossible for d to do

808
00:34:30,720 --> 00:34:36,079
so d just

809
00:34:32,639 --> 00:34:39,200
duplicate or possibly re-encode the

810
00:34:36,079 --> 00:34:42,000
input and close edge and return

811
00:34:39,200 --> 00:34:46,480
the reverse answer of edge right

812
00:34:42,000 --> 00:34:48,720
so d either accept or reject

813
00:34:46,480 --> 00:34:51,359
when d accepts

814
00:34:48,720 --> 00:34:51,359
that means

815
00:34:51,520 --> 00:34:54,000
and

816
00:34:52,320 --> 00:34:57,200
the machine the

817
00:34:54,000 --> 00:35:01,520
program you give d as input

818
00:34:57,200 --> 00:35:03,520
m does not accept itself as the input

819
00:35:01,520 --> 00:35:04,640
string

820
00:35:03,520 --> 00:35:08,560
right

821
00:35:04,640 --> 00:35:11,119
m does not accept itself as input string

822
00:35:08,560 --> 00:35:12,320
well uh according to my previous

823
00:35:11,119 --> 00:35:13,520
experience

824
00:35:12,320 --> 00:35:16,640
many

825
00:35:13,520 --> 00:35:19,359
many of you may

826
00:35:16,640 --> 00:35:19,359
may think of

827
00:35:19,520 --> 00:35:24,079
how is that possible program read itself

828
00:35:22,640 --> 00:35:25,119
as input

829
00:35:24,079 --> 00:35:27,760
well

830
00:35:25,119 --> 00:35:31,599
in a way how

831
00:35:27,760 --> 00:35:34,640
is it not possible

832
00:35:31,599 --> 00:35:35,599
every program you write is a text file

833
00:35:34,640 --> 00:35:37,440
right

834
00:35:35,599 --> 00:35:40,800
then you just

835
00:35:37,440 --> 00:35:43,119
input your the the source code the

836
00:35:40,800 --> 00:35:46,640
source code of that program into that

837
00:35:43,119 --> 00:35:48,160
program then it's as simple as simple as

838
00:35:46,640 --> 00:35:49,440
that

839
00:35:48,160 --> 00:35:51,520
don't think

840
00:35:49,440 --> 00:35:52,320
too complicated

841
00:35:51,520 --> 00:35:54,400
okay

842
00:35:52,320 --> 00:35:55,520
the situation here is

843
00:35:54,400 --> 00:35:57,520
pretty much

844
00:35:55,520 --> 00:35:58,960
very simple

845
00:35:57,520 --> 00:36:02,160
you just

846
00:35:58,960 --> 00:36:05,119
fit in your own program the source code

847
00:36:02,160 --> 00:36:06,079
of it that's it okay so we are talking

848
00:36:05,119 --> 00:36:08,720
about

849
00:36:06,079 --> 00:36:12,480
a program running and

850
00:36:08,720 --> 00:36:15,440
on the input of its own source program

851
00:36:12,480 --> 00:36:17,520
that's all we are talking about

852
00:36:15,440 --> 00:36:22,000
nothing else okay

853
00:36:17,520 --> 00:36:25,760
so if d here accept that means

854
00:36:22,000 --> 00:36:29,119
the given n does not accept

855
00:36:25,760 --> 00:36:31,119
its own source code as input string

856
00:36:29,119 --> 00:36:34,240
if d reject

857
00:36:31,119 --> 00:36:36,000
that means the given program m here

858
00:36:34,240 --> 00:36:39,520
accepts

859
00:36:36,000 --> 00:36:42,160
its own source code as input string

860
00:36:39,520 --> 00:36:45,680
right so

861
00:36:42,160 --> 00:36:48,800
this is the behavior of d

862
00:36:45,680 --> 00:36:48,800
which is you know

863
00:36:52,839 --> 00:37:00,160
which is uh

864
00:36:55,280 --> 00:37:00,160
determined by the behavior of an h

865
00:37:00,720 --> 00:37:04,880
then let's talk about

866
00:37:03,200 --> 00:37:05,680
if

867
00:37:04,880 --> 00:37:08,079
if

868
00:37:05,680 --> 00:37:09,280
we

869
00:37:08,079 --> 00:37:12,960
input

870
00:37:09,280 --> 00:37:12,960
these own source code

871
00:37:14,160 --> 00:37:19,280
to d

872
00:37:16,400 --> 00:37:20,560
what will happen

873
00:37:19,280 --> 00:37:23,680
okay

874
00:37:20,560 --> 00:37:25,920
if we input

875
00:37:23,680 --> 00:37:27,680
the source code of d

876
00:37:25,920 --> 00:37:29,359
as the input string

877
00:37:27,680 --> 00:37:30,880
for b

878
00:37:29,359 --> 00:37:34,079
to process

879
00:37:30,880 --> 00:37:34,079
then what will happen

880
00:37:34,880 --> 00:37:39,440
we think we can think of it this way

881
00:37:38,480 --> 00:37:40,640
if

882
00:37:39,440 --> 00:37:43,520
the

883
00:37:40,640 --> 00:37:44,800
answers accept

884
00:37:43,520 --> 00:37:48,240
if the

885
00:37:44,800 --> 00:37:51,920
answers accept

886
00:37:48,240 --> 00:37:53,440
that means d

887
00:37:51,920 --> 00:37:55,359
does not

888
00:37:53,440 --> 00:37:59,119
accept

889
00:37:55,359 --> 00:38:01,760
its own source code right

890
00:37:59,119 --> 00:38:06,400
if let me repeat that again

891
00:38:01,760 --> 00:38:08,240
if d x uh the answer if if the answer is

892
00:38:06,400 --> 00:38:09,839
accept

893
00:38:08,240 --> 00:38:11,200
that's

894
00:38:09,839 --> 00:38:12,480
well

895
00:38:11,200 --> 00:38:15,359
indicates

896
00:38:12,480 --> 00:38:21,119
d does not accept

897
00:38:15,359 --> 00:38:21,119
okay d does not accept its own input

898
00:38:22,960 --> 00:38:28,640
but it's wrong

899
00:38:25,280 --> 00:38:28,640
right it's contradiction

900
00:38:29,040 --> 00:38:33,839
why

901
00:38:31,280 --> 00:38:33,839
because

902
00:38:34,320 --> 00:38:38,000
it says the

903
00:38:36,000 --> 00:38:42,960
does not accept

904
00:38:38,000 --> 00:38:45,520
does not accept its own source code but

905
00:38:42,960 --> 00:38:47,520
what really happens

906
00:38:45,520 --> 00:38:52,000
is the

907
00:38:47,520 --> 00:38:54,160
accept its own input

908
00:38:52,000 --> 00:38:56,240
right

909
00:38:54,160 --> 00:38:57,359
so the

910
00:38:56,240 --> 00:38:58,400
so

911
00:38:57,359 --> 00:38:59,440
this

912
00:38:58,400 --> 00:39:00,400
one

913
00:38:59,440 --> 00:39:02,000
is

914
00:39:00,400 --> 00:39:05,359
wrong

915
00:39:02,000 --> 00:39:09,200
because what really happened is that

916
00:39:05,359 --> 00:39:09,200
the accept d

917
00:39:12,640 --> 00:39:17,839
you need to think of the what mean uh

918
00:39:15,680 --> 00:39:21,839
what does the answer of accept and

919
00:39:17,839 --> 00:39:23,440
region mean and what really happened

920
00:39:21,839 --> 00:39:28,440
okay

921
00:39:23,440 --> 00:39:28,440
so if it really happens

922
00:39:29,040 --> 00:39:35,280
uh okay that's a

923
00:39:31,040 --> 00:39:37,520
if d really accepts d

924
00:39:35,280 --> 00:39:38,560
that's the situation we're talking about

925
00:39:37,520 --> 00:39:40,839
if d

926
00:39:38,560 --> 00:39:44,000
really accepts

927
00:39:40,839 --> 00:39:46,800
d such a situation

928
00:39:44,000 --> 00:39:48,800
will happen under

929
00:39:46,800 --> 00:39:52,400
the condition that d

930
00:39:48,800 --> 00:39:54,640
does not accept d

931
00:39:52,400 --> 00:39:57,359
so that's the

932
00:39:54,640 --> 00:39:58,240
contradiction here

933
00:39:57,359 --> 00:40:00,480
okay

934
00:39:58,240 --> 00:40:01,440
that's a contradiction here

935
00:40:00,480 --> 00:40:03,440
so

936
00:40:01,440 --> 00:40:05,119
on the other hand there is another

937
00:40:03,440 --> 00:40:07,280
possibility that

938
00:40:05,119 --> 00:40:07,280
d

939
00:40:08,800 --> 00:40:12,240
rejects

940
00:40:11,119 --> 00:40:13,040
d

941
00:40:12,240 --> 00:40:17,599
right

942
00:40:13,040 --> 00:40:19,760
that's the other possibilities because

943
00:40:17,599 --> 00:40:21,920
there will be only two

944
00:40:19,760 --> 00:40:23,040
possible possible answers returned from

945
00:40:21,920 --> 00:40:25,040
d

946
00:40:23,040 --> 00:40:26,079
the other one is reject

947
00:40:25,040 --> 00:40:27,280
so

948
00:40:26,079 --> 00:40:31,040
if d

949
00:40:27,280 --> 00:40:31,040
really rejects d

950
00:40:31,520 --> 00:40:34,560
that will happen

951
00:40:32,930 --> 00:40:36,800
[Music]

952
00:40:34,560 --> 00:40:38,800
under the situation

953
00:40:36,800 --> 00:40:40,000
that

954
00:40:38,800 --> 00:40:42,480
d

955
00:40:40,000 --> 00:40:44,480
accepts

956
00:40:42,480 --> 00:40:45,760
d

957
00:40:44,480 --> 00:40:47,599
so

958
00:40:45,760 --> 00:40:50,160
that's also

959
00:40:47,599 --> 00:40:53,839
a contradiction it's wrong

960
00:40:50,160 --> 00:40:53,839
so also a contradiction

961
00:40:55,520 --> 00:40:59,280
because what really happened

962
00:40:58,319 --> 00:41:00,000
is

963
00:40:59,280 --> 00:41:01,520
d

964
00:41:00,000 --> 00:41:04,319
rejects d

965
00:41:01,520 --> 00:41:07,040
and such a

966
00:41:04,319 --> 00:41:08,800
such an event only happens in the

967
00:41:07,040 --> 00:41:09,520
condition that

968
00:41:08,800 --> 00:41:12,319
d

969
00:41:09,520 --> 00:41:12,319
accepts d

970
00:41:13,119 --> 00:41:16,560
okay

971
00:41:14,400 --> 00:41:18,400
so that means

972
00:41:16,560 --> 00:41:21,920
as long as

973
00:41:18,400 --> 00:41:26,319
the decider of two sorry the decider of

974
00:41:21,920 --> 00:41:26,319
atn which is the edge here

975
00:41:27,599 --> 00:41:30,079
exists

976
00:41:30,560 --> 00:41:35,760
as long as

977
00:41:32,400 --> 00:41:39,599
h exists

978
00:41:35,760 --> 00:41:41,839
we can surely construct d

979
00:41:39,599 --> 00:41:41,839
and

980
00:41:42,000 --> 00:41:47,880
d causes the contradiction here

981
00:41:49,760 --> 00:41:51,920
then we know that

982
00:41:51,200 --> 00:41:55,359
h

983
00:41:51,920 --> 00:41:56,160
should not exist

984
00:41:55,359 --> 00:41:58,960
okay

985
00:41:56,160 --> 00:42:01,119
because the contradiction raised

986
00:41:58,960 --> 00:42:02,480
by the existence

987
00:42:01,119 --> 00:42:06,640
of

988
00:42:02,480 --> 00:42:06,640
the designer of atn

989
00:42:08,560 --> 00:42:16,079
so

990
00:42:10,160 --> 00:42:20,560
the designer of atn should not exist

991
00:42:16,079 --> 00:42:23,920
so atn is undecidable because there is

992
00:42:20,560 --> 00:42:27,359
impossible to decide to

993
00:42:23,920 --> 00:42:30,640
design a an

994
00:42:27,359 --> 00:42:34,960
atm decider

995
00:42:30,640 --> 00:42:34,960
okay so that's how we prove

996
00:42:35,599 --> 00:42:39,520
theorem four point

997
00:42:38,079 --> 00:42:41,760
eleven

998
00:42:39,520 --> 00:42:41,760
okay

999
00:42:42,400 --> 00:42:47,680
so that's uh

1000
00:42:45,119 --> 00:42:49,599
repeat the whole

1001
00:42:47,680 --> 00:42:52,640
proof

1002
00:42:49,599 --> 00:42:54,319
again okay so uh

1003
00:42:52,640 --> 00:42:57,760
very quickly

1004
00:42:54,319 --> 00:42:59,200
so the flow goes this way

1005
00:42:57,760 --> 00:43:01,520
firstly

1006
00:42:59,200 --> 00:43:05,040
we assume that

1007
00:43:01,520 --> 00:43:06,720
the decider of atn

1008
00:43:05,040 --> 00:43:09,440
exists

1009
00:43:06,720 --> 00:43:14,079
let's call it h

1010
00:43:09,440 --> 00:43:14,079
so the behavior of h is that

1011
00:43:14,560 --> 00:43:18,960
whatever input

1012
00:43:16,240 --> 00:43:18,960
into h

1013
00:43:19,440 --> 00:43:24,720
h will give you two only two possible

1014
00:43:23,119 --> 00:43:28,640
end answers

1015
00:43:24,720 --> 00:43:31,280
as will always stops and gives you

1016
00:43:28,640 --> 00:43:31,280
the answer

1017
00:43:31,599 --> 00:43:35,440
regarding the

1018
00:43:33,440 --> 00:43:38,079
string okay

1019
00:43:35,440 --> 00:43:39,119
so if h tells you

1020
00:43:38,079 --> 00:43:42,480
accept

1021
00:43:39,119 --> 00:43:44,079
or that say h accept

1022
00:43:42,480 --> 00:43:45,520
its own input

1023
00:43:44,079 --> 00:43:47,040
that means

1024
00:43:45,520 --> 00:43:49,359
m

1025
00:43:47,040 --> 00:43:52,880
accepts w

1026
00:43:49,359 --> 00:43:57,119
otherwise if h tells you reject that

1027
00:43:52,880 --> 00:43:59,119
means edge reject its input

1028
00:43:57,119 --> 00:44:01,760
that means m

1029
00:43:59,119 --> 00:44:02,880
does not accept w

1030
00:44:01,760 --> 00:44:05,760
and don't

1031
00:44:02,880 --> 00:44:09,200
forget that does not accept

1032
00:44:05,760 --> 00:44:11,520
contains two possibilities rejects or

1033
00:44:09,200 --> 00:44:14,240
runs forever okay

1034
00:44:11,520 --> 00:44:16,319
anyway we assume that h exists

1035
00:44:14,240 --> 00:44:18,000
okay h exists

1036
00:44:16,319 --> 00:44:21,440
so we can write

1037
00:44:18,000 --> 00:44:24,800
we can design a turing machine as

1038
00:44:21,440 --> 00:44:26,960
here kinda call it d

1039
00:44:24,800 --> 00:44:29,520
what does these two machine do

1040
00:44:26,960 --> 00:44:30,400
these two machine

1041
00:44:29,520 --> 00:44:33,280
will

1042
00:44:30,400 --> 00:44:34,720
process an input which is also a turing

1043
00:44:33,280 --> 00:44:38,800
machine

1044
00:44:34,720 --> 00:44:41,440
and then we the d here just duplicate

1045
00:44:38,800 --> 00:44:43,520
the source code of the uh sorry the

1046
00:44:41,440 --> 00:44:45,200
source code of the two machine and

1047
00:44:43,520 --> 00:44:47,760
possibly

1048
00:44:45,200 --> 00:44:50,480
re-encode the source code of that two

1049
00:44:47,760 --> 00:44:53,839
machine into the alphabet

1050
00:44:50,480 --> 00:44:53,839
of the turing machine

1051
00:44:54,240 --> 00:44:59,040
see because the alphabet

1052
00:44:57,119 --> 00:45:01,599
for d

1053
00:44:59,040 --> 00:45:04,880
may be different

1054
00:45:01,599 --> 00:45:05,839
from the alphabet for n right

1055
00:45:04,880 --> 00:45:06,960
so

1056
00:45:05,839 --> 00:45:11,200
d

1057
00:45:06,960 --> 00:45:14,560
may be able to uh to process m here and

1058
00:45:11,200 --> 00:45:17,040
may not be able to process its own

1059
00:45:14,560 --> 00:45:19,599
source code as encoded in these

1060
00:45:17,040 --> 00:45:21,280
alphabets so we probably need to

1061
00:45:19,599 --> 00:45:22,160
re-encode

1062
00:45:21,280 --> 00:45:25,520
m

1063
00:45:22,160 --> 00:45:26,720
for amazon alphabet okay that's two

1064
00:45:25,520 --> 00:45:28,560
that's uh

1065
00:45:26,720 --> 00:45:31,359
you know details but

1066
00:45:28,560 --> 00:45:32,640
uh you can think of why would we

1067
00:45:31,359 --> 00:45:35,200
want to

1068
00:45:32,640 --> 00:45:36,640
possibly need to re-encode it

1069
00:45:35,200 --> 00:45:39,680
okay anyway

1070
00:45:36,640 --> 00:45:41,680
so this job is essentially

1071
00:45:39,680 --> 00:45:42,720
duplicate m and

1072
00:45:41,680 --> 00:45:44,319
fit

1073
00:45:42,720 --> 00:45:47,119
the pair here

1074
00:45:44,319 --> 00:45:47,119
into h

1075
00:45:47,280 --> 00:45:53,440
and h is a decider so edge will always

1076
00:45:50,480 --> 00:45:56,400
stops and gives you an answer

1077
00:45:53,440 --> 00:45:59,599
if h accepts d

1078
00:45:56,400 --> 00:46:00,640
rejects if h rejects d

1079
00:45:59,599 --> 00:46:04,079
accepts

1080
00:46:00,640 --> 00:46:07,200
that's what we constructed to do

1081
00:46:04,079 --> 00:46:08,240
so this behavior is that

1082
00:46:07,200 --> 00:46:11,040
if d

1083
00:46:08,240 --> 00:46:11,920
accepts m that means

1084
00:46:11,040 --> 00:46:15,280
m

1085
00:46:11,920 --> 00:46:17,920
does not accept its own source code

1086
00:46:15,280 --> 00:46:19,599
if d rejects

1087
00:46:17,920 --> 00:46:23,200
m that means

1088
00:46:19,599 --> 00:46:25,119
m accepts its own source code right

1089
00:46:23,200 --> 00:46:26,880
that's the behavior of d

1090
00:46:25,119 --> 00:46:29,680
and these ex

1091
00:46:26,880 --> 00:46:31,040
these existence is no problem

1092
00:46:29,680 --> 00:46:32,880
because there is

1093
00:46:31,040 --> 00:46:34,640
no particular

1094
00:46:32,880 --> 00:46:37,680
impossible things

1095
00:46:34,640 --> 00:46:38,720
we ask did to do okay

1096
00:46:37,680 --> 00:46:41,599
however

1097
00:46:38,720 --> 00:46:43,359
contradictions

1098
00:46:41,599 --> 00:46:44,480
are obtained here

1099
00:46:43,359 --> 00:46:46,079
because

1100
00:46:44,480 --> 00:46:49,680
since d

1101
00:46:46,079 --> 00:46:49,680
also always stops

1102
00:46:49,760 --> 00:46:54,400
and let's check to the two possible

1103
00:46:52,560 --> 00:46:55,599
answer from d

1104
00:46:54,400 --> 00:46:57,280
if d

1105
00:46:55,599 --> 00:46:59,520
accepts

1106
00:46:57,280 --> 00:47:01,359
its own source code

1107
00:46:59,520 --> 00:47:02,160
that must mean

1108
00:47:01,359 --> 00:47:06,079
d

1109
00:47:02,160 --> 00:47:08,880
does not accept its own source code so

1110
00:47:06,079 --> 00:47:11,119
that's an inter that's a

1111
00:47:08,880 --> 00:47:13,520
contradiction

1112
00:47:11,119 --> 00:47:15,680
if d rejects

1113
00:47:13,520 --> 00:47:19,040
its own source code

1114
00:47:15,680 --> 00:47:23,119
it have to mean that d

1115
00:47:19,040 --> 00:47:25,280
accepts its own source code that's also

1116
00:47:23,119 --> 00:47:29,200
a contradiction

1117
00:47:25,280 --> 00:47:30,720
and see there's no other possibilities

1118
00:47:29,200 --> 00:47:34,640
so

1119
00:47:30,720 --> 00:47:34,640
the existence of d

1120
00:47:35,280 --> 00:47:39,839
is

1121
00:47:36,839 --> 00:47:42,079
impossible but the program of d can be

1122
00:47:39,839 --> 00:47:45,200
written down so

1123
00:47:42,079 --> 00:47:45,200
the impossible

1124
00:47:46,160 --> 00:47:53,839
the impossibility

1125
00:47:48,559 --> 00:47:53,839
is raised by the existence of h

1126
00:47:54,400 --> 00:47:57,680
so we can conclude that

1127
00:47:56,880 --> 00:48:00,640
h

1128
00:47:57,680 --> 00:48:03,760
cannot exist

1129
00:48:00,640 --> 00:48:07,200
okay h cannot exist

1130
00:48:03,760 --> 00:48:09,280
since h is the decider of atm

1131
00:48:07,200 --> 00:48:11,440
so our conclusion

1132
00:48:09,280 --> 00:48:13,359
is that oh sorry

1133
00:48:11,440 --> 00:48:17,359
our conclusion is that

1134
00:48:13,359 --> 00:48:20,720
atm is undecidable because the decider

1135
00:48:17,359 --> 00:48:23,599
of atm cannot exist

1136
00:48:20,720 --> 00:48:26,079
as long as

1137
00:48:23,599 --> 00:48:27,920
the decider of adm exists we can

1138
00:48:26,079 --> 00:48:31,520
construct d

1139
00:48:27,920 --> 00:48:31,520
to show to indicate

1140
00:48:33,280 --> 00:48:37,440
the contradiction

1141
00:48:35,839 --> 00:48:40,319
okay

1142
00:48:37,440 --> 00:48:40,319
so we know that

1143
00:48:40,800 --> 00:48:44,800
atn

1144
00:48:43,040 --> 00:48:47,680
is undecidable

1145
00:48:44,800 --> 00:48:50,319
and we also know that atn is too

1146
00:48:47,680 --> 00:48:51,520
recognizable

1147
00:48:50,319 --> 00:48:55,280
so

1148
00:48:51,520 --> 00:48:57,359
we complete the proof that finding a

1149
00:48:55,280 --> 00:49:00,800
language here

1150
00:48:57,359 --> 00:49:04,240
which is outside of decidable

1151
00:49:00,800 --> 00:49:06,480
but inside of recognizable

1152
00:49:04,240 --> 00:49:07,839
so we have

1153
00:49:06,480 --> 00:49:11,280
existence

1154
00:49:07,839 --> 00:49:11,280
in our instance here

1155
00:49:11,440 --> 00:49:16,559
so

1156
00:49:13,200 --> 00:49:19,040
basically we complete the

1157
00:49:16,559 --> 00:49:22,640
diagram in figure

1158
00:49:19,040 --> 00:49:24,480
410 the relationship among classes of

1159
00:49:22,640 --> 00:49:28,079
languages

1160
00:49:24,480 --> 00:49:30,400
and we exactly know the relationship

1161
00:49:28,079 --> 00:49:34,160
among classes of languages

1162
00:49:30,400 --> 00:49:37,200
is like what we have here

1163
00:49:34,160 --> 00:49:39,440
as in figure 14

1164
00:49:37,200 --> 00:49:39,440
okay

1165
00:49:40,480 --> 00:49:46,480
so regular languages is a proper subset

1166
00:49:44,240 --> 00:49:48,240
of context free languages and there are

1167
00:49:46,480 --> 00:49:50,720
languages here

1168
00:49:48,240 --> 00:49:53,920
and countif language is a proper subset

1169
00:49:50,720 --> 00:49:55,839
of decidable and they are languages here

1170
00:49:53,920 --> 00:49:58,319
and decidable

1171
00:49:55,839 --> 00:49:59,359
is a proper subset of recognizable

1172
00:49:58,319 --> 00:50:02,079
because

1173
00:49:59,359 --> 00:50:05,079
there is language here

1174
00:50:02,079 --> 00:50:05,079
okay

