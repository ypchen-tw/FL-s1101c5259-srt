1
00:00:00,480 --> 00:00:04,880
okay next we are talk we will be talking

2
00:00:02,720 --> 00:00:07,120
about hamiltonian path problem we want

3
00:00:04,880 --> 00:00:09,040
to prove that hamiltonian path problem

4
00:00:07,120 --> 00:00:10,650
is mp complete

5
00:00:09,040 --> 00:00:12,400
so for the same

6
00:00:10,650 --> 00:00:14,240
[Music]

7
00:00:12,400 --> 00:00:15,040
style actually

8
00:00:14,240 --> 00:00:18,160
we

9
00:00:15,040 --> 00:00:21,439
want to reduce here okay we want to

10
00:00:18,160 --> 00:00:23,199
reduce three set two hamiltonian path

11
00:00:21,439 --> 00:00:25,760
problem okay

12
00:00:23,199 --> 00:00:26,800
and in order to prove that firstly we

13
00:00:25,760 --> 00:00:29,199
want to

14
00:00:26,800 --> 00:00:30,800
we want to say that hamiltonian path

15
00:00:29,199 --> 00:00:33,920
problem is

16
00:00:30,800 --> 00:00:36,079
itself is in np okay and i don't want to

17
00:00:33,920 --> 00:00:38,160
repeat that because we already talked

18
00:00:36,079 --> 00:00:39,280
about this

19
00:00:38,160 --> 00:00:40,399
uh

20
00:00:39,280 --> 00:00:42,800
for

21
00:00:40,399 --> 00:00:46,239
you know previously we have hamiltonian

22
00:00:42,800 --> 00:00:50,079
first problem as the example by np

23
00:00:46,239 --> 00:00:52,640
uh problems in mp so continuous problem

24
00:00:50,079 --> 00:00:55,520
is in mpo or you can think of

25
00:00:52,640 --> 00:00:57,600
uh polynomial time verifier is easier to

26
00:00:55,520 --> 00:00:59,680
implement so that would be

27
00:00:57,600 --> 00:01:02,079
that won't be a problem

28
00:00:59,680 --> 00:01:03,840
then given

29
00:01:02,079 --> 00:01:06,479
a three-set

30
00:01:03,840 --> 00:01:08,080
instance which is a boolean formula in

31
00:01:06,479 --> 00:01:11,600
3cmf

32
00:01:08,080 --> 00:01:14,240
we want to convert it the formula to a

33
00:01:11,600 --> 00:01:17,680
graph a directed graph actually a

34
00:01:14,240 --> 00:01:19,520
directed graph and specify as a node as

35
00:01:17,680 --> 00:01:23,119
and a node t

36
00:01:19,520 --> 00:01:25,040
so that the formula is satisfiable if

37
00:01:23,119 --> 00:01:28,240
and only if

38
00:01:25,040 --> 00:01:30,400
that's directed graph with the specified

39
00:01:28,240 --> 00:01:33,360
snt

40
00:01:30,400 --> 00:01:37,040
has a com uh

41
00:01:33,360 --> 00:01:38,799
as a hamiltonian path from s to t okay

42
00:01:37,040 --> 00:01:42,240
so how do we do that

43
00:01:38,799 --> 00:01:45,280
it's also quite easy

44
00:01:42,240 --> 00:01:47,680
if we are given

45
00:01:45,280 --> 00:01:49,759
a boolean formula three in string c and

46
00:01:47,680 --> 00:01:52,000
f that'll be like this way

47
00:01:49,759 --> 00:01:52,000
and

48
00:01:52,720 --> 00:01:59,360
uh remember that i'm not sure uh

49
00:01:57,040 --> 00:01:59,360
this

50
00:01:59,920 --> 00:02:04,000
is uh

51
00:02:01,280 --> 00:02:04,000
corrected

52
00:02:07,040 --> 00:02:12,560
okay uh

53
00:02:09,200 --> 00:02:16,080
don't be confused because there is a

54
00:02:12,560 --> 00:02:18,640
there is an arrow here you see that a1

55
00:02:16,080 --> 00:02:21,680
b1 c1 a1b

56
00:02:18,640 --> 00:02:24,879
a2 b2 c2 and a

57
00:02:21,680 --> 00:02:27,920
k b k c k okay

58
00:02:24,879 --> 00:02:29,760
these abc is just bring variables or

59
00:02:27,920 --> 00:02:32,720
literals and

60
00:02:29,760 --> 00:02:34,480
don't be confused with

61
00:02:32,720 --> 00:02:38,959
cj here

62
00:02:34,480 --> 00:02:41,200
and the c1 through ck here

63
00:02:38,959 --> 00:02:45,120
this c1 and

64
00:02:41,200 --> 00:02:47,280
is not this c1 okay

65
00:02:45,120 --> 00:02:51,800
these nodes here

66
00:02:47,280 --> 00:02:51,800
mean the c here means clause

67
00:02:51,920 --> 00:02:57,120
okay not the c in the formula they are

68
00:02:55,360 --> 00:02:59,519
just you know

69
00:02:57,120 --> 00:03:00,959
name clash that's

70
00:02:59,519 --> 00:03:02,800
name conflict

71
00:03:00,959 --> 00:03:05,599
okay so that's an arrow

72
00:03:02,800 --> 00:03:10,640
so you you can just think of like

73
00:03:05,599 --> 00:03:14,080
a1 b1 d1 a2 b2 d2 ak bk dk okay

74
00:03:10,640 --> 00:03:17,599
so let's see here and here is not the c

75
00:03:14,080 --> 00:03:18,640
there they are just called means crosses

76
00:03:17,599 --> 00:03:20,480
okay

77
00:03:18,640 --> 00:03:22,159
that's the most important thing for this

78
00:03:20,480 --> 00:03:24,319
graph because

79
00:03:22,159 --> 00:03:27,040
some of you may just

80
00:03:24,319 --> 00:03:30,480
feel it's very strange that why we do c

81
00:03:27,040 --> 00:03:32,879
not a or b no because those c is not the

82
00:03:30,480 --> 00:03:34,239
c in the clause

83
00:03:32,879 --> 00:03:38,239
the c

84
00:03:34,239 --> 00:03:39,280
on the graph is close means close okay

85
00:03:38,239 --> 00:03:40,640
okay

86
00:03:39,280 --> 00:03:43,519
then

87
00:03:40,640 --> 00:03:46,959
we have a putting formula in 3cf and

88
00:03:43,519 --> 00:03:48,319
then you go through the formula once

89
00:03:46,959 --> 00:03:51,280
and you know that

90
00:03:48,319 --> 00:03:54,239
you have in this example you have k

91
00:03:51,280 --> 00:03:56,879
clauses right k clauses

92
00:03:54,239 --> 00:03:58,879
and you will know that how many

93
00:03:56,879 --> 00:03:59,760
variables you have

94
00:03:58,879 --> 00:04:06,080
because

95
00:03:59,760 --> 00:04:08,959
it may be you know x1 x2 x1 bar x2 x1

96
00:04:06,080 --> 00:04:13,680
bar x2 x3

97
00:04:08,959 --> 00:04:16,000
etc then probably you will have like

98
00:04:13,680 --> 00:04:19,280
let's say l close uh

99
00:04:16,000 --> 00:04:22,079
l variables and k clauses

100
00:04:19,280 --> 00:04:24,000
right availables k clauses

101
00:04:22,079 --> 00:04:26,720
after collecting

102
00:04:24,000 --> 00:04:29,840
these uh this information after

103
00:04:26,720 --> 00:04:29,840
collecting this information

104
00:04:30,080 --> 00:04:33,199
firstly

105
00:04:31,199 --> 00:04:35,440
we construct

106
00:04:33,199 --> 00:04:37,360
a diamond shape

107
00:04:35,440 --> 00:04:38,320
graph

108
00:04:37,360 --> 00:04:40,160
for

109
00:04:38,320 --> 00:04:41,360
each boolean

110
00:04:40,160 --> 00:04:43,840
variables

111
00:04:41,360 --> 00:04:44,560
not literal variables

112
00:04:43,840 --> 00:04:47,600
for

113
00:04:44,560 --> 00:04:48,880
that example i have like you have x1

114
00:04:47,600 --> 00:04:52,320
here

115
00:04:48,880 --> 00:04:55,199
x1 bar here x1 and x1 bar

116
00:04:52,320 --> 00:04:56,800
are the same variable okay same variable

117
00:04:55,199 --> 00:04:59,520
so you just need

118
00:04:56,800 --> 00:05:02,320
a structure for one x one

119
00:04:59,520 --> 00:05:06,560
that's it okay so the diamond

120
00:05:02,320 --> 00:05:09,360
shaped uh graph is like you have uh

121
00:05:06,560 --> 00:05:11,199
you have uh this node

122
00:05:09,360 --> 00:05:13,199
as the

123
00:05:11,199 --> 00:05:15,759
start node or begin

124
00:05:13,199 --> 00:05:17,280
node and an end node

125
00:05:15,759 --> 00:05:20,160
then

126
00:05:17,280 --> 00:05:23,600
you have directed pass this way and

127
00:05:20,160 --> 00:05:26,240
these two node and go back here

128
00:05:23,600 --> 00:05:29,039
and you have

129
00:05:26,240 --> 00:05:30,880
many nodes in between and then you have

130
00:05:29,039 --> 00:05:32,479
the directory pass go

131
00:05:30,880 --> 00:05:33,440
right and go

132
00:05:32,479 --> 00:05:36,639
left

133
00:05:33,440 --> 00:05:36,639
so finally you have

134
00:05:37,120 --> 00:05:42,960
this diamond shaped structure and how

135
00:05:40,160 --> 00:05:45,360
many nodes you need to have

136
00:05:42,960 --> 00:05:48,800
between you know the left and right

137
00:05:45,360 --> 00:05:51,520
depends on how many uh calls you have

138
00:05:48,800 --> 00:05:53,120
and will and actually depends on

139
00:05:51,520 --> 00:05:56,080
how many times

140
00:05:53,120 --> 00:05:59,280
this variable is used

141
00:05:56,080 --> 00:05:59,280
in the clause

142
00:05:59,759 --> 00:06:02,960
as uh

143
00:06:00,880 --> 00:06:04,639
you know so as long as you have enough

144
00:06:02,960 --> 00:06:06,720
notes in between then that will be okay

145
00:06:04,639 --> 00:06:09,680
and what is enough we will

146
00:06:06,720 --> 00:06:12,080
later you will know uh how many okay

147
00:06:09,680 --> 00:06:14,080
because during the construction you know

148
00:06:12,080 --> 00:06:15,759
at some upper bound of the node you

149
00:06:14,080 --> 00:06:18,319
should have that

150
00:06:15,759 --> 00:06:21,039
or not up about lower bound the node you

151
00:06:18,319 --> 00:06:22,880
should have as long as you have enough

152
00:06:21,039 --> 00:06:24,880
node then there will be no problem

153
00:06:22,880 --> 00:06:26,319
anyway a diamond shape

154
00:06:24,880 --> 00:06:28,639
okay

155
00:06:26,319 --> 00:06:28,639
and

156
00:06:29,039 --> 00:06:34,160
since we know that there are l green

157
00:06:31,600 --> 00:06:38,560
variables we have arrow diamond shapes

158
00:06:34,160 --> 00:06:38,560
right then we connect them together

159
00:06:38,880 --> 00:06:42,720
like this one

160
00:06:40,960 --> 00:06:44,560
and we specify

161
00:06:42,720 --> 00:06:47,199
s

162
00:06:44,560 --> 00:06:47,199
and t

163
00:06:47,600 --> 00:06:50,400
okay

164
00:06:48,400 --> 00:06:52,720
so that'll be

165
00:06:50,400 --> 00:06:55,840
an easy implementation implementation

166
00:06:52,720 --> 00:06:55,840
for the whole thing right

167
00:06:56,400 --> 00:07:00,160
so

168
00:06:57,759 --> 00:07:02,080
we haven't we haven't finished our

169
00:07:00,160 --> 00:07:03,440
conversion okay we haven't finished our

170
00:07:02,080 --> 00:07:06,319
conversion

171
00:07:03,440 --> 00:07:09,840
let's examine this structure first

172
00:07:06,319 --> 00:07:14,720
okay we specify s here

173
00:07:09,840 --> 00:07:17,120
and t here let me ask you a question

174
00:07:14,720 --> 00:07:18,240
is there on this graph

175
00:07:17,120 --> 00:07:19,919
alone

176
00:07:18,240 --> 00:07:21,840
is there

177
00:07:19,919 --> 00:07:24,720
a hamiltonian path

178
00:07:21,840 --> 00:07:24,720
from s2t

179
00:07:25,120 --> 00:07:28,720
yes

180
00:07:26,319 --> 00:07:31,039
there actually there are

181
00:07:28,720 --> 00:07:32,000
many hamiltonian paths

182
00:07:31,039 --> 00:07:33,680
right

183
00:07:32,000 --> 00:07:35,360
for example you can

184
00:07:33,680 --> 00:07:38,240
go this way

185
00:07:35,360 --> 00:07:39,440
and all the way here then you go this

186
00:07:38,240 --> 00:07:41,440
way

187
00:07:39,440 --> 00:07:42,160
and go this way

188
00:07:41,440 --> 00:07:45,280
and

189
00:07:42,160 --> 00:07:47,599
go here and all the way here

190
00:07:45,280 --> 00:07:51,120
right and repeat this the whole thing

191
00:07:47,599 --> 00:07:52,080
you get a hamiltonian pass to t

192
00:07:51,120 --> 00:07:56,160
right

193
00:07:52,080 --> 00:07:57,440
and how many hamiltonian pairs actually

194
00:07:56,160 --> 00:07:59,440
in fact

195
00:07:57,440 --> 00:08:00,400
you

196
00:07:59,440 --> 00:08:02,400
have

197
00:08:00,400 --> 00:08:03,680
exactly

198
00:08:02,400 --> 00:08:06,319
two

199
00:08:03,680 --> 00:08:08,800
julie l

200
00:08:06,319 --> 00:08:09,599
hamiltonian path

201
00:08:08,800 --> 00:08:13,280
right

202
00:08:09,599 --> 00:08:16,240
why because you have x1 x2

203
00:08:13,280 --> 00:08:18,080
xl diamond shape and for each diamond

204
00:08:16,240 --> 00:08:21,599
shape

205
00:08:18,080 --> 00:08:23,840
from the stars note you can select going

206
00:08:21,599 --> 00:08:25,840
left or going right

207
00:08:23,840 --> 00:08:28,479
either way

208
00:08:25,840 --> 00:08:31,440
it's a hamiltonian path right

209
00:08:28,479 --> 00:08:34,000
so you have two choice here two choices

210
00:08:31,440 --> 00:08:35,279
here and you have two choices here so

211
00:08:34,000 --> 00:08:38,560
totally

212
00:08:35,279 --> 00:08:38,560
so many hamiltonian paths

213
00:08:38,839 --> 00:08:44,720
then you know that

214
00:08:41,599 --> 00:08:46,240
okay it's exactly

215
00:08:44,720 --> 00:08:47,519
the number

216
00:08:46,240 --> 00:08:49,440
of

217
00:08:47,519 --> 00:08:53,519
truth assignments

218
00:08:49,440 --> 00:08:56,720
to the l variables right

219
00:08:53,519 --> 00:08:59,040
for each variable you can have left

220
00:08:56,720 --> 00:09:01,519
and right

221
00:08:59,040 --> 00:09:03,760
false and true

222
00:09:01,519 --> 00:09:03,760
so

223
00:09:04,720 --> 00:09:09,600
let's say

224
00:09:05,839 --> 00:09:10,880
if we consider going left as

225
00:09:09,600 --> 00:09:13,200
setting

226
00:09:10,880 --> 00:09:14,240
the boolean variable to

227
00:09:13,200 --> 00:09:16,160
true

228
00:09:14,240 --> 00:09:20,080
and going right

229
00:09:16,160 --> 00:09:21,519
setting the boolean variable to false

230
00:09:20,080 --> 00:09:23,920
then

231
00:09:21,519 --> 00:09:27,600
the structural diamond connected the

232
00:09:23,920 --> 00:09:30,880
diamond structure alone

233
00:09:27,600 --> 00:09:34,959
is capable of expressing

234
00:09:30,880 --> 00:09:37,040
all possible truth assignments for the l

235
00:09:34,959 --> 00:09:38,800
variables

236
00:09:37,040 --> 00:09:41,120
right

237
00:09:38,800 --> 00:09:43,120
understand this

238
00:09:41,120 --> 00:09:45,279
part is very

239
00:09:43,120 --> 00:09:48,240
critical for the proof

240
00:09:45,279 --> 00:09:52,080
as long as you know what i'm saying then

241
00:09:48,240 --> 00:09:52,080
you understand why we

242
00:09:52,160 --> 00:09:55,360
uh understand the next thing we are

243
00:09:54,000 --> 00:09:57,040
going to do

244
00:09:55,360 --> 00:10:00,320
okay

245
00:09:57,040 --> 00:10:01,760
okay so we have created we have created

246
00:10:00,320 --> 00:10:04,320
a structure

247
00:10:01,760 --> 00:10:07,279
and containing two to the arrow

248
00:10:04,320 --> 00:10:07,279
hamiltonian path

249
00:10:07,440 --> 00:10:12,320
but as i said we haven't finished the

250
00:10:09,760 --> 00:10:13,680
proof we still have something to do

251
00:10:12,320 --> 00:10:15,360
so

252
00:10:13,680 --> 00:10:17,600
since we have

253
00:10:15,360 --> 00:10:19,279
k clauses

254
00:10:17,600 --> 00:10:22,240
for each clause

255
00:10:19,279 --> 00:10:23,440
we give it a note

256
00:10:22,240 --> 00:10:24,800
so

257
00:10:23,440 --> 00:10:27,120
c1

258
00:10:24,800 --> 00:10:29,600
close one okay not c one here let's see

259
00:10:27,120 --> 00:10:31,600
right here close one close two close

260
00:10:29,600 --> 00:10:33,200
three to close k

261
00:10:31,600 --> 00:10:35,680
okay

262
00:10:33,200 --> 00:10:37,360
since the whole thing here is the graph

263
00:10:35,680 --> 00:10:39,200
we want to output

264
00:10:37,360 --> 00:10:42,000
and

265
00:10:39,200 --> 00:10:44,000
before connecting

266
00:10:42,000 --> 00:10:46,800
close this node

267
00:10:44,000 --> 00:10:49,519
with the main structure

268
00:10:46,800 --> 00:10:52,240
we won't have hamiltonian path right

269
00:10:49,519 --> 00:10:52,240
at this time

270
00:10:53,279 --> 00:10:55,519
and

271
00:10:56,160 --> 00:10:59,200
then

272
00:10:57,680 --> 00:11:01,519
we look at

273
00:10:59,200 --> 00:11:03,600
what

274
00:11:01,519 --> 00:11:04,560
variable or literal

275
00:11:03,600 --> 00:11:06,800
used

276
00:11:04,560 --> 00:11:09,839
in each clause

277
00:11:06,800 --> 00:11:11,120
let's give it an example for example we

278
00:11:09,839 --> 00:11:13,360
have

279
00:11:11,120 --> 00:11:15,279
x1

280
00:11:13,360 --> 00:11:16,800
x to bar

281
00:11:15,279 --> 00:11:18,079
x4

282
00:11:16,800 --> 00:11:20,480
okay

283
00:11:18,079 --> 00:11:20,480
then

284
00:11:20,720 --> 00:11:25,680
in the structure of x1

285
00:11:23,200 --> 00:11:27,760
we choose

286
00:11:25,680 --> 00:11:30,160
2

287
00:11:27,760 --> 00:11:30,160
note

288
00:11:30,640 --> 00:11:35,040
without overlapping with others okay two

289
00:11:33,040 --> 00:11:36,640
notes

290
00:11:35,040 --> 00:11:40,399
and

291
00:11:36,640 --> 00:11:42,880
assuming that going left making

292
00:11:40,399 --> 00:11:46,000
the variable true and the going right

293
00:11:42,880 --> 00:11:47,360
making the variable false

294
00:11:46,000 --> 00:11:49,040
c1

295
00:11:47,360 --> 00:11:50,079
use

296
00:11:49,040 --> 00:11:52,000
x1

297
00:11:50,079 --> 00:11:53,200
so

298
00:11:52,000 --> 00:11:55,200
we

299
00:11:53,200 --> 00:11:56,560
add a h

300
00:11:55,200 --> 00:11:58,880
from the left

301
00:11:56,560 --> 00:12:02,320
of the pair to c1

302
00:11:58,880 --> 00:12:04,560
and then going back to the right

303
00:12:02,320 --> 00:12:04,560
node

304
00:12:04,800 --> 00:12:11,120
okay

305
00:12:06,639 --> 00:12:13,440
and then c1 has x2 bar right so we also

306
00:12:11,120 --> 00:12:15,760
have

307
00:12:13,440 --> 00:12:19,279
choose 2 a pair

308
00:12:15,760 --> 00:12:23,200
then since it's x2 bar

309
00:12:19,279 --> 00:12:24,560
from right note going to c1

310
00:12:23,200 --> 00:12:27,120
and

311
00:12:24,560 --> 00:12:30,320
going to left node

312
00:12:27,120 --> 00:12:32,800
so the same thing goes to x4 we choose

313
00:12:30,320 --> 00:12:35,760
two node

314
00:12:32,800 --> 00:12:35,760
and since it's uh

315
00:12:36,480 --> 00:12:44,480
x2 sorry x4 so from

316
00:12:40,000 --> 00:12:46,480
lab to c1 and then goes back to c2

317
00:12:44,480 --> 00:12:48,720
so that will be

318
00:12:46,480 --> 00:12:48,720
uh

319
00:12:48,959 --> 00:12:54,000
the way we connect closest note with the

320
00:12:51,760 --> 00:12:56,720
main structure like

321
00:12:54,000 --> 00:12:57,760
we have in the textbook

322
00:12:56,720 --> 00:13:02,320
so if

323
00:12:57,760 --> 00:13:04,880
cj contains xj we choose

324
00:13:02,320 --> 00:13:08,160
non-overlapping

325
00:13:04,880 --> 00:13:09,680
pair of nodes and from left

326
00:13:08,160 --> 00:13:12,560
to right

327
00:13:09,680 --> 00:13:14,800
if cj contains xj bar

328
00:13:12,560 --> 00:13:17,760
the same thing then

329
00:13:14,800 --> 00:13:19,680
go here and here

330
00:13:17,760 --> 00:13:21,839
okay

331
00:13:19,680 --> 00:13:21,839
so

332
00:13:22,160 --> 00:13:26,639
according to

333
00:13:24,639 --> 00:13:29,120
one variables

334
00:13:26,639 --> 00:13:30,320
either you know itself or negation of

335
00:13:29,120 --> 00:13:31,760
itself

336
00:13:30,320 --> 00:13:34,160
uh be used

337
00:13:31,760 --> 00:13:36,480
in the clauses

338
00:13:34,160 --> 00:13:38,720
you need you will need to have

339
00:13:36,480 --> 00:13:41,199
you know something like this

340
00:13:38,720 --> 00:13:41,199
and then

341
00:13:44,480 --> 00:13:49,440
you know you need

342
00:13:46,320 --> 00:13:50,639
probably need a node to separate each

343
00:13:49,440 --> 00:13:53,440
pair

344
00:13:50,639 --> 00:13:54,720
note separate each pair nodes separate

345
00:13:53,440 --> 00:13:57,360
each pair

346
00:13:54,720 --> 00:13:58,639
and finally here something like this

347
00:13:57,360 --> 00:14:00,000
and

348
00:13:58,639 --> 00:14:00,800
go

349
00:14:00,000 --> 00:14:03,519
back

350
00:14:00,800 --> 00:14:05,040
go there go back or go there go back

351
00:14:03,519 --> 00:14:06,079
something like this

352
00:14:05,040 --> 00:14:07,839
so

353
00:14:06,079 --> 00:14:10,639
if a variable

354
00:14:07,839 --> 00:14:13,360
be used like three times

355
00:14:10,639 --> 00:14:13,360
you will need

356
00:14:15,040 --> 00:14:22,880
three three plus one this one

357
00:14:18,480 --> 00:14:27,360
so many notes to separate the usage and

358
00:14:22,880 --> 00:14:28,639
to avoid confusing then it will be okay

359
00:14:27,360 --> 00:14:31,639
okay

360
00:14:28,639 --> 00:14:31,639
then

361
00:14:32,000 --> 00:14:37,360
how can we be sure that

362
00:14:34,480 --> 00:14:41,519
after doing the connection according to

363
00:14:37,360 --> 00:14:42,639
the usage of the boolean formula

364
00:14:41,519 --> 00:14:44,399
of the

365
00:14:42,639 --> 00:14:45,199
variables or literals

366
00:14:44,399 --> 00:14:48,160
then

367
00:14:45,199 --> 00:14:50,560
it will fulfill our you know conversion

368
00:14:48,160 --> 00:14:52,800
maybe with disability relationship

369
00:14:50,560 --> 00:14:57,399
so it's like

370
00:14:52,800 --> 00:14:57,399
again let's go back to

371
00:14:58,000 --> 00:15:02,959
it's doing this

372
00:15:00,720 --> 00:15:02,959
and

373
00:15:03,360 --> 00:15:07,120
okay something like this

374
00:15:05,600 --> 00:15:08,240
see

375
00:15:07,120 --> 00:15:10,160
let's say

376
00:15:08,240 --> 00:15:13,760
after converting

377
00:15:10,160 --> 00:15:15,519
a three cnf formula into the directive

378
00:15:13,760 --> 00:15:16,720
graph like this

379
00:15:15,519 --> 00:15:18,880
firstly

380
00:15:16,720 --> 00:15:22,079
firstly

381
00:15:18,880 --> 00:15:22,079
we want to say that

382
00:15:23,600 --> 00:15:28,079
this formula oh

383
00:15:25,519 --> 00:15:31,360
three sets

384
00:15:28,079 --> 00:15:34,959
this formula belongs to three sets

385
00:15:31,360 --> 00:15:37,199
if and only if

386
00:15:34,959 --> 00:15:39,440
the graph we have here

387
00:15:37,199 --> 00:15:42,639
belongs to

388
00:15:39,440 --> 00:15:42,639
hamiltonian pass

389
00:15:44,959 --> 00:15:47,279
okay

390
00:15:49,680 --> 00:15:53,440
let's go this direction first

391
00:15:52,720 --> 00:15:55,440
so

392
00:15:53,440 --> 00:15:58,160
if the formula

393
00:15:55,440 --> 00:16:00,399
is satisfiable that means

394
00:15:58,160 --> 00:16:03,120
that means

395
00:16:00,399 --> 00:16:03,120
there is

396
00:16:03,360 --> 00:16:09,279
a truth assignment

397
00:16:05,680 --> 00:16:10,880
there is a truth assignment

398
00:16:09,279 --> 00:16:12,079
satisfy the formula

399
00:16:10,880 --> 00:16:13,519
right

400
00:16:12,079 --> 00:16:16,639
then

401
00:16:13,519 --> 00:16:18,399
firstly we start from on the graph we

402
00:16:16,639 --> 00:16:21,519
start from s

403
00:16:18,399 --> 00:16:23,199
according to the truth assignment for

404
00:16:21,519 --> 00:16:26,240
each variable

405
00:16:23,199 --> 00:16:28,399
firstly we ignore

406
00:16:26,240 --> 00:16:30,880
the connection between the main

407
00:16:28,399 --> 00:16:34,079
structure and the clause structure

408
00:16:30,880 --> 00:16:36,560
and you just go through all the node on

409
00:16:34,079 --> 00:16:38,000
the main structure according to

410
00:16:36,560 --> 00:16:40,000
that

411
00:16:38,000 --> 00:16:43,040
according to that

412
00:16:40,000 --> 00:16:44,399
truth assignment that's no problem right

413
00:16:43,040 --> 00:16:46,079
then

414
00:16:44,399 --> 00:16:49,759
we check

415
00:16:46,079 --> 00:16:52,560
for example if c1

416
00:16:49,759 --> 00:16:55,519
in the original formula

417
00:16:52,560 --> 00:17:00,320
is satisfied by

418
00:16:55,519 --> 00:17:00,320
as our example okay by x2 bar

419
00:17:00,639 --> 00:17:05,360
by x2 bar

420
00:17:02,839 --> 00:17:07,839
then x2 bar

421
00:17:05,360 --> 00:17:10,079
must be false right

422
00:17:07,839 --> 00:17:10,079
so

423
00:17:12,079 --> 00:17:18,160
on the diamond structure i on the

424
00:17:14,160 --> 00:17:20,079
diamond shape x2 bar is false that means

425
00:17:18,160 --> 00:17:21,199
you will have a flow

426
00:17:20,079 --> 00:17:24,400
go

427
00:17:21,199 --> 00:17:25,600
right at first and go through this way

428
00:17:24,400 --> 00:17:30,080
right

429
00:17:25,600 --> 00:17:31,520
then x2 c1 is satisfied by the true of

430
00:17:30,080 --> 00:17:34,960
x2 bar

431
00:17:31,520 --> 00:17:36,880
that means you will have a path from the

432
00:17:34,960 --> 00:17:40,080
pair of the rhino

433
00:17:36,880 --> 00:17:42,559
go to c1

434
00:17:40,080 --> 00:17:46,080
so c1 is reached

435
00:17:42,559 --> 00:17:49,679
and then go back to the right note

436
00:17:46,080 --> 00:17:52,000
that's a left node and then go on

437
00:17:49,679 --> 00:17:53,760
with the past

438
00:17:52,000 --> 00:17:58,000
right

439
00:17:53,760 --> 00:17:58,000
so since each clause

440
00:17:58,880 --> 00:18:08,000
is satisfied by at least one literal

441
00:18:04,880 --> 00:18:10,640
then you just need

442
00:18:08,000 --> 00:18:12,080
to deviate the path from the main

443
00:18:10,640 --> 00:18:14,160
structure

444
00:18:12,080 --> 00:18:15,760
to the close and the back to the main

445
00:18:14,160 --> 00:18:16,559
structure

446
00:18:15,760 --> 00:18:18,640
so

447
00:18:16,559 --> 00:18:20,480
if the formula

448
00:18:18,640 --> 00:18:22,960
is satisfiable

449
00:18:20,480 --> 00:18:24,480
the truth assignment satisfies that

450
00:18:22,960 --> 00:18:26,080
formula

451
00:18:24,480 --> 00:18:29,120
can be translated

452
00:18:26,080 --> 00:18:32,559
directly here into

453
00:18:29,120 --> 00:18:36,000
a hamiltonian phase on our whole graph

454
00:18:32,559 --> 00:18:38,720
from s to t that's no problem

455
00:18:36,000 --> 00:18:41,760
well usually uh someone

456
00:18:38,720 --> 00:18:43,919
can get confused with that they say that

457
00:18:41,760 --> 00:18:47,120
okay um for example

458
00:18:43,919 --> 00:18:50,000
when you go here and back here how can

459
00:18:47,120 --> 00:18:51,200
you go again

460
00:18:50,000 --> 00:18:54,320
to see what

461
00:18:51,200 --> 00:18:54,320
well you don't need to

462
00:18:54,840 --> 00:19:02,000
okay there is no uh requirement that

463
00:19:00,559 --> 00:19:04,720
whenever you

464
00:19:02,000 --> 00:19:07,520
have a pass to go to the closed

465
00:19:04,720 --> 00:19:10,160
structure you you need to go no there is

466
00:19:07,520 --> 00:19:13,039
no such requirement we just need to take

467
00:19:10,160 --> 00:19:14,880
the deviation once

468
00:19:13,039 --> 00:19:16,720
for each cause

469
00:19:14,880 --> 00:19:19,039
so there's no problem

470
00:19:16,720 --> 00:19:20,559
another confusion is that

471
00:19:19,039 --> 00:19:24,080
if

472
00:19:20,559 --> 00:19:27,520
if for example if c1

473
00:19:24,080 --> 00:19:30,799
that's our example is like c c 1 is x 1

474
00:19:27,520 --> 00:19:34,080
x 2 x 4 right that's our example

475
00:19:30,799 --> 00:19:36,559
if x y is true x 2 bar

476
00:19:34,080 --> 00:19:36,559
is true

477
00:19:37,039 --> 00:19:41,200
and what happened

478
00:19:38,480 --> 00:19:43,840
well nothing happened you just need to

479
00:19:41,200 --> 00:19:45,440
choose one of them you don't need to go

480
00:19:43,840 --> 00:19:48,640
both

481
00:19:45,440 --> 00:19:52,160
right the confusion raised

482
00:19:48,640 --> 00:19:54,960
because you think you have to go c to 1

483
00:19:52,160 --> 00:19:57,840
twice no you don't need to do that

484
00:19:54,960 --> 00:19:59,760
if there are more than one literal to be

485
00:19:57,840 --> 00:20:02,799
true in a close

486
00:19:59,760 --> 00:20:06,159
you just need to choose one

487
00:20:02,799 --> 00:20:07,840
right you just need to choose one

488
00:20:06,159 --> 00:20:09,760
then

489
00:20:07,840 --> 00:20:11,280
so uh again

490
00:20:09,760 --> 00:20:12,640
we have uh

491
00:20:11,280 --> 00:20:16,480
explained that

492
00:20:12,640 --> 00:20:18,559
then if we don't consider closed nodes

493
00:20:16,480 --> 00:20:20,720
the main structure alone you have to

494
00:20:18,559 --> 00:20:24,400
truly error paths right

495
00:20:20,720 --> 00:20:27,200
after finish the whole graph how many

496
00:20:24,400 --> 00:20:29,919
hamiltonian paths you have actually

497
00:20:27,200 --> 00:20:31,600
that's very interesting because for

498
00:20:29,919 --> 00:20:33,440
mapping with disability we don't care

499
00:20:31,600 --> 00:20:37,200
about how many

500
00:20:33,440 --> 00:20:37,200
just you know at least the one

501
00:20:37,360 --> 00:20:42,080
but if you really want to know how many

502
00:20:39,360 --> 00:20:43,919
of them it depends on

503
00:20:42,080 --> 00:20:45,039
the formula

504
00:20:43,919 --> 00:20:46,400
if

505
00:20:45,039 --> 00:20:49,840
exactly

506
00:20:46,400 --> 00:20:52,400
one liter role of each clause to be true

507
00:20:49,840 --> 00:20:55,280
then you will have exactly

508
00:20:52,400 --> 00:20:56,559
one hamiltonian path

509
00:20:55,280 --> 00:20:58,240
right because

510
00:20:56,559 --> 00:21:01,520
you can only

511
00:20:58,240 --> 00:21:03,840
go through the clause notes

512
00:21:01,520 --> 00:21:06,640
when you reach the

513
00:21:03,840 --> 00:21:08,320
literal to be true for that clause

514
00:21:06,640 --> 00:21:10,559
so exactly one

515
00:21:08,320 --> 00:21:12,000
for example if you have like

516
00:21:10,559 --> 00:21:13,840
two

517
00:21:12,000 --> 00:21:14,640
and two here

518
00:21:13,840 --> 00:21:17,440
then

519
00:21:14,640 --> 00:21:18,480
you will have four hemingtonian path

520
00:21:17,440 --> 00:21:20,880
okay

521
00:21:18,480 --> 00:21:21,919
so think about it and you will know the

522
00:21:20,880 --> 00:21:25,039
whole thing

523
00:21:21,919 --> 00:21:28,000
uh whole concept of the proof here

524
00:21:25,039 --> 00:21:29,280
okay now we know that uh

525
00:21:28,000 --> 00:21:30,960
if

526
00:21:29,280 --> 00:21:32,559
there is a truth assignment for the

527
00:21:30,960 --> 00:21:34,720
formula

528
00:21:32,559 --> 00:21:36,320
to be true then that truth assignment

529
00:21:34,720 --> 00:21:39,679
can be translated

530
00:21:36,320 --> 00:21:41,919
to the graph we generated

531
00:21:39,679 --> 00:21:43,600
uh to a hamiltonian

532
00:21:41,919 --> 00:21:45,840
path

533
00:21:43,600 --> 00:21:48,640
of the graph we translated

534
00:21:45,840 --> 00:21:50,159
uh generated right and

535
00:21:48,640 --> 00:21:52,000
let's say

536
00:21:50,159 --> 00:21:53,760
this direction

537
00:21:52,000 --> 00:21:56,080
somehow we know that

538
00:21:53,760 --> 00:21:58,880
if somehow we know that okay the graph

539
00:21:56,080 --> 00:22:00,720
we generated really has a hamiltonian

540
00:21:58,880 --> 00:22:03,360
path

541
00:22:00,720 --> 00:22:06,559
how can we be sure that

542
00:22:03,360 --> 00:22:08,640
the original formula is satisfiable

543
00:22:06,559 --> 00:22:09,679
well the same reason

544
00:22:08,640 --> 00:22:13,679
since

545
00:22:09,679 --> 00:22:17,039
someone draws a hamiltonian for you

546
00:22:13,679 --> 00:22:17,840
hamiltonian path on the graph for you

547
00:22:17,039 --> 00:22:20,799
and

548
00:22:17,840 --> 00:22:23,200
not only main structure okay and every

549
00:22:20,799 --> 00:22:24,720
closed node has been reached have been

550
00:22:23,200 --> 00:22:27,840
reached

551
00:22:24,720 --> 00:22:29,520
then you just need to translate

552
00:22:27,840 --> 00:22:32,960
uh the path

553
00:22:29,520 --> 00:22:34,080
if it goes left then x1 is false

554
00:22:32,960 --> 00:22:37,679
right

555
00:22:34,080 --> 00:22:42,799
sorry right if it goes left uh left here

556
00:22:37,679 --> 00:22:44,720
x2 is true if right false etc and

557
00:22:42,799 --> 00:22:46,400
finally for example

558
00:22:44,720 --> 00:22:48,720
right then false

559
00:22:46,400 --> 00:22:48,720
and

560
00:22:49,760 --> 00:22:53,120
this truth assignment

561
00:22:53,600 --> 00:23:00,640
can make the original formula true why

562
00:22:57,520 --> 00:23:03,120
because according to the assignment

563
00:23:00,640 --> 00:23:04,400
all clauses

564
00:23:03,120 --> 00:23:06,080
are reached

565
00:23:04,400 --> 00:23:10,240
they are satisfied

566
00:23:06,080 --> 00:23:12,960
so the original formula is true

567
00:23:10,240 --> 00:23:15,440
so the convert uh

568
00:23:12,960 --> 00:23:18,400
the process uh the procedure to convert

569
00:23:15,440 --> 00:23:20,080
a from a cmf formula three cnn formula

570
00:23:18,400 --> 00:23:21,679
to this graph

571
00:23:20,080 --> 00:23:25,679
satisfies

572
00:23:21,679 --> 00:23:28,320
me reducibility and the whole conversion

573
00:23:25,679 --> 00:23:30,799
time is within the polynomial of the

574
00:23:28,320 --> 00:23:34,080
length why because

575
00:23:30,799 --> 00:23:37,520
l variable must be less than you know

576
00:23:34,080 --> 00:23:40,799
the dense right and

577
00:23:37,520 --> 00:23:43,840
k closes everything is

578
00:23:40,799 --> 00:23:45,919
well bounded by the polynomial bound of

579
00:23:43,840 --> 00:23:47,440
the length of the input string

580
00:23:45,919 --> 00:23:49,600
so there's no problem for this

581
00:23:47,440 --> 00:23:50,559
conversion to be in within polynomial

582
00:23:49,600 --> 00:23:52,720
time

583
00:23:50,559 --> 00:23:54,400
so we have a polynomial time reduction

584
00:23:52,720 --> 00:23:57,120
from three set

585
00:23:54,400 --> 00:23:58,960
to hamiltonian path and hypotenuse

586
00:23:57,120 --> 00:24:00,799
itself is in mp

587
00:23:58,960 --> 00:24:02,960
then

588
00:24:00,799 --> 00:24:05,200
we proved

589
00:24:02,960 --> 00:24:07,360
and methane path to be

590
00:24:05,200 --> 00:24:09,520
empty complete

591
00:24:07,360 --> 00:24:10,960
all right

592
00:24:09,520 --> 00:24:13,279
now

593
00:24:10,960 --> 00:24:15,840
see we use threeset to prove other

594
00:24:13,279 --> 00:24:19,120
problem to bmp complete

595
00:24:15,840 --> 00:24:21,600
and we want to show

596
00:24:19,120 --> 00:24:24,400
we don't need to use three set okay we

597
00:24:21,600 --> 00:24:25,760
can use hamiltonian pass

598
00:24:24,400 --> 00:24:29,840
to prove

599
00:24:25,760 --> 00:24:29,840
undirected hamiltonian path

600
00:24:30,799 --> 00:24:33,520
to be mp complete

601
00:24:32,720 --> 00:24:36,159
okay

602
00:24:33,520 --> 00:24:37,440
so what is um directly on the campus

603
00:24:36,159 --> 00:24:38,720
that means

604
00:24:37,440 --> 00:24:40,960
uh

605
00:24:38,720 --> 00:24:43,760
you have a graph undirected graph and

606
00:24:40,960 --> 00:24:46,240
specify snt

607
00:24:43,760 --> 00:24:49,440
and is there a hamiltonian

608
00:24:46,240 --> 00:24:54,000
is there a path from s to g

609
00:24:49,440 --> 00:24:56,640
and also all nodes in that graph

610
00:24:54,000 --> 00:24:59,919
is reached exactly once

611
00:24:56,640 --> 00:25:02,000
okay that's on directly hamiltonian path

612
00:24:59,919 --> 00:25:04,880
so on the right hand maintenance itself

613
00:25:02,000 --> 00:25:07,039
is n is the mp why because you can write

614
00:25:04,880 --> 00:25:08,640
a polynomial verifier

615
00:25:07,039 --> 00:25:10,480
and

616
00:25:08,640 --> 00:25:14,000
someone give you the path you just need

617
00:25:10,480 --> 00:25:16,880
to check if it's all on the graph if yes

618
00:25:14,000 --> 00:25:19,840
and then to check if all the nodes on

619
00:25:16,880 --> 00:25:20,640
the graph is reached exactly once if yes

620
00:25:19,840 --> 00:25:21,679
then

621
00:25:20,640 --> 00:25:22,880
you know

622
00:25:21,679 --> 00:25:24,400
accept it

623
00:25:22,880 --> 00:25:25,760
so that's pretty straightforward

624
00:25:24,400 --> 00:25:27,520
verifier

625
00:25:25,760 --> 00:25:30,960
so it's england p

626
00:25:27,520 --> 00:25:33,120
so that's reduced hamiltonian path to

627
00:25:30,960 --> 00:25:35,120
underwriting hematanian path

628
00:25:33,120 --> 00:25:37,200
and how to reduce

629
00:25:35,120 --> 00:25:38,559
a hymenom pest

630
00:25:37,200 --> 00:25:40,640
to un

631
00:25:38,559 --> 00:25:42,960
direct metallic patch

632
00:25:40,640 --> 00:25:44,960
what is hamiltonian path again

633
00:25:42,960 --> 00:25:48,480
so you will have a direct

634
00:25:44,960 --> 00:25:49,840
directed graph g directly right and

635
00:25:48,480 --> 00:25:53,279
specified

636
00:25:49,840 --> 00:25:54,799
a node s and then the node t

637
00:25:53,279 --> 00:25:59,360
this

638
00:25:54,799 --> 00:26:00,640
is an instance of hamiltonian path

639
00:25:59,360 --> 00:26:04,240
okay

640
00:26:00,640 --> 00:26:06,159
and let let me uh emphasize it again

641
00:26:04,240 --> 00:26:09,440
when we get the problem instance like

642
00:26:06,159 --> 00:26:11,520
this we don't know the answer what means

643
00:26:09,440 --> 00:26:13,919
by we don't know the answer we don't

644
00:26:11,520 --> 00:26:16,400
know if there is

645
00:26:13,919 --> 00:26:19,039
really a hamiltonian path from s2t on

646
00:26:16,400 --> 00:26:20,559
the graph okay we don't know the answer

647
00:26:19,039 --> 00:26:21,760
remember that

648
00:26:20,559 --> 00:26:24,000
don't

649
00:26:21,760 --> 00:26:27,520
think about that we know the answer no

650
00:26:24,000 --> 00:26:30,240
we don't know so the whole process for

651
00:26:27,520 --> 00:26:32,400
conversion we convert the problem

652
00:26:30,240 --> 00:26:33,360
instance to another

653
00:26:32,400 --> 00:26:36,640
to

654
00:26:33,360 --> 00:26:39,279
a problem instance of another problem

655
00:26:36,640 --> 00:26:42,159
the conversion itself

656
00:26:39,279 --> 00:26:46,240
doesn't know the answer

657
00:26:42,159 --> 00:26:48,320
knowing the answer is not a requirement

658
00:26:46,240 --> 00:26:50,400
for the conversion

659
00:26:48,320 --> 00:26:53,840
again that like

660
00:26:50,400 --> 00:26:56,240
like the process we introduced here

661
00:26:53,840 --> 00:26:58,320
or here

662
00:26:56,240 --> 00:27:01,200
we don't need to know the answer to do

663
00:26:58,320 --> 00:27:03,679
the conversion okay remember that we

664
00:27:01,200 --> 00:27:06,640
don't need to know the answer

665
00:27:03,679 --> 00:27:09,120
we can just do the conversion that's why

666
00:27:06,640 --> 00:27:10,400
we need to prove that

667
00:27:09,120 --> 00:27:13,360
if

668
00:27:10,400 --> 00:27:15,440
the original problem is yes

669
00:27:13,360 --> 00:27:17,279
then the converted problem is yes and

670
00:27:15,440 --> 00:27:20,799
vice versa that's why we need to prove

671
00:27:17,279 --> 00:27:23,520
it but for probably instance we don't

672
00:27:20,799 --> 00:27:24,960
know the answer okay that's very

673
00:27:23,520 --> 00:27:26,000
important

674
00:27:24,960 --> 00:27:27,200
okay

675
00:27:26,000 --> 00:27:28,159
so

676
00:27:27,200 --> 00:27:30,880
for

677
00:27:28,159 --> 00:27:33,840
for a hamilton uh hemingtonian problem

678
00:27:30,880 --> 00:27:34,960
instance we have g

679
00:27:33,840 --> 00:27:36,960
nc

680
00:27:34,960 --> 00:27:39,039
right

681
00:27:36,960 --> 00:27:40,399
since we have g

682
00:27:39,039 --> 00:27:43,039
and we know

683
00:27:40,399 --> 00:27:46,000
that we know actually they are specified

684
00:27:43,039 --> 00:27:46,840
in the problem snt

685
00:27:46,000 --> 00:27:50,320
we

686
00:27:46,840 --> 00:27:50,320
expand g

687
00:27:51,120 --> 00:28:00,159
for each node in g for each node in g

688
00:27:56,640 --> 00:28:01,840
except except for s and t okay

689
00:28:00,159 --> 00:28:04,799
we make

690
00:28:01,840 --> 00:28:06,880
note for example u1

691
00:28:04,799 --> 00:28:10,399
in g

692
00:28:06,880 --> 00:28:10,399
sorry we should actually

693
00:28:10,640 --> 00:28:14,240
if we uh

694
00:28:12,080 --> 00:28:17,039
if there is a u1 in g

695
00:28:14,240 --> 00:28:19,600
we make it three notes

696
00:28:17,039 --> 00:28:19,600
u1

697
00:28:20,159 --> 00:28:23,120
let me

698
00:28:21,200 --> 00:28:25,200
write it this way

699
00:28:23,120 --> 00:28:27,279
u1 in

700
00:28:25,200 --> 00:28:29,279
middle

701
00:28:27,279 --> 00:28:33,919
out

702
00:28:29,279 --> 00:28:35,360
so for each node in g other than s and t

703
00:28:33,919 --> 00:28:37,039
we make them

704
00:28:35,360 --> 00:28:38,240
three nodes

705
00:28:37,039 --> 00:28:41,120
all right

706
00:28:38,240 --> 00:28:42,399
so if you have a node u2

707
00:28:41,120 --> 00:28:44,640
we make it

708
00:28:42,399 --> 00:28:45,840
u2 in

709
00:28:44,640 --> 00:28:48,960
u2

710
00:28:45,840 --> 00:28:52,399
like middle and the u2

711
00:28:48,960 --> 00:28:56,159
out so in middle out

712
00:28:52,399 --> 00:28:58,880
so if you have a u3 another node we make

713
00:28:56,159 --> 00:29:04,320
it u3 in

714
00:28:58,880 --> 00:29:08,240
u3 middle and u3 out three

715
00:29:04,320 --> 00:29:10,840
and we have h remember undirected so

716
00:29:08,240 --> 00:29:14,320
underrated h here

717
00:29:10,840 --> 00:29:15,840
here here

718
00:29:14,320 --> 00:29:16,960
and as

719
00:29:15,840 --> 00:29:20,000
we have

720
00:29:16,960 --> 00:29:25,440
one node s out

721
00:29:20,000 --> 00:29:26,880
and t we have one node t in

722
00:29:25,440 --> 00:29:28,480
okay

723
00:29:26,880 --> 00:29:29,760
so for notes

724
00:29:28,480 --> 00:29:32,399
for

725
00:29:29,760 --> 00:29:35,600
the original g

726
00:29:32,399 --> 00:29:39,039
we converted it to underrated graph and

727
00:29:35,600 --> 00:29:42,960
the forward vertex we basically copy s

728
00:29:39,039 --> 00:29:44,320
as s out t as t in and for other all

729
00:29:42,960 --> 00:29:47,679
other nodes we

730
00:29:44,320 --> 00:29:51,200
have three nodes for each node

731
00:29:47,679 --> 00:29:52,799
like what we just introduced okay

732
00:29:51,200 --> 00:29:55,760
so that will be

733
00:29:52,799 --> 00:29:58,399
the vertex of our

734
00:29:55,760 --> 00:29:59,679
underrated graph

735
00:29:58,399 --> 00:30:01,919
and for h

736
00:29:59,679 --> 00:30:02,640
then we just copy

737
00:30:01,919 --> 00:30:04,720
uh

738
00:30:02,640 --> 00:30:06,960
well not all but

739
00:30:04,720 --> 00:30:08,799
basically all ages

740
00:30:06,960 --> 00:30:12,080
what all ages

741
00:30:08,799 --> 00:30:13,919
since the a the h on the directed graph

742
00:30:12,080 --> 00:30:16,080
is directed right

743
00:30:13,919 --> 00:30:17,840
so for example you have

744
00:30:16,080 --> 00:30:19,520
u1 to u

745
00:30:17,840 --> 00:30:20,960
q

746
00:30:19,520 --> 00:30:23,440
so we

747
00:30:20,960 --> 00:30:24,720
connect u1 out

748
00:30:23,440 --> 00:30:27,120
to

749
00:30:24,720 --> 00:30:27,919
u2e

750
00:30:27,120 --> 00:30:30,159
okay

751
00:30:27,919 --> 00:30:34,559
so for every ui

752
00:30:30,159 --> 00:30:37,279
to uj we connect ui out

753
00:30:34,559 --> 00:30:41,039
to

754
00:30:37,279 --> 00:30:42,880
u j in on our underage graph

755
00:30:41,039 --> 00:30:44,240
so if you have a

756
00:30:42,880 --> 00:30:48,880
u3

757
00:30:44,240 --> 00:30:52,159
to u2 so you can make u3 out to u2 in

758
00:30:48,880 --> 00:30:55,360
if you also have a u2 to u3 so you can

759
00:30:52,159 --> 00:30:58,799
we connect u2 out to u3 in

760
00:30:55,360 --> 00:31:01,840
that's it so we basically command

761
00:30:58,799 --> 00:31:02,720
the directed

762
00:31:01,840 --> 00:31:05,840
h

763
00:31:02,720 --> 00:31:05,840
on the original graph

764
00:31:06,399 --> 00:31:10,000
on our undirected graph we

765
00:31:09,039 --> 00:31:13,200
do

766
00:31:10,000 --> 00:31:16,159
from out node of that node to the in

767
00:31:13,200 --> 00:31:17,600
node of the target node

768
00:31:16,159 --> 00:31:21,519
and then

769
00:31:17,600 --> 00:31:26,799
we only copy uh edges from s

770
00:31:21,519 --> 00:31:26,799
auto r from s to other nodes not

771
00:31:27,200 --> 00:31:33,600
edges from other nodes to s we don't

772
00:31:30,159 --> 00:31:36,080
connect those agents why because there

773
00:31:33,600 --> 00:31:38,960
is no point to do that since we are

774
00:31:36,080 --> 00:31:42,640
asking if there is a hamiltonian path

775
00:31:38,960 --> 00:31:45,120
from s to t there is you know

776
00:31:42,640 --> 00:31:48,080
it doesn't make sense to consider

777
00:31:45,120 --> 00:31:50,799
into s right so for the same reason

778
00:31:48,080 --> 00:31:53,840
there is no need to consider

779
00:31:50,799 --> 00:31:56,159
out of t so that's why we have only s

780
00:31:53,840 --> 00:31:58,480
out and the t in

781
00:31:56,159 --> 00:31:58,480
okay

782
00:31:58,840 --> 00:32:04,640
so for example we have uh s2

783
00:32:03,440 --> 00:32:07,679
u1 in

784
00:32:04,640 --> 00:32:09,360
oru maybe from the the original graph we

785
00:32:07,679 --> 00:32:10,799
also have

786
00:32:09,360 --> 00:32:15,120
s out to

787
00:32:10,799 --> 00:32:16,399
u3 in and we have u1 out in u2 out team

788
00:32:15,120 --> 00:32:19,039
something like that

789
00:32:16,399 --> 00:32:21,519
so we can produce according to the

790
00:32:19,039 --> 00:32:23,679
original directive graph we can produce

791
00:32:21,519 --> 00:32:26,799
an underrated graph this way

792
00:32:23,679 --> 00:32:28,640
and then we specify s out

793
00:32:26,799 --> 00:32:31,120
and the t in

794
00:32:28,640 --> 00:32:32,880
so that would be the pro uh problem

795
00:32:31,120 --> 00:32:35,919
instance for the

796
00:32:32,880 --> 00:32:35,919
hamiltonian path

797
00:32:36,240 --> 00:32:39,679
okay

798
00:32:38,480 --> 00:32:42,000
so

799
00:32:39,679 --> 00:32:43,279
if i give you any hamiltonian path

800
00:32:42,000 --> 00:32:44,960
probably instance

801
00:32:43,279 --> 00:32:46,799
you don't need to know the answer you

802
00:32:44,960 --> 00:32:49,760
can convert it into

803
00:32:46,799 --> 00:32:51,679
um undirected hamiltonian paths probably

804
00:32:49,760 --> 00:32:53,919
instance right

805
00:32:51,679 --> 00:32:56,080
that's what i said we don't need to the

806
00:32:53,919 --> 00:32:57,679
conversion

807
00:32:56,080 --> 00:32:59,600
we do the conversion we don't need to

808
00:32:57,679 --> 00:33:02,159
know the answer the conversion is

809
00:32:59,600 --> 00:33:06,320
independent of the answer itself

810
00:33:02,159 --> 00:33:08,080
that's why from chapter five actually

811
00:33:06,320 --> 00:33:10,640
when we talk about

812
00:33:08,080 --> 00:33:12,720
reduction when we talk about mapping

813
00:33:10,640 --> 00:33:15,679
reducibility

814
00:33:12,720 --> 00:33:17,919
we are not solving problems

815
00:33:15,679 --> 00:33:20,320
we don't know the answer to

816
00:33:17,919 --> 00:33:22,240
the problem we are given

817
00:33:20,320 --> 00:33:25,039
we just you know rubber wrong the

818
00:33:22,240 --> 00:33:26,000
problem as an other

819
00:33:25,039 --> 00:33:26,799
that's it

820
00:33:26,000 --> 00:33:27,919
that's

821
00:33:26,799 --> 00:33:30,399
reduction

822
00:33:27,919 --> 00:33:33,360
okay don't forget it okay

823
00:33:30,399 --> 00:33:35,440
okay now here comes the well difficult

824
00:33:33,360 --> 00:33:36,880
part not really difficult but difficult

825
00:33:35,440 --> 00:33:38,720
part

826
00:33:36,880 --> 00:33:40,799
why

827
00:33:38,720 --> 00:33:42,880
such a

828
00:33:40,799 --> 00:33:45,679
conversion gives you

829
00:33:42,880 --> 00:33:49,200
relationship deck this one is

830
00:33:45,679 --> 00:33:51,519
hamiltonian path this one is

831
00:33:49,200 --> 00:33:54,880
if and only if this one is an

832
00:33:51,519 --> 00:33:57,360
hamiltonian pest why

833
00:33:54,880 --> 00:33:57,360
because

834
00:33:57,600 --> 00:34:02,000
if the problem we are given if the

835
00:34:00,320 --> 00:34:04,880
hamiltonian

836
00:34:02,000 --> 00:34:10,240
path proper instance we are given really

837
00:34:04,880 --> 00:34:12,000
has a hemitandian path like this one

838
00:34:10,240 --> 00:34:13,599
so from s

839
00:34:12,000 --> 00:34:17,040
from s

840
00:34:13,599 --> 00:34:18,000
go to some node and some node and

841
00:34:17,040 --> 00:34:20,879
t

842
00:34:18,000 --> 00:34:23,280
and these are the

843
00:34:20,879 --> 00:34:26,560
all the nodes in g

844
00:34:23,280 --> 00:34:29,359
and every node is reached

845
00:34:26,560 --> 00:34:29,359
exactly once

846
00:34:30,320 --> 00:34:34,480
this path

847
00:34:32,560 --> 00:34:36,560
can be

848
00:34:34,480 --> 00:34:39,440
translated

849
00:34:36,560 --> 00:34:41,200
onto the undirected graph

850
00:34:39,440 --> 00:34:45,040
for instance

851
00:34:41,200 --> 00:34:45,040
we construct it as this one

852
00:34:45,200 --> 00:34:50,720
right remember how we produce that graph

853
00:34:48,399 --> 00:34:51,599
from s out

854
00:34:50,720 --> 00:34:55,919
since

855
00:34:51,599 --> 00:34:55,919
there is a path from s to t

856
00:34:57,200 --> 00:35:04,079
on our graph we really have a path

857
00:35:00,720 --> 00:35:07,520
to u1 in right

858
00:35:04,079 --> 00:35:07,520
and since u1

859
00:35:08,079 --> 00:35:11,200
u1

860
00:35:10,000 --> 00:35:13,599
becomes

861
00:35:11,200 --> 00:35:14,560
three

862
00:35:13,599 --> 00:35:16,480
nodes

863
00:35:14,560 --> 00:35:18,400
we have has

864
00:35:16,480 --> 00:35:20,000
we have edge between these two nodes

865
00:35:18,400 --> 00:35:22,000
right

866
00:35:20,000 --> 00:35:24,240
so

867
00:35:22,000 --> 00:35:27,359
of course uh okay i i

868
00:35:24,240 --> 00:35:29,280
maybe maybe this is good

869
00:35:27,359 --> 00:35:33,200
we have passed here

870
00:35:29,280 --> 00:35:34,880
and then u1 to u2 we have passed here

871
00:35:33,200 --> 00:35:38,160
right

872
00:35:34,880 --> 00:35:39,359
and the u2 is the three node we have

873
00:35:38,160 --> 00:35:43,119
paste here

874
00:35:39,359 --> 00:35:45,119
and the u2 goes next we have pass here

875
00:35:43,119 --> 00:35:46,960
see the trick here

876
00:35:45,119 --> 00:35:49,119
since each note

877
00:35:46,960 --> 00:35:52,320
is separate

878
00:35:49,119 --> 00:35:52,320
as three note

879
00:35:53,119 --> 00:35:57,599
as three note

880
00:35:55,599 --> 00:35:59,599
and

881
00:35:57,599 --> 00:36:01,839
you always

882
00:35:59,599 --> 00:36:05,760
from s out

883
00:36:01,839 --> 00:36:07,920
you go to some in node

884
00:36:05,760 --> 00:36:10,880
right you go to something note

885
00:36:07,920 --> 00:36:14,240
even you have something like this

886
00:36:10,880 --> 00:36:16,240
something like this or

887
00:36:14,240 --> 00:36:17,599
this this

888
00:36:16,240 --> 00:36:20,480
okay

889
00:36:17,599 --> 00:36:24,320
when you go to

890
00:36:20,480 --> 00:36:27,680
the in node of some original node

891
00:36:24,320 --> 00:36:28,480
next step you cannot

892
00:36:27,680 --> 00:36:30,400
go

893
00:36:28,480 --> 00:36:33,280
here

894
00:36:30,400 --> 00:36:34,480
uh sorry let's finish the this direction

895
00:36:33,280 --> 00:36:38,079
first

896
00:36:34,480 --> 00:36:40,240
so firstly if we really have

897
00:36:38,079 --> 00:36:41,839
a hamiltonian pace on

898
00:36:40,240 --> 00:36:43,680
the original graph

899
00:36:41,839 --> 00:36:46,079
that path

900
00:36:43,680 --> 00:36:48,160
can easily be translated

901
00:36:46,079 --> 00:36:51,920
to the hamiltonian path on our

902
00:36:48,160 --> 00:36:53,359
undirected graph right

903
00:36:51,920 --> 00:36:56,640
there's no problem with that right

904
00:36:53,359 --> 00:36:58,880
because that's how we uh generated our

905
00:36:56,640 --> 00:37:00,720
undirected graph

906
00:36:58,880 --> 00:37:01,599
okay

907
00:37:00,720 --> 00:37:04,400
then

908
00:37:01,599 --> 00:37:06,480
we want to say the opposite that

909
00:37:04,400 --> 00:37:09,119
if on our

910
00:37:06,480 --> 00:37:11,920
graph

911
00:37:09,119 --> 00:37:11,920
there is a

912
00:37:12,800 --> 00:37:16,079
there is a path

913
00:37:14,640 --> 00:37:18,400
like

914
00:37:16,079 --> 00:37:19,280
what we described here okay there is a

915
00:37:18,400 --> 00:37:20,480
path

916
00:37:19,280 --> 00:37:23,680
then why

917
00:37:20,480 --> 00:37:25,119
we can say that there is a path here

918
00:37:23,680 --> 00:37:26,880
because

919
00:37:25,119 --> 00:37:29,520
on our graph

920
00:37:26,880 --> 00:37:33,280
you will start from s out

921
00:37:29,520 --> 00:37:35,599
to some in node so to to the in node of

922
00:37:33,280 --> 00:37:37,200
some nodes okay that's kind of weird

923
00:37:35,599 --> 00:37:40,960
anyway

924
00:37:37,200 --> 00:37:42,240
the next step you cannot go

925
00:37:40,960 --> 00:37:45,359
here

926
00:37:42,240 --> 00:37:48,960
like this one you have to go through its

927
00:37:45,359 --> 00:37:51,680
in node and then our node and connect it

928
00:37:48,960 --> 00:37:53,040
to some in node some other node

929
00:37:51,680 --> 00:37:57,599
why

930
00:37:53,040 --> 00:37:59,920
again because if at this moment

931
00:37:57,599 --> 00:38:02,720
if you step on

932
00:37:59,920 --> 00:38:05,920
the in node

933
00:38:02,720 --> 00:38:08,079
and you go other way

934
00:38:05,920 --> 00:38:09,280
for example go here

935
00:38:08,079 --> 00:38:12,960
then

936
00:38:09,280 --> 00:38:15,680
you will never be able

937
00:38:12,960 --> 00:38:18,880
to go back here

938
00:38:15,680 --> 00:38:20,560
so the in node here will not be step

939
00:38:18,880 --> 00:38:23,440
through then

940
00:38:20,560 --> 00:38:26,880
a hamiltonian path on the undirected

941
00:38:23,440 --> 00:38:30,079
graph cannot be formed

942
00:38:26,880 --> 00:38:33,119
to form a hamiltonian path on the

943
00:38:30,079 --> 00:38:37,359
undirected graph the

944
00:38:33,119 --> 00:38:40,560
middle node the middle node here

945
00:38:37,359 --> 00:38:41,760
must be stacked through

946
00:38:40,560 --> 00:38:44,079
when

947
00:38:41,760 --> 00:38:45,440
the in node

948
00:38:44,079 --> 00:38:47,920
is reached

949
00:38:45,440 --> 00:38:51,040
otherwise the middle note will not be

950
00:38:47,920 --> 00:38:54,240
stepped through will not be reached then

951
00:38:51,040 --> 00:38:57,359
a hamiltonian pass cannot be formed okay

952
00:38:54,240 --> 00:39:01,599
that's the tricky part of how we do it

953
00:38:57,359 --> 00:39:02,800
so actually if you split one origin node

954
00:39:01,599 --> 00:39:03,760
into

955
00:39:02,800 --> 00:39:05,040
four

956
00:39:03,760 --> 00:39:08,160
nodes

957
00:39:05,040 --> 00:39:08,960
it works too into five nodes it works

958
00:39:08,160 --> 00:39:11,839
too

959
00:39:08,960 --> 00:39:14,560
but if you split only to two nodes you

960
00:39:11,839 --> 00:39:15,920
say okay it's in is out

961
00:39:14,560 --> 00:39:20,079
it doesn't work

962
00:39:15,920 --> 00:39:22,960
okay because it is possible

963
00:39:20,079 --> 00:39:26,240
you know something like this can happen

964
00:39:22,960 --> 00:39:29,839
in if you split the note only two in and

965
00:39:26,240 --> 00:39:32,640
out because you can have something like

966
00:39:29,839 --> 00:39:35,920
you will have some

967
00:39:32,640 --> 00:39:37,760
s out goes here then you don't step

968
00:39:35,920 --> 00:39:40,960
through all node and go

969
00:39:37,760 --> 00:39:44,560
otherwise you know you can come here and

970
00:39:40,960 --> 00:39:45,760
go here then you know arbitrary go

971
00:39:44,560 --> 00:39:47,839
somewhere

972
00:39:45,760 --> 00:39:50,720
and in the end that would

973
00:39:47,839 --> 00:39:52,000
that kind of pass cannot be translated

974
00:39:50,720 --> 00:39:54,480
back to

975
00:39:52,000 --> 00:39:55,280
the directed path no

976
00:39:54,480 --> 00:39:58,800
so

977
00:39:55,280 --> 00:40:02,320
you must have at least one middle node

978
00:39:58,800 --> 00:40:04,800
and as long as you have one little node

979
00:40:02,320 --> 00:40:08,560
it works so one to

980
00:40:04,800 --> 00:40:08,560
any number of it doesn't matter

981
00:40:08,839 --> 00:40:16,400
so if on the underrated graph we have

982
00:40:12,880 --> 00:40:19,280
some hemitanium pass here then you know

983
00:40:16,400 --> 00:40:22,319
such an undirected hemitempest

984
00:40:19,280 --> 00:40:25,200
can be translate back to the hemitanian

985
00:40:22,319 --> 00:40:27,040
path from s2t on the original graph with

986
00:40:25,200 --> 00:40:28,319
without any problem

987
00:40:27,040 --> 00:40:30,240
because

988
00:40:28,319 --> 00:40:31,119
in middle out

989
00:40:30,240 --> 00:40:32,240
is

990
00:40:31,119 --> 00:40:33,920
a note

991
00:40:32,240 --> 00:40:36,000
in middle out

992
00:40:33,920 --> 00:40:38,640
is a node

993
00:40:36,000 --> 00:40:41,280
etc right and

994
00:40:38,640 --> 00:40:44,640
why we can do

995
00:40:41,280 --> 00:40:47,520
this because on the original graph there

996
00:40:44,640 --> 00:40:49,680
is a directed pass

997
00:40:47,520 --> 00:40:51,280
so

998
00:40:49,680 --> 00:40:53,359
hamiltonian pairs

999
00:40:51,280 --> 00:40:56,480
the prob uh the problem instance we are

1000
00:40:53,359 --> 00:41:00,560
given has a hamiltonian path

1001
00:40:56,480 --> 00:41:04,319
the undirected graph we translated

1002
00:41:00,560 --> 00:41:08,160
we generated have a hamiltonian pest

1003
00:41:04,319 --> 00:41:10,400
and vice versa so that's why we proved

1004
00:41:08,160 --> 00:41:10,400
that

1005
00:41:10,880 --> 00:41:16,720
we can uh prove we reduce hamiltonian

1006
00:41:13,839 --> 00:41:19,280
pass to on direct and hamiltonian path

1007
00:41:16,720 --> 00:41:21,440
and then pre proof on

1008
00:41:19,280 --> 00:41:24,319
the right-hand tempest is

1009
00:41:21,440 --> 00:41:26,960
also ng-complete

1010
00:41:24,319 --> 00:41:29,680
okay and the conversion is of course

1011
00:41:26,960 --> 00:41:33,440
within polynomial time because we just

1012
00:41:29,680 --> 00:41:35,040
expand the graph like you know

1013
00:41:33,440 --> 00:41:36,720
about three

1014
00:41:35,040 --> 00:41:39,119
uh three

1015
00:41:36,720 --> 00:41:40,720
times triple the notes actually triple

1016
00:41:39,119 --> 00:41:43,839
the note

1017
00:41:40,720 --> 00:41:45,280
minus two actually anyway

1018
00:41:43,839 --> 00:41:47,680
oh

1019
00:41:45,280 --> 00:41:49,839
yeah actually minus four

1020
00:41:47,680 --> 00:41:49,839
so

1021
00:41:50,079 --> 00:41:52,800
the

1022
00:41:51,280 --> 00:41:55,040
last uh

1023
00:41:52,800 --> 00:41:56,240
problem is subset sum

1024
00:41:55,040 --> 00:41:58,480
okay

1025
00:41:56,240 --> 00:42:00,880
and we want to prove subsystem isn't be

1026
00:41:58,480 --> 00:42:03,839
complete we also you know the same

1027
00:42:00,880 --> 00:42:05,119
technique we reduce three sets to subset

1028
00:42:03,839 --> 00:42:06,960
some

1029
00:42:05,119 --> 00:42:09,760
and firstly we want to prove something

1030
00:42:06,960 --> 00:42:12,800
sum is in mp and you know i don't want

1031
00:42:09,760 --> 00:42:16,560
to repeat that again because subsets of

1032
00:42:12,800 --> 00:42:20,240
is also an example we are using as you

1033
00:42:16,560 --> 00:42:21,920
know problems in mp so that's it's in np

1034
00:42:20,240 --> 00:42:24,480
no problem

1035
00:42:21,920 --> 00:42:27,839
now we just need to uh provide the

1036
00:42:24,480 --> 00:42:28,880
conversion from subset sum to

1037
00:42:27,839 --> 00:42:32,400
so sorry

1038
00:42:28,880 --> 00:42:35,680
from a problem instance of three sets

1039
00:42:32,400 --> 00:42:37,599
two subsets

1040
00:42:35,680 --> 00:42:39,359
okay

1041
00:42:37,599 --> 00:42:40,640
then

1042
00:42:39,359 --> 00:42:42,960
remember that

1043
00:42:40,640 --> 00:42:44,880
what is the instance of three

1044
00:42:42,960 --> 00:42:47,599
set that will be a

1045
00:42:44,880 --> 00:42:49,599
formula in three cms right and what is a

1046
00:42:47,599 --> 00:42:52,880
problem instance for subsystem

1047
00:42:49,599 --> 00:42:56,000
we want we we we have a multiset of

1048
00:42:52,880 --> 00:42:57,680
integers and

1049
00:42:56,000 --> 00:43:01,839
a sum

1050
00:42:57,680 --> 00:43:03,839
right that's that's a subsystem okay

1051
00:43:01,839 --> 00:43:04,640
so

1052
00:43:03,839 --> 00:43:07,040
if

1053
00:43:04,640 --> 00:43:12,000
we are given

1054
00:43:07,040 --> 00:43:12,800
a boolean formula in three c and f

1055
00:43:12,000 --> 00:43:13,920
then

1056
00:43:12,800 --> 00:43:17,280
again

1057
00:43:13,920 --> 00:43:19,280
you read the whole formula once

1058
00:43:17,280 --> 00:43:23,200
and you will know that

1059
00:43:19,280 --> 00:43:25,040
in this formula there are arrow boolean

1060
00:43:23,200 --> 00:43:27,599
variables

1061
00:43:25,040 --> 00:43:28,640
and there are k

1062
00:43:27,599 --> 00:43:29,440
clause

1063
00:43:28,640 --> 00:43:31,599
right

1064
00:43:29,440 --> 00:43:34,720
after you scan the whole thing you know

1065
00:43:31,599 --> 00:43:35,760
that you know the information here

1066
00:43:34,720 --> 00:43:37,599
then

1067
00:43:35,760 --> 00:43:39,200
the conversion

1068
00:43:37,599 --> 00:43:43,839
begins with

1069
00:43:39,200 --> 00:43:45,240
we prepare a table like

1070
00:43:43,839 --> 00:43:48,560
uh figure

1071
00:43:45,240 --> 00:43:51,520
7.5 57 here

1072
00:43:48,560 --> 00:43:53,599
so firstly we know that there are l

1073
00:43:51,520 --> 00:43:54,560
boolean variables

1074
00:43:53,599 --> 00:43:56,640
so

1075
00:43:54,560 --> 00:43:57,839
we make

1076
00:43:56,640 --> 00:43:58,720
two

1077
00:43:57,839 --> 00:43:59,920
l

1078
00:43:58,720 --> 00:44:01,280
rows

1079
00:43:59,920 --> 00:44:03,520
like this

1080
00:44:01,280 --> 00:44:05,520
okay no problem right

1081
00:44:03,520 --> 00:44:07,280
and k close

1082
00:44:05,520 --> 00:44:09,280
we make

1083
00:44:07,280 --> 00:44:12,000
two k

1084
00:44:09,280 --> 00:44:13,119
rows like this

1085
00:44:12,000 --> 00:44:15,680
okay

1086
00:44:13,119 --> 00:44:18,079
so with you know uh y l

1087
00:44:15,680 --> 00:44:20,000
y one z one y two z two

1088
00:44:18,079 --> 00:44:22,160
y l zero that they

1089
00:44:20,000 --> 00:44:23,599
those are just nem naming

1090
00:44:22,160 --> 00:44:26,400
for convenience

1091
00:44:23,599 --> 00:44:29,040
okay because i can explain the whole

1092
00:44:26,400 --> 00:44:31,200
thing better with the names here but

1093
00:44:29,040 --> 00:44:33,680
that's not necessary

1094
00:44:31,200 --> 00:44:37,040
and also g1 h1

1095
00:44:33,680 --> 00:44:38,560
through to gkhk that's all still just

1096
00:44:37,040 --> 00:44:40,640
uh convenient

1097
00:44:38,560 --> 00:44:42,560
the naming makes the explanation

1098
00:44:40,640 --> 00:44:44,319
convenient okay

1099
00:44:42,560 --> 00:44:45,359
and then for column

1100
00:44:44,319 --> 00:44:48,480
we have

1101
00:44:45,359 --> 00:44:48,480
l column here

1102
00:44:48,880 --> 00:44:54,800
okay and

1103
00:44:52,000 --> 00:44:56,000
k column here

1104
00:44:54,800 --> 00:44:57,680
so

1105
00:44:56,000 --> 00:45:00,400
for given

1106
00:44:57,680 --> 00:45:03,839
formula in three c and f we know that

1107
00:45:00,400 --> 00:45:05,680
air variables k close so we prepare a

1108
00:45:03,839 --> 00:45:06,960
table

1109
00:45:05,680 --> 00:45:08,640
with

1110
00:45:06,960 --> 00:45:10,640
two l

1111
00:45:08,640 --> 00:45:13,520
plus two k

1112
00:45:10,640 --> 00:45:14,800
rows and l

1113
00:45:13,520 --> 00:45:16,720
plus k

1114
00:45:14,800 --> 00:45:17,680
columns

1115
00:45:16,720 --> 00:45:19,839
okay

1116
00:45:17,680 --> 00:45:19,839
so

1117
00:45:25,359 --> 00:45:29,920
now we start to feel the table

1118
00:45:28,560 --> 00:45:32,480
okay

1119
00:45:29,920 --> 00:45:34,880
so

1120
00:45:32,480 --> 00:45:35,839
firstly this part

1121
00:45:34,880 --> 00:45:38,240
empty

1122
00:45:35,839 --> 00:45:40,880
nothing to feel

1123
00:45:38,240 --> 00:45:42,319
okay no problem right

1124
00:45:40,880 --> 00:45:43,839
then

1125
00:45:42,319 --> 00:45:45,599
for the uh

1126
00:45:43,839 --> 00:45:49,200
for

1127
00:45:45,599 --> 00:45:49,200
the two l rows part

1128
00:45:49,599 --> 00:45:52,880
very easy

1129
00:45:52,000 --> 00:45:53,760
one

1130
00:45:52,880 --> 00:45:56,960
one

1131
00:45:53,760 --> 00:45:58,160
and a zero zero zero zero zero zero

1132
00:45:56,960 --> 00:45:59,040
okay

1133
00:45:58,160 --> 00:46:00,480
one

1134
00:45:59,040 --> 00:46:03,520
one

1135
00:46:00,480 --> 00:46:04,880
zero zero zero zero zero zero

1136
00:46:03,520 --> 00:46:06,480
and the one

1137
00:46:04,880 --> 00:46:10,319
one

1138
00:46:06,480 --> 00:46:11,200
or zero on the left sorry on the right

1139
00:46:10,319 --> 00:46:13,680
and

1140
00:46:11,200 --> 00:46:18,160
one one

1141
00:46:13,680 --> 00:46:22,880
0 0 here and 2 1 1 here so that's why i

1142
00:46:18,160 --> 00:46:24,800
use the two arrow rows l columns

1143
00:46:22,880 --> 00:46:25,920
no problem right

1144
00:46:24,800 --> 00:46:27,440
then

1145
00:46:25,920 --> 00:46:28,480
we

1146
00:46:27,440 --> 00:46:33,119
you know

1147
00:46:28,480 --> 00:46:36,319
feel uh going through the same feeling

1148
00:46:33,119 --> 00:46:38,720
we have this part

1149
00:46:36,319 --> 00:46:40,240
so one one

1150
00:46:38,720 --> 00:46:45,200
all the left

1151
00:46:40,240 --> 00:46:47,760
hand zero one one all the left out right

1152
00:46:45,200 --> 00:46:48,640
right uh side zero

1153
00:46:47,760 --> 00:46:50,240
and then

1154
00:46:48,640 --> 00:46:52,400
finally one one

1155
00:46:50,240 --> 00:46:54,560
okay

1156
00:46:52,400 --> 00:46:58,800
so for the next

1157
00:46:54,560 --> 00:46:58,800
area here is very easy

1158
00:46:59,359 --> 00:47:04,240
you look at the formula

1159
00:47:01,920 --> 00:47:06,240
okay you look at the formula

1160
00:47:04,240 --> 00:47:08,000
for first clause

1161
00:47:06,240 --> 00:47:08,960
for example

1162
00:47:08,000 --> 00:47:12,480
if

1163
00:47:08,960 --> 00:47:15,520
first clause is x1

1164
00:47:12,480 --> 00:47:19,040
or x2 bar

1165
00:47:15,520 --> 00:47:21,920
or x3

1166
00:47:19,040 --> 00:47:25,040
for the boolean variable

1167
00:47:21,920 --> 00:47:26,240
we mark y

1168
00:47:25,040 --> 00:47:29,839
for the

1169
00:47:26,240 --> 00:47:31,599
negation of the boolean variable we mark

1170
00:47:29,839 --> 00:47:32,559
z

1171
00:47:31,599 --> 00:47:36,000
so

1172
00:47:32,559 --> 00:47:36,839
we mark y one z two

1173
00:47:36,000 --> 00:47:38,559
y

1174
00:47:36,839 --> 00:47:39,440
three

1175
00:47:38,559 --> 00:47:42,400
okay

1176
00:47:39,440 --> 00:47:44,319
so y one

1177
00:47:42,400 --> 00:47:45,520
z2

1178
00:47:44,319 --> 00:47:48,319
y3

1179
00:47:45,520 --> 00:47:50,880
and all others are zero

1180
00:47:48,319 --> 00:47:52,640
or other level okay

1181
00:47:50,880 --> 00:47:56,800
and

1182
00:47:52,640 --> 00:47:59,280
uh if you have duplicate like what x1 or

1183
00:47:56,800 --> 00:48:01,440
x1 or x1

1184
00:47:59,280 --> 00:48:03,920
you just need to fill

1185
00:48:01,440 --> 00:48:05,760
the one sorry y1

1186
00:48:03,920 --> 00:48:08,559
okay

1187
00:48:05,760 --> 00:48:10,240
so we just examine each clause so for

1188
00:48:08,559 --> 00:48:12,319
this one we mark

1189
00:48:10,240 --> 00:48:14,880
y one z two

1190
00:48:12,319 --> 00:48:17,520
uh y three and four

1191
00:48:14,880 --> 00:48:19,440
uh this example is like

1192
00:48:17,520 --> 00:48:21,760
y two so

1193
00:48:19,440 --> 00:48:25,520
that must be x2 right

1194
00:48:21,760 --> 00:48:29,440
and y3 that must be x3 and we don't know

1195
00:48:25,520 --> 00:48:30,880
the third one anyway so for each

1196
00:48:29,440 --> 00:48:34,240
clause

1197
00:48:30,880 --> 00:48:38,559
for each clause

1198
00:48:34,240 --> 00:48:39,839
we mark the corresponding position of

1199
00:48:38,559 --> 00:48:41,520
the boolean

1200
00:48:39,839 --> 00:48:42,800
well literal

1201
00:48:41,520 --> 00:48:45,359
for

1202
00:48:42,800 --> 00:48:47,839
x1 we mark for x i

1203
00:48:45,359 --> 00:48:48,960
we mark

1204
00:48:47,839 --> 00:48:50,319
i

1205
00:48:48,960 --> 00:48:55,359
as one

1206
00:48:50,319 --> 00:48:56,640
for x one x i bar we mark z i s one

1207
00:48:55,359 --> 00:48:58,240
that's it

1208
00:48:56,640 --> 00:48:59,839
so we can

1209
00:48:58,240 --> 00:49:01,599
fill the

1210
00:48:59,839 --> 00:49:04,160
last part

1211
00:49:01,599 --> 00:49:06,800
this area this way

1212
00:49:04,160 --> 00:49:09,839
no problem right

1213
00:49:06,800 --> 00:49:11,839
okay for the last row here there's a

1214
00:49:09,839 --> 00:49:16,559
last row here okay

1215
00:49:11,839 --> 00:49:18,319
we just feel 1 1 1 1 one and a three

1216
00:49:16,559 --> 00:49:21,119
three three

1217
00:49:18,319 --> 00:49:21,119
three that's it

1218
00:49:21,359 --> 00:49:25,119
okay

1219
00:49:22,480 --> 00:49:26,240
now we finish the table

1220
00:49:25,119 --> 00:49:29,119
okay

1221
00:49:26,240 --> 00:49:31,359
okay after finish table and the question

1222
00:49:29,119 --> 00:49:34,480
you ask is that okay subset sum we need

1223
00:49:31,359 --> 00:49:37,040
to have a multiset of integers

1224
00:49:34,480 --> 00:49:38,400
where is the subset of uh sorry multiset

1225
00:49:37,040 --> 00:49:40,880
of integers

1226
00:49:38,400 --> 00:49:40,880
actually

1227
00:49:41,200 --> 00:49:45,599
we consider

1228
00:49:43,359 --> 00:49:47,839
each row

1229
00:49:45,599 --> 00:49:50,800
okay

1230
00:49:47,839 --> 00:49:53,520
we consider not not include y2 just you

1231
00:49:50,800 --> 00:49:54,880
know consider each row

1232
00:49:53,520 --> 00:49:57,359
as

1233
00:49:54,880 --> 00:50:00,160
one

1234
00:49:57,359 --> 00:50:02,880
there's a mole integer or actually you

1235
00:50:00,160 --> 00:50:04,079
can do other base doesn't matter

1236
00:50:02,880 --> 00:50:06,160
uh

1237
00:50:04,079 --> 00:50:09,440
you cannot do binary because we have

1238
00:50:06,160 --> 00:50:09,440
three here okay

1239
00:50:09,680 --> 00:50:12,640
other than

1240
00:50:11,200 --> 00:50:16,640
uh

1241
00:50:12,640 --> 00:50:17,680
where the bay a base greater than three

1242
00:50:16,640 --> 00:50:20,400
works

1243
00:50:17,680 --> 00:50:21,920
okay as long as the base is greater than

1244
00:50:20,400 --> 00:50:24,839
three it works

1245
00:50:21,920 --> 00:50:28,319
so easy for decimal right

1246
00:50:24,839 --> 00:50:29,440
so we consider for example

1247
00:50:28,319 --> 00:50:30,640
this one is

1248
00:50:29,440 --> 00:50:32,880
one okay

1249
00:50:30,640 --> 00:50:35,200
and then we have one zero

1250
00:50:32,880 --> 00:50:38,640
right so that's that's ten

1251
00:50:35,200 --> 00:50:42,720
and we have one zero zero that's 100

1252
00:50:38,640 --> 00:50:45,680
that's it so we consider each row

1253
00:50:42,720 --> 00:50:49,920
as an integer that's it so how many

1254
00:50:45,680 --> 00:50:52,640
integers we have in s the multiset

1255
00:50:49,920 --> 00:50:55,200
we have

1256
00:50:52,640 --> 00:50:56,640
two l plus 2k

1257
00:50:55,200 --> 00:50:59,119
integers

1258
00:50:56,640 --> 00:51:03,119
although those integers are probably

1259
00:50:59,119 --> 00:51:05,760
very very large but they are integers

1260
00:51:03,119 --> 00:51:09,119
any problem no yeah

1261
00:51:05,760 --> 00:51:14,400
then we specify sum

1262
00:51:09,119 --> 00:51:16,079
here so that's a very very large integer

1263
00:51:14,400 --> 00:51:19,680
you have

1264
00:51:16,079 --> 00:51:22,680
l1 and k3 right

1265
00:51:19,680 --> 00:51:22,680
so

1266
00:51:24,720 --> 00:51:29,359
t and that's our

1267
00:51:27,359 --> 00:51:31,839
subset sum problem

1268
00:51:29,359 --> 00:51:31,839
instance

1269
00:51:32,000 --> 00:51:34,960
okay

1270
00:51:32,960 --> 00:51:37,040
so conversion is finished

1271
00:51:34,960 --> 00:51:39,760
and the whole conversion

1272
00:51:37,040 --> 00:51:42,480
time is apparently polynomial to the

1273
00:51:39,760 --> 00:51:45,920
length of the you know

1274
00:51:42,480 --> 00:51:47,200
three cnf formula

1275
00:51:45,920 --> 00:51:50,880
okay

1276
00:51:47,200 --> 00:51:54,319
now the final the last part is that

1277
00:51:50,880 --> 00:51:56,880
why the given formula satisfiable

1278
00:51:54,319 --> 00:51:57,839
our subject sum

1279
00:51:56,880 --> 00:52:00,640
uh

1280
00:51:57,839 --> 00:52:02,000
per instance is can be solved

1281
00:52:00,640 --> 00:52:02,839
because

1282
00:52:02,000 --> 00:52:04,400
you

1283
00:52:02,839 --> 00:52:06,640
see

1284
00:52:04,400 --> 00:52:08,240
if

1285
00:52:06,640 --> 00:52:10,880
if the

1286
00:52:08,240 --> 00:52:13,920
formula is satisfiable

1287
00:52:10,880 --> 00:52:15,040
we just adjust we just need to

1288
00:52:13,920 --> 00:52:18,720
select

1289
00:52:15,040 --> 00:52:21,040
the corresponding y and z

1290
00:52:18,720 --> 00:52:22,559
according to

1291
00:52:21,040 --> 00:52:23,839
the literal

1292
00:52:22,559 --> 00:52:25,920
actually according to the truth

1293
00:52:23,839 --> 00:52:28,800
assignment for example

1294
00:52:25,920 --> 00:52:30,000
if x1 is false

1295
00:52:28,800 --> 00:52:32,880
we choose

1296
00:52:30,000 --> 00:52:34,400
v1

1297
00:52:32,880 --> 00:52:36,319
if x

1298
00:52:34,400 --> 00:52:38,240
2 is true

1299
00:52:36,319 --> 00:52:39,760
we choose y2

1300
00:52:38,240 --> 00:52:41,040
okay

1301
00:52:39,760 --> 00:52:41,760
something like that

1302
00:52:41,040 --> 00:52:43,040
so

1303
00:52:41,760 --> 00:52:43,920
we just

1304
00:52:43,040 --> 00:52:44,960
since

1305
00:52:43,920 --> 00:52:48,240
the

1306
00:52:44,960 --> 00:52:49,839
formula is satisfiable we just choose

1307
00:52:48,240 --> 00:52:54,000
we just choose

1308
00:52:49,839 --> 00:52:56,640
y or z according to the truth assignment

1309
00:52:54,000 --> 00:53:00,319
after choosing these rows

1310
00:52:56,640 --> 00:53:04,800
you see y1 and z1 you choose one y2 and

1311
00:53:00,319 --> 00:53:07,680
z2 will choose one etc so we will choose

1312
00:53:04,800 --> 00:53:10,480
l rows actually arrow integers from our

1313
00:53:07,680 --> 00:53:11,680
multiset right

1314
00:53:10,480 --> 00:53:13,839
and

1315
00:53:11,680 --> 00:53:15,760
add them together

1316
00:53:13,839 --> 00:53:20,319
what do you have

1317
00:53:15,760 --> 00:53:21,119
apparently you will have one one one one

1318
00:53:20,319 --> 00:53:22,559
one

1319
00:53:21,119 --> 00:53:24,559
exactly here

1320
00:53:22,559 --> 00:53:26,480
and then

1321
00:53:24,559 --> 00:53:27,599
one two three

1322
00:53:26,480 --> 00:53:28,720
one

1323
00:53:27,599 --> 00:53:30,559
not

1324
00:53:28,720 --> 00:53:31,680
not two okay

1325
00:53:30,559 --> 00:53:32,640
one

1326
00:53:31,680 --> 00:53:33,920
two

1327
00:53:32,640 --> 00:53:37,359
three

1328
00:53:33,920 --> 00:53:40,960
you have a number between one and three

1329
00:53:37,359 --> 00:53:43,520
after adding the l

1330
00:53:40,960 --> 00:53:44,720
integers

1331
00:53:43,520 --> 00:53:45,760
right

1332
00:53:44,720 --> 00:53:49,200
then

1333
00:53:45,760 --> 00:53:49,200
we just need to choose

1334
00:53:49,680 --> 00:53:51,760
rows

1335
00:53:50,720 --> 00:53:55,200
from

1336
00:53:51,760 --> 00:53:56,480
the k rows actually k integers

1337
00:53:55,200 --> 00:54:00,480
to make

1338
00:53:56,480 --> 00:54:00,480
the number exactly three

1339
00:54:01,440 --> 00:54:04,960
okay

1340
00:54:02,319 --> 00:54:06,240
and why is one two three not zero to

1341
00:54:04,960 --> 00:54:09,200
three

1342
00:54:06,240 --> 00:54:10,559
because that truth assignment satisfy

1343
00:54:09,200 --> 00:54:11,920
the formula

1344
00:54:10,559 --> 00:54:13,920
that means

1345
00:54:11,920 --> 00:54:17,440
for the column here

1346
00:54:13,920 --> 00:54:20,400
there will be at least one there

1347
00:54:17,440 --> 00:54:21,359
maybe two maybe three but at least one

1348
00:54:20,400 --> 00:54:22,559
right

1349
00:54:21,359 --> 00:54:25,040
so

1350
00:54:22,559 --> 00:54:27,440
after choosing the l integers here and

1351
00:54:25,040 --> 00:54:28,400
add them together we will have

1352
00:54:27,440 --> 00:54:29,359
1

1353
00:54:28,400 --> 00:54:30,880
2

1354
00:54:29,359 --> 00:54:34,319
3

1355
00:54:30,880 --> 00:54:37,920
this area and then we can choose

1356
00:54:34,319 --> 00:54:41,119
appropriate integers from this part to

1357
00:54:37,920 --> 00:54:42,240
make them exactly three

1358
00:54:41,119 --> 00:54:45,599
so

1359
00:54:42,240 --> 00:54:48,640
if the formula is satisfiable the stop

1360
00:54:45,599 --> 00:54:51,359
says some problem instance we converted

1361
00:54:48,640 --> 00:54:54,640
can really be you know so you can really

1362
00:54:51,359 --> 00:54:55,920
selected some of the

1363
00:54:54,640 --> 00:54:59,280
uh

1364
00:54:55,920 --> 00:55:02,559
some integers from the multiset to make

1365
00:54:59,280 --> 00:55:02,559
them add up to

1366
00:55:02,720 --> 00:55:06,880
t

1367
00:55:04,160 --> 00:55:08,559
the specified sum

1368
00:55:06,880 --> 00:55:10,720
okay

1369
00:55:08,559 --> 00:55:12,960
so that's one direction the other

1370
00:55:10,720 --> 00:55:16,319
direction is that if someone asks you

1371
00:55:12,960 --> 00:55:18,480
the subset some permissions like this

1372
00:55:16,319 --> 00:55:21,760
and

1373
00:55:18,480 --> 00:55:24,720
there is really

1374
00:55:21,760 --> 00:55:28,880
some integers

1375
00:55:24,720 --> 00:55:32,799
selected from the two l plus two k

1376
00:55:28,880 --> 00:55:34,480
integers and add up to be exactly the

1377
00:55:32,799 --> 00:55:36,720
sum

1378
00:55:34,480 --> 00:55:39,839
why the original

1379
00:55:36,720 --> 00:55:43,599
formula is satisfiable

1380
00:55:39,839 --> 00:55:46,400
well it's very easy because you see

1381
00:55:43,599 --> 00:55:49,760
from this part

1382
00:55:46,400 --> 00:55:52,640
you know that select

1383
00:55:49,760 --> 00:55:54,079
integers from this part alone

1384
00:55:52,640 --> 00:55:56,799
cannot

1385
00:55:54,079 --> 00:55:56,799
make three

1386
00:55:57,599 --> 00:56:01,040
right cannot make three

1387
00:55:59,839 --> 00:56:04,880
why

1388
00:56:01,040 --> 00:56:06,000
because at most two for each column

1389
00:56:04,880 --> 00:56:07,040
right

1390
00:56:06,000 --> 00:56:11,040
so

1391
00:56:07,040 --> 00:56:13,359
select from this part alone cannot max3

1392
00:56:11,040 --> 00:56:13,359
and

1393
00:56:14,400 --> 00:56:22,079
according to this you can conclude that

1394
00:56:17,359 --> 00:56:24,480
at least one comes from the upper part

1395
00:56:22,079 --> 00:56:25,599
okay comes from the other part

1396
00:56:24,480 --> 00:56:28,160
and

1397
00:56:25,599 --> 00:56:30,960
since the integer here

1398
00:56:28,160 --> 00:56:32,799
you selected add up to

1399
00:56:30,960 --> 00:56:33,920
one in this area

1400
00:56:32,799 --> 00:56:36,400
each

1401
00:56:33,920 --> 00:56:38,319
column is one in this area

1402
00:56:36,400 --> 00:56:40,160
and we don't have

1403
00:56:38,319 --> 00:56:42,880
things here right

1404
00:56:40,160 --> 00:56:42,880
that means

1405
00:56:43,119 --> 00:56:45,839
from

1406
00:56:46,319 --> 00:56:50,480
the l

1407
00:56:47,680 --> 00:56:51,680
integers here

1408
00:56:50,480 --> 00:56:54,400
you

1409
00:56:51,680 --> 00:56:55,680
the the integer you selected

1410
00:56:54,400 --> 00:56:59,760
must be

1411
00:56:55,680 --> 00:57:03,200
from y1 and v one you select one integer

1412
00:56:59,760 --> 00:57:05,599
y two and the z two you select one y

1413
00:57:03,200 --> 00:57:06,720
three and the z three you select one and

1414
00:57:05,599 --> 00:57:09,520
et cetera

1415
00:57:06,720 --> 00:57:11,760
why because if you don't

1416
00:57:09,520 --> 00:57:14,240
you know among these two so that uh

1417
00:57:11,760 --> 00:57:15,200
select this one how can you add up one

1418
00:57:14,240 --> 00:57:17,359
here

1419
00:57:15,200 --> 00:57:20,400
the same thing goes to this one this one

1420
00:57:17,359 --> 00:57:23,520
this one and every one

1421
00:57:20,400 --> 00:57:24,400
right so we know that if from the subset

1422
00:57:23,520 --> 00:57:27,119
sum

1423
00:57:24,400 --> 00:57:29,119
we can select some integer and add up to

1424
00:57:27,119 --> 00:57:31,839
you know the t here

1425
00:57:29,119 --> 00:57:35,280
there must be

1426
00:57:31,839 --> 00:57:38,319
uh from each two

1427
00:57:35,280 --> 00:57:39,440
rows you select one integer and also

1428
00:57:38,319 --> 00:57:41,280
that

1429
00:57:39,440 --> 00:57:43,920
and also that

1430
00:57:41,280 --> 00:57:46,400
this part of area cannot make three

1431
00:57:43,920 --> 00:57:49,200
alone must be there there must be at

1432
00:57:46,400 --> 00:57:52,240
least one from the upper area

1433
00:57:49,200 --> 00:57:53,520
so these two relation comes together you

1434
00:57:52,240 --> 00:57:55,839
know that

1435
00:57:53,520 --> 00:57:55,839
since

1436
00:57:55,920 --> 00:57:59,920
you have

1437
00:57:57,760 --> 00:58:03,440
each pair you select one

1438
00:57:59,920 --> 00:58:05,280
those selection can be translated into a

1439
00:58:03,440 --> 00:58:07,440
boolean choose assignment

1440
00:58:05,280 --> 00:58:08,880
if you select y

1441
00:58:07,440 --> 00:58:11,599
that

1442
00:58:08,880 --> 00:58:13,760
boolean variable is set to true if we

1443
00:58:11,599 --> 00:58:16,720
select uh from z

1444
00:58:13,760 --> 00:58:17,760
that boolean variable is set to false

1445
00:58:16,720 --> 00:58:20,480
and

1446
00:58:17,760 --> 00:58:23,760
setting that variable to true or false

1447
00:58:20,480 --> 00:58:26,079
the cause all closed

1448
00:58:23,760 --> 00:58:28,880
is satisfied

1449
00:58:26,079 --> 00:58:30,799
because there is at least one from this

1450
00:58:28,880 --> 00:58:32,240
area to make

1451
00:58:30,799 --> 00:58:34,240
this part

1452
00:58:32,240 --> 00:58:38,480
okay so

1453
00:58:34,240 --> 00:58:41,680
if the sound has a uh you know uh

1454
00:58:38,480 --> 00:58:41,680
if the converted

1455
00:58:41,920 --> 00:58:47,119
snt is really

1456
00:58:44,400 --> 00:58:49,200
in subset sum that means

1457
00:58:47,119 --> 00:58:51,200
the original pulling formula is

1458
00:58:49,200 --> 00:58:53,040
satisfiable

1459
00:58:51,200 --> 00:58:54,960
then our

1460
00:58:53,040 --> 00:58:57,520
proof is completed

1461
00:58:54,960 --> 00:59:01,119
because we established the mapping

1462
00:58:57,520 --> 00:59:01,119
reducibility property and

1463
00:59:01,680 --> 00:59:07,839
the whole conversion can be

1464
00:59:04,559 --> 00:59:08,799
completed within a polynomial time

1465
00:59:07,839 --> 00:59:09,599
okay

1466
00:59:08,799 --> 00:59:12,240
so

1467
00:59:09,599 --> 00:59:14,400
we have

1468
00:59:12,240 --> 00:59:16,160
proved

1469
00:59:14,400 --> 00:59:19,040
subset sum

1470
00:59:16,160 --> 00:59:20,079
is undecomplete

1471
00:59:19,040 --> 00:59:24,079
okay

1472
00:59:20,079 --> 00:59:24,079
so that's uh

1473
00:59:24,960 --> 00:59:28,640
that's all we have finished the

1474
00:59:27,839 --> 00:59:31,040
uh

1475
00:59:28,640 --> 00:59:32,880
our course for the whole semester

1476
00:59:31,040 --> 00:59:34,480
and

1477
00:59:32,880 --> 00:59:37,799
good luck with your

1478
00:59:34,480 --> 00:59:37,799
final examination

