1
00:00:01,040 --> 00:00:06,480
for the last part of chapter 2

2
00:00:04,000 --> 00:00:10,559
we are going to introduce

3
00:00:06,480 --> 00:00:11,599
cyk algorithm for a membership test what

4
00:00:10,559 --> 00:00:14,639
is

5
00:00:11,599 --> 00:00:14,639
a membership test

6
00:00:14,799 --> 00:00:20,240
if you have

7
00:00:16,560 --> 00:00:20,240
a context-free language l

8
00:00:21,760 --> 00:00:24,960
given

9
00:00:23,279 --> 00:00:26,960
a string w

10
00:00:24,960 --> 00:00:28,640
you want to know that

11
00:00:26,960 --> 00:00:32,079
if

12
00:00:28,640 --> 00:00:33,040
string w belongs to l or not

13
00:00:32,079 --> 00:00:35,680
okay

14
00:00:33,040 --> 00:00:37,920
and we know that it is

15
00:00:35,680 --> 00:00:40,719
doable because

16
00:00:37,920 --> 00:00:43,520
in mathematical way of thinking you can

17
00:00:40,719 --> 00:00:46,160
derive since

18
00:00:43,520 --> 00:00:48,960
w is given so the

19
00:00:46,160 --> 00:00:51,360
length of w is known

20
00:00:48,960 --> 00:00:52,480
and you can

21
00:00:51,360 --> 00:00:55,840
use

22
00:00:52,480 --> 00:00:55,840
the grammar for l

23
00:00:56,399 --> 00:01:00,879
and start from the start variable let's

24
00:00:59,680 --> 00:01:03,600
say s

25
00:01:00,879 --> 00:01:05,199
and derive

26
00:01:03,600 --> 00:01:07,040
all possible

27
00:01:05,199 --> 00:01:09,840
strings

28
00:01:07,040 --> 00:01:13,360
of which the length is

29
00:01:09,840 --> 00:01:16,960
less than and or equal to w

30
00:01:13,360 --> 00:01:18,320
then if you if you uh find that there is

31
00:01:16,960 --> 00:01:20,000
no string

32
00:01:18,320 --> 00:01:22,080
in

33
00:01:20,000 --> 00:01:23,600
all the strings here

34
00:01:22,080 --> 00:01:24,400
let's say x

35
00:01:23,600 --> 00:01:27,200
and

36
00:01:24,400 --> 00:01:30,159
x

37
00:01:27,200 --> 00:01:30,159
and you'll find that

38
00:01:31,360 --> 00:01:34,640
all the string derived

39
00:01:33,520 --> 00:01:36,400
from

40
00:01:34,640 --> 00:01:37,920
the star variable

41
00:01:36,400 --> 00:01:40,560
of length

42
00:01:37,920 --> 00:01:42,720
equal to or less than

43
00:01:40,560 --> 00:01:47,200
w

44
00:01:42,720 --> 00:01:50,320
within these strings there is no w then

45
00:01:47,200 --> 00:01:52,960
w does not belong to l

46
00:01:50,320 --> 00:01:55,360
otherwise you can find the derivation

47
00:01:52,960 --> 00:01:57,759
from star variable to that string and

48
00:01:55,360 --> 00:02:00,079
you know that the string

49
00:01:57,759 --> 00:02:02,320
w is in l

50
00:02:00,079 --> 00:02:03,360
okay so that's

51
00:02:02,320 --> 00:02:05,520
for

52
00:02:03,360 --> 00:02:07,600
uh in the mathematical

53
00:02:05,520 --> 00:02:08,560
way it is doable

54
00:02:07,600 --> 00:02:12,959
but

55
00:02:08,560 --> 00:02:16,720
such a thinking is not practical for

56
00:02:12,959 --> 00:02:18,319
real world you cannot use such a

57
00:02:16,720 --> 00:02:19,760
thinking in

58
00:02:18,319 --> 00:02:22,720
practical use

59
00:02:19,760 --> 00:02:23,680
so we need some more efficient algorithm

60
00:02:22,720 --> 00:02:26,640
for

61
00:02:23,680 --> 00:02:27,680
testing membership of a string

62
00:02:26,640 --> 00:02:32,400
so

63
00:02:27,680 --> 00:02:35,519
here is the cyk algorithm and c y and k

64
00:02:32,400 --> 00:02:37,440
are last names of the

65
00:02:35,519 --> 00:02:38,800
uh proposing

66
00:02:37,440 --> 00:02:40,080
this algorithm

67
00:02:38,800 --> 00:02:41,920
okay

68
00:02:40,080 --> 00:02:46,160
so uh

69
00:02:41,920 --> 00:02:49,200
the basic idea of cyk algorithm is uh

70
00:02:46,160 --> 00:02:50,800
also quite straightforward

71
00:02:49,200 --> 00:02:53,599
quite intuitive

72
00:02:50,800 --> 00:02:53,599
suppose that

73
00:02:55,599 --> 00:02:58,080
for l

74
00:02:58,159 --> 00:03:01,120
since l is a

75
00:02:59,760 --> 00:03:02,400
context free

76
00:03:01,120 --> 00:03:04,720
language

77
00:03:02,400 --> 00:03:06,640
you can have the context with grammar

78
00:03:04,720 --> 00:03:09,040
for l right

79
00:03:06,640 --> 00:03:11,920
then we assume that the context three

80
00:03:09,040 --> 00:03:14,640
grammar is in chomsky normal form

81
00:03:11,920 --> 00:03:18,959
okay in chomsky no more form

82
00:03:14,640 --> 00:03:21,680
and as we have proof that any

83
00:03:18,959 --> 00:03:24,400
context free grammar can be converted

84
00:03:21,680 --> 00:03:26,799
into chongqing normal phone

85
00:03:24,400 --> 00:03:30,319
possibly with some exception

86
00:03:26,799 --> 00:03:33,280
for epson right for empty string but you

87
00:03:30,319 --> 00:03:34,640
can see that in the membership test case

88
00:03:33,280 --> 00:03:37,360
you can test

89
00:03:34,640 --> 00:03:39,040
empty string upfront so there's no

90
00:03:37,360 --> 00:03:40,799
problem

91
00:03:39,040 --> 00:03:42,080
for such an

92
00:03:40,799 --> 00:03:45,680
exception

93
00:03:42,080 --> 00:03:47,680
let's say if url has empty string then

94
00:03:45,680 --> 00:03:50,799
you can just um

95
00:03:47,680 --> 00:03:53,439
convert to a chomsky convert the grammar

96
00:03:50,799 --> 00:03:55,680
into chomsky normal phone without

97
00:03:53,439 --> 00:03:57,920
the empty string and when you do the

98
00:03:55,680 --> 00:03:59,760
membership test you can

99
00:03:57,920 --> 00:04:02,080
when you see empty string you say yes

100
00:03:59,760 --> 00:04:03,840
that's no problem right

101
00:04:02,080 --> 00:04:04,959
and

102
00:04:03,840 --> 00:04:06,319
if your

103
00:04:04,959 --> 00:04:08,640
language arrow

104
00:04:06,319 --> 00:04:11,840
has no empty string then there is no

105
00:04:08,640 --> 00:04:12,640
problem at all you can convert

106
00:04:11,840 --> 00:04:14,959
the

107
00:04:12,640 --> 00:04:16,320
given grammar into chongqing normal

108
00:04:14,959 --> 00:04:19,280
phone

109
00:04:16,320 --> 00:04:21,600
without any exception and that grammar

110
00:04:19,280 --> 00:04:23,120
will be valid

111
00:04:21,600 --> 00:04:24,960
for

112
00:04:23,120 --> 00:04:28,240
chongqing normal phone

113
00:04:24,960 --> 00:04:29,440
so why do we need

114
00:04:28,240 --> 00:04:31,360
because

115
00:04:29,440 --> 00:04:34,160
cnf

116
00:04:31,360 --> 00:04:36,400
chomsky normal phone makes

117
00:04:34,160 --> 00:04:37,360
this kind of job easy

118
00:04:36,400 --> 00:04:39,919
okay

119
00:04:37,360 --> 00:04:42,560
so uh easy put

120
00:04:39,919 --> 00:04:44,560
if you re let's review the requirement

121
00:04:42,560 --> 00:04:45,600
of chomsky normal phone

122
00:04:44,560 --> 00:04:48,240
for

123
00:04:45,600 --> 00:04:49,520
grammar in chomsky normal phone

124
00:04:48,240 --> 00:04:52,960
that means

125
00:04:49,520 --> 00:04:52,960
the rule of your grammar

126
00:04:53,120 --> 00:04:59,040
is in uh

127
00:04:55,120 --> 00:05:01,520
there are only two forms for the rules

128
00:04:59,040 --> 00:05:04,800
in chomsky normal form one is that you

129
00:05:01,520 --> 00:05:08,000
have one variable may become

130
00:05:04,800 --> 00:05:09,840
two variable right and the other is that

131
00:05:08,000 --> 00:05:12,479
you have one variable

132
00:05:09,840 --> 00:05:13,600
become a terminal something like

133
00:05:12,479 --> 00:05:16,960
these two

134
00:05:13,600 --> 00:05:20,400
and of course there can be no start

135
00:05:16,960 --> 00:05:20,400
variable appear

136
00:05:20,560 --> 00:05:25,440
on the right hand side on the body part

137
00:05:23,680 --> 00:05:26,479
and

138
00:05:25,440 --> 00:05:27,680
uh

139
00:05:26,479 --> 00:05:30,560
if

140
00:05:27,680 --> 00:05:34,880
we allow an exception that uh the star

141
00:05:30,560 --> 00:05:34,880
variable can become epsom okay

142
00:05:35,039 --> 00:05:40,080
so that's our chomsky normal phone so

143
00:05:38,880 --> 00:05:42,560
uh

144
00:05:40,080 --> 00:05:45,360
if you have only these two kinds of

145
00:05:42,560 --> 00:05:48,800
rules then you can imagine that

146
00:05:45,360 --> 00:05:50,400
for any terminal strings

147
00:05:48,800 --> 00:05:55,199
derived

148
00:05:50,400 --> 00:05:55,199
by from the start variable now

149
00:05:55,280 --> 00:06:00,960
the whole process would like

150
00:05:57,440 --> 00:06:02,810
you have for example the

151
00:06:00,960 --> 00:06:04,160
string here is like a

152
00:06:02,810 --> 00:06:05,520
[Music]

153
00:06:04,160 --> 00:06:09,080
let's say

154
00:06:05,520 --> 00:06:13,840
w1 w2 w3

155
00:06:09,080 --> 00:06:15,759
2wn right and the wi

156
00:06:13,840 --> 00:06:18,400
is symbol

157
00:06:15,759 --> 00:06:21,759
and since you have rules uh you have

158
00:06:18,400 --> 00:06:25,680
only two kinds of rules so you will you

159
00:06:21,759 --> 00:06:28,639
we can know that each symbol

160
00:06:25,680 --> 00:06:30,319
directly derives from some variable

161
00:06:28,639 --> 00:06:33,759
right for example

162
00:06:30,319 --> 00:06:35,360
uh let's say variable a1

163
00:06:33,759 --> 00:06:37,840
able a2

164
00:06:35,360 --> 00:06:39,840
variable a3

165
00:06:37,840 --> 00:06:42,160
and

166
00:06:39,840 --> 00:06:43,360
variable am right

167
00:06:42,160 --> 00:06:47,039
because

168
00:06:43,360 --> 00:06:51,280
the rule for the right the rule can let

169
00:06:47,039 --> 00:06:51,280
you have terminals only

170
00:06:52,800 --> 00:06:55,919
only are in this

171
00:06:56,160 --> 00:06:59,919
format

172
00:06:57,919 --> 00:07:01,599
then you can see that

173
00:06:59,919 --> 00:07:03,840
then

174
00:07:01,599 --> 00:07:03,840
the

175
00:07:06,240 --> 00:07:11,680
for the bottom side of the path three

176
00:07:09,039 --> 00:07:14,479
you will have one variable corresponding

177
00:07:11,680 --> 00:07:16,639
to one terminal according to

178
00:07:14,479 --> 00:07:20,240
this kind of rules

179
00:07:16,639 --> 00:07:23,120
right then you have quite limited

180
00:07:20,240 --> 00:07:26,240
situation for variable two variable

181
00:07:23,120 --> 00:07:28,800
because you have only this kind of rules

182
00:07:26,240 --> 00:07:31,280
one variable to two variables may become

183
00:07:28,800 --> 00:07:33,680
two verbal right

184
00:07:31,280 --> 00:07:37,360
so for example

185
00:07:33,680 --> 00:07:38,800
these two variables must be

186
00:07:37,360 --> 00:07:40,479
derived from one

187
00:07:38,800 --> 00:07:43,360
one variable or

188
00:07:40,479 --> 00:07:45,440
these two variables must be derived from

189
00:07:43,360 --> 00:07:46,240
one variable

190
00:07:45,440 --> 00:07:48,639
right

191
00:07:46,240 --> 00:07:49,680
so the possibilities are

192
00:07:48,639 --> 00:07:53,120
kind of

193
00:07:49,680 --> 00:07:55,360
fewer than if you don't limit the

194
00:07:53,120 --> 00:07:56,840
possible

195
00:07:55,360 --> 00:08:01,840
formats for the

196
00:07:56,840 --> 00:08:03,199
rules so by doing this we can

197
00:08:01,840 --> 00:08:05,199
push

198
00:08:03,199 --> 00:08:07,039
from bottom

199
00:08:05,199 --> 00:08:07,840
to top

200
00:08:07,039 --> 00:08:10,639
right

201
00:08:07,840 --> 00:08:13,440
so for example we can assume that uh

202
00:08:10,639 --> 00:08:14,879
okay these two

203
00:08:13,440 --> 00:08:15,759
if these two

204
00:08:14,879 --> 00:08:18,879
are

205
00:08:15,759 --> 00:08:22,000
from one variable then we see

206
00:08:18,879 --> 00:08:24,319
is is it possible to have this one

207
00:08:22,000 --> 00:08:24,319
or

208
00:08:25,520 --> 00:08:30,639
these two from one variable is it

209
00:08:27,919 --> 00:08:34,320
possible there is a variable like this

210
00:08:30,639 --> 00:08:35,279
and another variable becomes this one

211
00:08:34,320 --> 00:08:36,800
so

212
00:08:35,279 --> 00:08:40,919
c y k

213
00:08:36,800 --> 00:08:40,919
the c like algorithm

214
00:08:40,959 --> 00:08:47,040
tries to ex

215
00:08:43,519 --> 00:08:50,240
exploit this kind of relationship and

216
00:08:47,040 --> 00:08:53,200
working from bottom to top to see

217
00:08:50,240 --> 00:08:55,120
which variable in the given grammar can

218
00:08:53,200 --> 00:08:56,880
derive

219
00:08:55,120 --> 00:08:58,560
for some particular length of the

220
00:08:56,880 --> 00:09:00,480
terminal string

221
00:08:58,560 --> 00:09:02,720
okay

222
00:09:00,480 --> 00:09:02,720
so

223
00:09:03,760 --> 00:09:07,680
we will construct

224
00:09:06,160 --> 00:09:09,440
a table

225
00:09:07,680 --> 00:09:12,160
some like

226
00:09:09,440 --> 00:09:13,680
the uh like the one we show here

227
00:09:12,160 --> 00:09:16,560
and

228
00:09:13,680 --> 00:09:20,000
for the terminal string

229
00:09:16,560 --> 00:09:21,120
we separate the

230
00:09:20,000 --> 00:09:24,080
terminals

231
00:09:21,120 --> 00:09:25,440
okay so for this example we have a

232
00:09:24,080 --> 00:09:27,279
terminal string

233
00:09:25,440 --> 00:09:28,640
of length five

234
00:09:27,279 --> 00:09:34,080
so that would be

235
00:09:28,640 --> 00:09:35,040
five symbols a1 a2 a3 a4 and a5

236
00:09:34,080 --> 00:09:38,240
and then

237
00:09:35,040 --> 00:09:40,640
as i just explained

238
00:09:38,240 --> 00:09:42,000
because the given grammar is in chomsky

239
00:09:40,640 --> 00:09:43,920
normal form

240
00:09:42,000 --> 00:09:46,000
for each

241
00:09:43,920 --> 00:09:47,519
terminal symbol

242
00:09:46,000 --> 00:09:50,160
you will

243
00:09:47,519 --> 00:09:51,920
get that terminal symbol from exactly

244
00:09:50,160 --> 00:09:54,080
one variable

245
00:09:51,920 --> 00:09:56,959
uh i'm sorry not

246
00:09:54,080 --> 00:09:59,760
i mean that's terminal will be from one

247
00:09:56,959 --> 00:10:02,720
variable but that that variable will

248
00:09:59,760 --> 00:10:05,040
uh will probably not be unique variable

249
00:10:02,720 --> 00:10:07,839
in the grammar so

250
00:10:05,040 --> 00:10:11,040
we can

251
00:10:07,839 --> 00:10:14,160
put all variable

252
00:10:11,040 --> 00:10:15,920
which can derive a one

253
00:10:14,160 --> 00:10:19,839
in this

254
00:10:15,920 --> 00:10:23,040
box okay and for the same reason we put

255
00:10:19,839 --> 00:10:26,480
all variable that can derive

256
00:10:23,040 --> 00:10:30,240
a 2 in this box and then

257
00:10:26,480 --> 00:10:31,440
a 3 a 4 a 5

258
00:10:30,240 --> 00:10:34,959
right

259
00:10:31,440 --> 00:10:37,839
then you can think of this row for

260
00:10:34,959 --> 00:10:39,920
example we call it row one okay

261
00:10:37,839 --> 00:10:42,480
row one

262
00:10:39,920 --> 00:10:43,600
this row

263
00:10:42,480 --> 00:10:46,800
is

264
00:10:43,600 --> 00:10:47,839
responsible for deriving

265
00:10:46,800 --> 00:10:50,880
length

266
00:10:47,839 --> 00:10:51,680
a terminal string of length one

267
00:10:50,880 --> 00:10:52,480
right

268
00:10:51,680 --> 00:10:55,040
so

269
00:10:52,480 --> 00:10:55,040
let's say

270
00:10:55,440 --> 00:11:02,240
this box the variables in this box

271
00:11:00,320 --> 00:11:04,160
will be those

272
00:11:02,240 --> 00:11:06,000
which can derive

273
00:11:04,160 --> 00:11:09,200
a1

274
00:11:06,000 --> 00:11:11,680
and the variables in this box will be

275
00:11:09,200 --> 00:11:13,440
those which can derive

276
00:11:11,680 --> 00:11:15,200
a2 and

277
00:11:13,440 --> 00:11:16,640
this box

278
00:11:15,200 --> 00:11:19,200
a3

279
00:11:16,640 --> 00:11:20,720
etc okay

280
00:11:19,200 --> 00:11:21,760
a4

281
00:11:20,720 --> 00:11:24,079
and

282
00:11:21,760 --> 00:11:27,600
a5

283
00:11:24,079 --> 00:11:28,959
so that's the that's row 1

284
00:11:27,600 --> 00:11:31,519
then

285
00:11:28,959 --> 00:11:33,279
row 2

286
00:11:31,519 --> 00:11:36,959
will be what

287
00:11:33,279 --> 00:11:39,200
we want to have variables in this box

288
00:11:36,959 --> 00:11:42,240
which can derived

289
00:11:39,200 --> 00:11:43,920
which can derive

290
00:11:42,240 --> 00:11:46,640
terminal

291
00:11:43,920 --> 00:11:50,079
of length two terminal strings of length

292
00:11:46,640 --> 00:11:51,600
two like in this uh example that will be

293
00:11:50,079 --> 00:11:53,360
a1a2

294
00:11:51,600 --> 00:11:55,519
and we want to

295
00:11:53,360 --> 00:11:56,800
have variables in

296
00:11:55,519 --> 00:11:57,920
this box

297
00:11:56,800 --> 00:11:59,200
x

298
00:11:57,920 --> 00:12:00,639
23

299
00:11:59,200 --> 00:12:02,560
x 2 3

300
00:12:00,639 --> 00:12:04,800
to be able to

301
00:12:02,560 --> 00:12:07,519
derive

302
00:12:04,800 --> 00:12:08,800
a 2 a3

303
00:12:07,519 --> 00:12:12,480
okay

304
00:12:08,800 --> 00:12:15,279
and variables in this box

305
00:12:12,480 --> 00:12:17,519
derives

306
00:12:15,279 --> 00:12:20,240
a 3 a4

307
00:12:17,519 --> 00:12:23,959
the same goes to 4 5

308
00:12:20,240 --> 00:12:23,959
which is

309
00:12:24,800 --> 00:12:28,800
a4 a5

310
00:12:27,040 --> 00:12:30,880
yes a4a5

311
00:12:28,800 --> 00:12:33,200
okay

312
00:12:30,880 --> 00:12:34,959
so it looks like

313
00:12:33,200 --> 00:12:36,839
it will look like

314
00:12:34,959 --> 00:12:40,240
for row 1 we

315
00:12:36,839 --> 00:12:43,680
have variable deriving of these

316
00:12:40,240 --> 00:12:47,200
substring of the given terminal string

317
00:12:43,680 --> 00:12:48,320
and one two means we want to have

318
00:12:47,200 --> 00:12:51,360
variables

319
00:12:48,320 --> 00:12:52,880
we want to have variables

320
00:12:51,360 --> 00:12:53,920
able to

321
00:12:52,880 --> 00:12:56,480
give you

322
00:12:53,920 --> 00:12:58,880
one a one a two

323
00:12:56,480 --> 00:13:02,639
and the two three means we want to have

324
00:12:58,880 --> 00:13:04,480
variable able to give you a to a three

325
00:13:02,639 --> 00:13:07,440
so three four

326
00:13:04,480 --> 00:13:09,040
three four four five

327
00:13:07,440 --> 00:13:09,920
four five

328
00:13:09,040 --> 00:13:12,560
right

329
00:13:09,920 --> 00:13:16,000
so that's the responsibility for row one

330
00:13:12,560 --> 00:13:18,000
row two and for row three yes we want to

331
00:13:16,000 --> 00:13:20,560
have variables here

332
00:13:18,000 --> 00:13:23,120
be able to derive what

333
00:13:20,560 --> 00:13:24,800
a 1 a 2 a 3

334
00:13:23,120 --> 00:13:27,040
1 3 okay

335
00:13:24,800 --> 00:13:28,240
then 2 4

336
00:13:27,040 --> 00:13:30,079
a 1

337
00:13:28,240 --> 00:13:34,720
a 2

338
00:13:30,079 --> 00:13:35,600
sorry a 2 a 3 a 4 and a 3 5

339
00:13:34,720 --> 00:13:38,560
3

340
00:13:35,600 --> 00:13:42,160
5 that's row 3 okay so the same thing

341
00:13:38,560 --> 00:13:42,160
goes to 1 4

342
00:13:42,560 --> 00:13:46,480
1 2 3 4

343
00:13:45,199 --> 00:13:50,079
2 5

344
00:13:46,480 --> 00:13:53,279
2 three four five and that's the row

345
00:13:50,079 --> 00:13:55,920
four finally one five that's the whole

346
00:13:53,279 --> 00:13:56,880
given terminal strings

347
00:13:55,920 --> 00:13:59,360
okay

348
00:13:56,880 --> 00:14:03,519
then why we why why do we want to build

349
00:13:59,360 --> 00:14:04,480
this way because you can see that

350
00:14:03,519 --> 00:14:05,360
for

351
00:14:04,480 --> 00:14:07,360
the

352
00:14:05,360 --> 00:14:09,440
since we have only two

353
00:14:07,360 --> 00:14:12,000
kinds of rules in chongqing normal form

354
00:14:09,440 --> 00:14:13,680
context free grammar right so that the

355
00:14:12,000 --> 00:14:15,920
rule

356
00:14:13,680 --> 00:14:18,000
variable the rule regarding variable

357
00:14:15,920 --> 00:14:22,320
becomes variable is

358
00:14:18,000 --> 00:14:24,720
e r o in this form a becomes b c

359
00:14:22,320 --> 00:14:27,199
so consider that

360
00:14:24,720 --> 00:14:28,639
b some variable

361
00:14:27,199 --> 00:14:31,839
can derive

362
00:14:28,639 --> 00:14:31,839
a one

363
00:14:32,079 --> 00:14:37,519
let me use another

364
00:14:34,880 --> 00:14:37,519
color here

365
00:14:40,320 --> 00:14:46,800
consider the variable

366
00:14:43,680 --> 00:14:47,920
derived a1 that will be in here right

367
00:14:46,800 --> 00:14:50,800
possible

368
00:14:47,920 --> 00:14:53,279
variable bs are in here and the possible

369
00:14:50,800 --> 00:14:56,800
variable a's are in here

370
00:14:53,279 --> 00:14:59,800
then we can fill in this box

371
00:14:56,800 --> 00:14:59,800
with

372
00:15:00,399 --> 00:15:04,880
the variable able to

373
00:15:05,120 --> 00:15:07,680
derive

374
00:15:07,760 --> 00:15:10,639
b

375
00:15:08,399 --> 00:15:10,639
and

376
00:15:10,839 --> 00:15:14,880
c right

377
00:15:13,440 --> 00:15:18,079
and also

378
00:15:14,880 --> 00:15:20,639
for a13

379
00:15:18,079 --> 00:15:23,360
since a variable

380
00:15:20,639 --> 00:15:24,480
becomes two variables

381
00:15:23,360 --> 00:15:29,199
then

382
00:15:24,480 --> 00:15:32,880
if you want to fill in a 1 at x 1 3

383
00:15:29,199 --> 00:15:34,639
the variable in x1 suite of the box

384
00:15:32,880 --> 00:15:37,759
b made from

385
00:15:34,639 --> 00:15:39,440
x 1 1 c from

386
00:15:37,759 --> 00:15:41,440
x

387
00:15:39,440 --> 00:15:43,519
2 3

388
00:15:41,440 --> 00:15:45,920
right because

389
00:15:43,519 --> 00:15:47,440
some variable from x 1 3 becomes a

390
00:15:45,920 --> 00:15:50,639
variable in

391
00:15:47,440 --> 00:15:52,240
x 1 1 then it can become a 1

392
00:15:50,639 --> 00:15:53,120
then

393
00:15:52,240 --> 00:15:54,160
from

394
00:15:53,120 --> 00:15:57,360
uh

395
00:15:54,160 --> 00:15:58,959
another ver the other variable from x23

396
00:15:57,360 --> 00:16:01,519
then it may

397
00:15:58,959 --> 00:16:01,519
derive

398
00:16:01,600 --> 00:16:07,040
a2 and a3 then you can have a one two

399
00:16:05,519 --> 00:16:09,199
three

400
00:16:07,040 --> 00:16:12,480
and the other possibility in this case

401
00:16:09,199 --> 00:16:14,480
is that some variable from a

402
00:16:12,480 --> 00:16:17,279
x one two

403
00:16:14,480 --> 00:16:20,720
and the other from

404
00:16:17,279 --> 00:16:23,720
three three you also have a one a two a

405
00:16:20,720 --> 00:16:23,720
three

406
00:16:25,040 --> 00:16:29,920
that's why we build the table this way

407
00:16:27,360 --> 00:16:32,240
because we can

408
00:16:29,920 --> 00:16:34,240
we can have all possible

409
00:16:32,240 --> 00:16:37,519
all possibilities

410
00:16:34,240 --> 00:16:39,040
included in the procedure of cyk

411
00:16:37,519 --> 00:16:40,160
algorithm

412
00:16:39,040 --> 00:16:42,720
okay

413
00:16:40,160 --> 00:16:45,120
so the whole cyk algorithm

414
00:16:42,720 --> 00:16:47,360
looks like uh here

415
00:16:45,120 --> 00:16:50,399
firstly we build up

416
00:16:47,360 --> 00:16:51,360
we we draw an empty table

417
00:16:50,399 --> 00:16:53,680
then

418
00:16:51,360 --> 00:16:56,160
we use the first kind of

419
00:16:53,680 --> 00:16:56,160
rules

420
00:16:56,720 --> 00:17:04,000
a variable may become a terminal

421
00:17:00,720 --> 00:17:05,679
to fill up the bottom row that what i

422
00:17:04,000 --> 00:17:08,880
called row one

423
00:17:05,679 --> 00:17:08,880
then we use

424
00:17:08,959 --> 00:17:14,559
we use the second

425
00:17:11,919 --> 00:17:17,360
rules of the second kind to check all

426
00:17:14,559 --> 00:17:19,600
possibilities and the field into the

427
00:17:17,360 --> 00:17:22,000
corresponding box

428
00:17:19,600 --> 00:17:24,640
then we will know

429
00:17:22,000 --> 00:17:24,640
we will know

430
00:17:26,559 --> 00:17:34,000
which variable in that given grammar can

431
00:17:30,160 --> 00:17:36,480
derive some specific substrings of the

432
00:17:34,000 --> 00:17:37,840
given terminal string

433
00:17:36,480 --> 00:17:42,160
okay

434
00:17:37,840 --> 00:17:44,960
so you may not be familiar with how the

435
00:17:42,160 --> 00:17:47,840
basis induction step goes

436
00:17:44,960 --> 00:17:50,240
but let's take a look at the example

437
00:17:47,840 --> 00:17:51,919
then you will

438
00:17:50,240 --> 00:17:55,360
it should be quite

439
00:17:51,919 --> 00:17:56,240
clear how the cyk algorithm works

440
00:17:55,360 --> 00:17:58,559
okay

441
00:17:56,240 --> 00:17:58,559
so

442
00:17:58,640 --> 00:18:04,559
let's see we have uh

443
00:18:02,240 --> 00:18:06,320
uh we have a

444
00:18:04,559 --> 00:18:08,559
grammar here

445
00:18:06,320 --> 00:18:11,200
so uh let's check

446
00:18:08,559 --> 00:18:15,919
is the grammar in chomping normal phone

447
00:18:11,200 --> 00:18:17,520
firstly the grammar has s a b c five are

448
00:18:15,919 --> 00:18:19,600
four variables

449
00:18:17,520 --> 00:18:22,320
and there are

450
00:18:19,600 --> 00:18:23,280
eight rules

451
00:18:22,320 --> 00:18:25,679
and then

452
00:18:23,280 --> 00:18:28,799
all the rules are either in

453
00:18:25,679 --> 00:18:32,400
a variable may become two variable or a

454
00:18:28,799 --> 00:18:35,039
variable may become one terminal right

455
00:18:32,400 --> 00:18:37,280
and you can further check that there is

456
00:18:35,039 --> 00:18:38,320
no start variable

457
00:18:37,280 --> 00:18:40,400
on the

458
00:18:38,320 --> 00:18:43,360
body part

459
00:18:40,400 --> 00:18:46,400
so the grammar is no problem in

460
00:18:43,360 --> 00:18:46,400
chongqing normal phone

461
00:18:50,960 --> 00:18:56,360
then

462
00:18:53,039 --> 00:18:56,360
let's say

463
00:18:59,280 --> 00:19:05,679
the terminal string we want to check

464
00:19:02,559 --> 00:19:07,120
if this string in

465
00:19:05,679 --> 00:19:11,120
the language

466
00:19:07,120 --> 00:19:14,240
generated by this grammar or not is

467
00:19:11,120 --> 00:19:15,520
a b-a-a-b-a

468
00:19:14,240 --> 00:19:17,760
okay

469
00:19:15,520 --> 00:19:20,000
b-a-a-b-a

470
00:19:17,760 --> 00:19:20,000
then

471
00:19:22,840 --> 00:19:26,400
okay then

472
00:19:25,039 --> 00:19:28,640
firstly

473
00:19:26,400 --> 00:19:28,640
we

474
00:19:30,160 --> 00:19:35,760
have a table uh empty table

475
00:19:34,720 --> 00:19:38,799
then

476
00:19:35,760 --> 00:19:41,440
we separate all symbols of the

477
00:19:38,799 --> 00:19:42,240
given terminal string which is

478
00:19:41,440 --> 00:19:42,960
b

479
00:19:42,240 --> 00:19:44,400
a

480
00:19:42,960 --> 00:19:45,600
a b

481
00:19:44,400 --> 00:19:46,640
a

482
00:19:45,600 --> 00:19:48,080
right

483
00:19:46,640 --> 00:19:50,480
then

484
00:19:48,080 --> 00:19:52,640
for the

485
00:19:50,480 --> 00:19:53,679
for the basis

486
00:19:52,640 --> 00:19:55,520
step

487
00:19:53,679 --> 00:19:57,200
we just write

488
00:19:55,520 --> 00:19:59,840
any variable

489
00:19:57,200 --> 00:20:02,159
which can derive

490
00:19:59,840 --> 00:20:03,919
this terminal

491
00:20:02,159 --> 00:20:04,840
on

492
00:20:03,919 --> 00:20:07,760
into

493
00:20:04,840 --> 00:20:12,000
this into this

494
00:20:07,760 --> 00:20:14,960
box right and you can check only

495
00:20:12,000 --> 00:20:17,200
b can generate b

496
00:20:14,960 --> 00:20:17,200
so

497
00:20:18,640 --> 00:20:22,880
we write b

498
00:20:20,880 --> 00:20:24,000
in this box

499
00:20:22,880 --> 00:20:26,799
okay

500
00:20:24,000 --> 00:20:31,360
and for the same procedure

501
00:20:26,799 --> 00:20:33,520
we see we see that uh a can maybe count

502
00:20:31,360 --> 00:20:35,520
may become a c

503
00:20:33,520 --> 00:20:38,559
capital a may become

504
00:20:35,520 --> 00:20:40,799
terminal a and capital c variable c may

505
00:20:38,559 --> 00:20:41,679
become terminal a

506
00:20:40,799 --> 00:20:42,799
so

507
00:20:41,679 --> 00:20:43,760
we

508
00:20:42,799 --> 00:20:44,640
put

509
00:20:43,760 --> 00:20:45,520
a

510
00:20:44,640 --> 00:20:46,320
and

511
00:20:45,520 --> 00:20:48,480
c

512
00:20:46,320 --> 00:20:50,880
into the box

513
00:20:48,480 --> 00:20:53,039
right that means

514
00:20:50,880 --> 00:20:54,320
variable a

515
00:20:53,039 --> 00:20:55,679
may become

516
00:20:54,320 --> 00:20:59,200
a

517
00:20:55,679 --> 00:21:00,080
and also variable c may become a so this

518
00:20:59,200 --> 00:21:04,559
a

519
00:21:00,080 --> 00:21:06,720
this terminal a maybe from variable a or

520
00:21:04,559 --> 00:21:08,000
from variable c

521
00:21:06,720 --> 00:21:09,360
okay

522
00:21:08,000 --> 00:21:12,159
so

523
00:21:09,360 --> 00:21:13,280
here goes the same thing so a

524
00:21:12,159 --> 00:21:16,559
c

525
00:21:13,280 --> 00:21:18,000
and also here b and a

526
00:21:16,559 --> 00:21:19,840
c

527
00:21:18,000 --> 00:21:22,640
then we have finished

528
00:21:19,840 --> 00:21:22,640
row one here

529
00:21:22,720 --> 00:21:26,640
right so we know that for the given

530
00:21:25,200 --> 00:21:28,559
terminal string

531
00:21:26,640 --> 00:21:32,320
all

532
00:21:28,559 --> 00:21:34,000
substrings of length 1 we know how they

533
00:21:32,320 --> 00:21:37,760
can be derived

534
00:21:34,000 --> 00:21:40,000
by the given grammar by the given rules

535
00:21:37,760 --> 00:21:40,000
okay

536
00:21:40,320 --> 00:21:45,120
then

537
00:21:42,159 --> 00:21:48,400
we go into the induction steps so

538
00:21:45,120 --> 00:21:49,840
firstly we want to fill up row two

539
00:21:48,400 --> 00:21:51,760
right row two

540
00:21:49,840 --> 00:21:54,720
so what what uh

541
00:21:51,760 --> 00:21:56,240
what should uh row two boxes

542
00:21:54,720 --> 00:21:57,280
in row two

543
00:21:56,240 --> 00:21:59,280
do

544
00:21:57,280 --> 00:22:01,280
we want this

545
00:21:59,280 --> 00:22:04,000
box which is

546
00:22:01,280 --> 00:22:07,520
we want this box to be able to generate

547
00:22:04,000 --> 00:22:11,520
terminal string ba right

548
00:22:07,520 --> 00:22:13,360
and also this box to be able to generate

549
00:22:11,520 --> 00:22:14,720
terminal a a

550
00:22:13,360 --> 00:22:16,080
something like that

551
00:22:14,720 --> 00:22:20,080
okay so

552
00:22:16,080 --> 00:22:20,080
if we want to generate let's

553
00:22:20,159 --> 00:22:24,400
do the box

554
00:22:22,080 --> 00:22:26,960
x12 here first

555
00:22:24,400 --> 00:22:28,480
if we want to generate

556
00:22:26,960 --> 00:22:32,720
ba

557
00:22:28,480 --> 00:22:32,720
okay if we want to generate ba

558
00:22:33,120 --> 00:22:37,120
what should we

559
00:22:34,960 --> 00:22:38,240
what do we need

560
00:22:37,120 --> 00:22:42,720
since

561
00:22:38,240 --> 00:22:44,159
b can derive b right

562
00:22:42,720 --> 00:22:46,480
a

563
00:22:44,159 --> 00:22:47,760
can derived

564
00:22:46,480 --> 00:22:51,760
derives a

565
00:22:47,760 --> 00:22:51,760
and c also can derive a

566
00:22:52,720 --> 00:22:56,480
then we need something

567
00:22:56,960 --> 00:23:02,080
we need something derived va

568
00:23:00,400 --> 00:23:02,960
or bc

569
00:23:02,080 --> 00:23:06,159
right

570
00:23:02,960 --> 00:23:11,120
then we check up the body part of the

571
00:23:06,159 --> 00:23:12,720
grammar rule since all the rules

572
00:23:11,120 --> 00:23:15,520
are in the form of

573
00:23:12,720 --> 00:23:17,120
one variable may become two variables so

574
00:23:15,520 --> 00:23:20,400
we check ba

575
00:23:17,120 --> 00:23:21,280
so is there any ba here yes it is

576
00:23:20,400 --> 00:23:22,720
right

577
00:23:21,280 --> 00:23:26,080
so we

578
00:23:22,720 --> 00:23:29,039
know that a may become ba

579
00:23:26,080 --> 00:23:32,559
and we check b there's no b there's no b

580
00:23:29,039 --> 00:23:33,840
a out of in other rules right so a may

581
00:23:32,559 --> 00:23:38,000
become b a

582
00:23:33,840 --> 00:23:40,159
and let's check bc so we have okay bc

583
00:23:38,000 --> 00:23:42,320
here so as

584
00:23:40,159 --> 00:23:43,520
bc here

585
00:23:42,320 --> 00:23:45,279
right

586
00:23:43,520 --> 00:23:46,320
so that means

587
00:23:45,279 --> 00:23:48,240
in this

588
00:23:46,320 --> 00:23:49,600
in this grammar

589
00:23:48,240 --> 00:23:51,440
you may

590
00:23:49,600 --> 00:23:54,720
have a

591
00:23:51,440 --> 00:23:55,919
derived ba

592
00:23:54,720 --> 00:23:56,640
then

593
00:23:55,919 --> 00:23:58,880
b

594
00:23:56,640 --> 00:24:00,159
derive to b

595
00:23:58,880 --> 00:24:02,400
then

596
00:24:00,159 --> 00:24:05,600
a derive to a

597
00:24:02,400 --> 00:24:08,080
or you also can have

598
00:24:05,600 --> 00:24:09,440
s become b c

599
00:24:08,080 --> 00:24:11,200
and b

600
00:24:09,440 --> 00:24:11,919
may become

601
00:24:11,200 --> 00:24:15,440
b

602
00:24:11,919 --> 00:24:20,400
and the c become a

603
00:24:15,440 --> 00:24:22,080
okay so we put x oh sorry a and s into

604
00:24:20,400 --> 00:24:25,120
this box

605
00:24:22,080 --> 00:24:25,120
to indicate that

606
00:24:25,279 --> 00:24:30,559
by the given grammar from variables a

607
00:24:29,200 --> 00:24:31,840
or a

608
00:24:30,559 --> 00:24:34,240
or

609
00:24:31,840 --> 00:24:36,000
we can derived

610
00:24:34,240 --> 00:24:37,120
we can derive

611
00:24:36,000 --> 00:24:40,159
ba

612
00:24:37,120 --> 00:24:45,520
the terminal string ba okay

613
00:24:40,159 --> 00:24:46,880
so that's why we have s and a here

614
00:24:45,520 --> 00:24:51,120
okay

615
00:24:46,880 --> 00:24:51,120
so according to what we just discussed

616
00:24:51,200 --> 00:24:55,039
then for the same reason

617
00:24:53,600 --> 00:24:58,039
we want to

618
00:24:55,039 --> 00:24:58,039
have

619
00:25:01,600 --> 00:25:06,640
so we put

620
00:25:03,200 --> 00:25:08,880
s and a here

621
00:25:06,640 --> 00:25:12,240
and then for the same reason we want to

622
00:25:08,880 --> 00:25:16,080
have variables put in here

623
00:25:12,240 --> 00:25:19,279
which can generate which can derive

624
00:25:16,080 --> 00:25:21,200
substring of the terminal string a a

625
00:25:19,279 --> 00:25:22,559
okay row two

626
00:25:21,200 --> 00:25:23,679
length two

627
00:25:22,559 --> 00:25:26,159
okay

628
00:25:23,679 --> 00:25:26,159
from the

629
00:25:26,960 --> 00:25:30,000
position

630
00:25:28,480 --> 00:25:33,520
then

631
00:25:30,000 --> 00:25:36,320
we know that a can generates a

632
00:25:33,520 --> 00:25:39,360
c also can generate a right

633
00:25:36,320 --> 00:25:40,960
so we pair up all the possibilities so

634
00:25:39,360 --> 00:25:42,400
we will have

635
00:25:40,960 --> 00:25:43,840
we will

636
00:25:42,400 --> 00:25:46,240
want to check

637
00:25:43,840 --> 00:25:48,159
what variable can generate a

638
00:25:46,240 --> 00:25:50,720
a

639
00:25:48,159 --> 00:25:53,120
a c

640
00:25:50,720 --> 00:25:55,039
c a

641
00:25:53,120 --> 00:25:59,120
c c

642
00:25:55,039 --> 00:26:01,039
right so there are four possibilities

643
00:25:59,120 --> 00:26:04,960
then we check the uh

644
00:26:01,039 --> 00:26:06,240
body of the all the rules to c a a a c c

645
00:26:04,960 --> 00:26:07,200
a c c

646
00:26:06,240 --> 00:26:09,440
right

647
00:26:07,200 --> 00:26:11,360
so there's no a a

648
00:26:09,440 --> 00:26:15,840
there is no ac

649
00:26:11,360 --> 00:26:18,799
there is no ca only cc right so which

650
00:26:15,840 --> 00:26:20,240
one this one and we know that b

651
00:26:18,799 --> 00:26:21,440
may become

652
00:26:20,240 --> 00:26:25,919
cc

653
00:26:21,440 --> 00:26:27,600
so we write b we put b into the box that

654
00:26:25,919 --> 00:26:29,600
means

655
00:26:27,600 --> 00:26:31,440
from the variable of the grammar from

656
00:26:29,600 --> 00:26:35,440
the variable from variable b of the

657
00:26:31,440 --> 00:26:38,720
grammar it can derive c c

658
00:26:35,440 --> 00:26:41,760
and c can become a

659
00:26:38,720 --> 00:26:44,000
and the other c become a

660
00:26:41,760 --> 00:26:44,000
so

661
00:26:44,240 --> 00:26:48,880
variable b

662
00:26:46,240 --> 00:26:53,039
may derive terminal string a a

663
00:26:48,880 --> 00:26:54,080
so we put b in that box

664
00:26:53,039 --> 00:26:56,400
like

665
00:26:54,080 --> 00:26:56,400
this

666
00:26:56,559 --> 00:26:59,120
okay b

667
00:26:57,840 --> 00:27:01,520
can have

668
00:26:59,120 --> 00:27:01,520
a a

669
00:27:02,720 --> 00:27:06,159
then

670
00:27:03,600 --> 00:27:07,360
same thing goes on we want to have a

671
00:27:06,159 --> 00:27:09,440
variables

672
00:27:07,360 --> 00:27:11,679
in this box

673
00:27:09,440 --> 00:27:13,840
we want to have variables in this box

674
00:27:11,679 --> 00:27:15,440
which can derive

675
00:27:13,840 --> 00:27:20,039
a b

676
00:27:15,440 --> 00:27:20,039
okay from here that's two

677
00:27:21,360 --> 00:27:27,360
then we know a may become a c may become

678
00:27:25,039 --> 00:27:29,200
a and the b may become b

679
00:27:27,360 --> 00:27:30,399
so we want to check

680
00:27:29,200 --> 00:27:32,640
for uh

681
00:27:30,399 --> 00:27:36,320
for the given grammar

682
00:27:32,640 --> 00:27:38,399
is there any variable may become a b

683
00:27:36,320 --> 00:27:39,279
and

684
00:27:38,399 --> 00:27:41,840
and

685
00:27:39,279 --> 00:27:41,840
c b

686
00:27:42,000 --> 00:27:45,039
right

687
00:27:43,679 --> 00:27:48,480
so for a b

688
00:27:45,039 --> 00:27:51,200
there are two variables right s

689
00:27:48,480 --> 00:27:54,159
so s may become

690
00:27:51,200 --> 00:27:56,960
a b c may become a b

691
00:27:54,159 --> 00:27:59,279
and for c b there is no c b on the right

692
00:27:56,960 --> 00:28:02,640
hand side so no c b

693
00:27:59,279 --> 00:28:03,600
so we put

694
00:28:02,640 --> 00:28:06,799
s

695
00:28:03,600 --> 00:28:10,080
and c here

696
00:28:06,799 --> 00:28:13,520
okay so that means x may become a b and

697
00:28:10,080 --> 00:28:18,640
a become a b become b or c may become a

698
00:28:13,520 --> 00:28:20,159
b and a become a b becomes b

699
00:28:18,640 --> 00:28:23,600
okay

700
00:28:20,159 --> 00:28:26,799
then for the last

701
00:28:23,600 --> 00:28:28,960
for the last box of row two

702
00:28:26,799 --> 00:28:31,360
same thing goes to ba

703
00:28:28,960 --> 00:28:33,679
and we actually have filled up that so

704
00:28:31,360 --> 00:28:33,679
that's

705
00:28:33,760 --> 00:28:38,640
sa

706
00:28:35,679 --> 00:28:41,919
right it's the same ba so ba the same

707
00:28:38,640 --> 00:28:43,039
terminal string so actually that

708
00:28:41,919 --> 00:28:45,200
well

709
00:28:43,039 --> 00:28:48,960
i shouldn't say that we need to do that

710
00:28:45,200 --> 00:28:48,960
again too so ba

711
00:28:49,120 --> 00:28:54,720
bc

712
00:28:50,640 --> 00:28:57,440
and no bc and ba 4a

713
00:28:54,720 --> 00:28:58,640
sorry bc here so s

714
00:28:57,440 --> 00:29:00,000
so sa

715
00:28:58,640 --> 00:29:03,440
okay

716
00:29:00,000 --> 00:29:03,440
so that's probably

717
00:29:03,840 --> 00:29:07,039
it

718
00:29:05,120 --> 00:29:08,320
for row two

719
00:29:07,039 --> 00:29:09,919
okay

720
00:29:08,320 --> 00:29:13,200
then

721
00:29:09,919 --> 00:29:16,559
after row two we know we

722
00:29:13,200 --> 00:29:19,120
we now know all the variables in this

723
00:29:16,559 --> 00:29:19,840
given grammar which can generate

724
00:29:19,120 --> 00:29:22,799
the

725
00:29:19,840 --> 00:29:24,399
substrings of the given terminal string

726
00:29:22,799 --> 00:29:26,399
of length 2

727
00:29:24,399 --> 00:29:28,399
right substrings of length two of the

728
00:29:26,399 --> 00:29:31,200
given terminal strings

729
00:29:28,399 --> 00:29:33,760
then we continue to build up

730
00:29:31,200 --> 00:29:34,720
row three here

731
00:29:33,760 --> 00:29:36,880
okay

732
00:29:34,720 --> 00:29:39,360
then for row three here

733
00:29:36,880 --> 00:29:41,520
what do we want

734
00:29:39,360 --> 00:29:43,360
in

735
00:29:41,520 --> 00:29:46,240
this box

736
00:29:43,360 --> 00:29:48,880
we want to have variables

737
00:29:46,240 --> 00:29:52,399
in the given grammar

738
00:29:48,880 --> 00:29:52,399
which can generate

739
00:29:52,480 --> 00:29:56,799
from the first position here of

740
00:29:55,279 --> 00:29:58,559
lens three

741
00:29:56,799 --> 00:30:00,399
okay

742
00:29:58,559 --> 00:30:02,159
lens three

743
00:30:00,399 --> 00:30:05,600
and four length three

744
00:30:02,159 --> 00:30:09,600
they unlike length two two you have one

745
00:30:05,600 --> 00:30:12,320
plus one but for lens 3 you need to

746
00:30:09,600 --> 00:30:16,240
consider 1 plus 2

747
00:30:12,320 --> 00:30:19,520
or 2 plus 1. why because one variable

748
00:30:16,240 --> 00:30:22,240
can only generate two variables

749
00:30:19,520 --> 00:30:23,919
if you need to have a terminal string of

750
00:30:22,240 --> 00:30:26,720
length three

751
00:30:23,919 --> 00:30:29,440
then you must have one variable becomes

752
00:30:26,720 --> 00:30:30,960
two variable and the one of the variable

753
00:30:29,440 --> 00:30:32,240
becomes two

754
00:30:30,960 --> 00:30:34,320
variable

755
00:30:32,240 --> 00:30:38,159
again then you have three

756
00:30:34,320 --> 00:30:41,039
okay so first possibility is that

757
00:30:38,159 --> 00:30:42,640
one and two so

758
00:30:41,039 --> 00:30:45,760
for the three

759
00:30:42,640 --> 00:30:45,760
terminals here

760
00:30:46,000 --> 00:30:52,159
we want to check up

761
00:30:49,039 --> 00:30:52,960
1 plus 2

762
00:30:52,159 --> 00:30:54,159
and

763
00:30:52,960 --> 00:30:55,360
2

764
00:30:54,159 --> 00:30:56,159
plus

765
00:30:55,360 --> 00:30:57,679
1

766
00:30:56,159 --> 00:30:58,960
two possibilities

767
00:30:57,679 --> 00:31:01,760
right

768
00:30:58,960 --> 00:31:03,519
and for 1 plus 2

769
00:31:01,760 --> 00:31:05,760
what is 1 here

770
00:31:03,519 --> 00:31:09,120
what is one here

771
00:31:05,760 --> 00:31:11,679
one here is this box

772
00:31:09,120 --> 00:31:14,960
all this two here

773
00:31:11,679 --> 00:31:17,120
two here is this box right

774
00:31:14,960 --> 00:31:19,200
so we want to see

775
00:31:17,120 --> 00:31:22,320
if it is possible

776
00:31:19,200 --> 00:31:22,320
if it is possible

777
00:31:22,640 --> 00:31:25,279
to have

778
00:31:25,519 --> 00:31:30,640
some variable becomes bb

779
00:31:29,279 --> 00:31:33,600
right

780
00:31:30,640 --> 00:31:37,440
let's say if it is possible

781
00:31:33,600 --> 00:31:39,919
then we can know that first b

782
00:31:37,440 --> 00:31:42,399
may derived b

783
00:31:39,919 --> 00:31:44,320
and then second b

784
00:31:42,399 --> 00:31:48,720
may derived

785
00:31:44,320 --> 00:31:51,519
what uh what is in this case a a a b c a

786
00:31:48,720 --> 00:31:53,440
c c okay maybe comes c c

787
00:31:51,519 --> 00:31:57,120
then

788
00:31:53,440 --> 00:31:58,320
the both c becomes a that's what we want

789
00:31:57,120 --> 00:32:02,399
right

790
00:31:58,320 --> 00:32:04,960
if some variable can generate bb

791
00:32:02,399 --> 00:32:06,320
okay so that's one plus two

792
00:32:04,960 --> 00:32:07,600
one

793
00:32:06,320 --> 00:32:09,919
and

794
00:32:07,600 --> 00:32:09,919
two

795
00:32:10,000 --> 00:32:14,080
okay

796
00:32:11,200 --> 00:32:15,919
so let's check if the any right hand

797
00:32:14,080 --> 00:32:18,000
side of any rule have

798
00:32:15,919 --> 00:32:20,159
bb

799
00:32:18,000 --> 00:32:23,039
okay the answer is no

800
00:32:20,159 --> 00:32:25,279
so we don't have any variables in this

801
00:32:23,039 --> 00:32:27,279
grammar which can generate

802
00:32:25,279 --> 00:32:30,159
bb then

803
00:32:27,279 --> 00:32:32,720
after derivations we got baa

804
00:32:30,159 --> 00:32:36,640
okay it's a dead end here

805
00:32:32,720 --> 00:32:37,840
let's say the other possibility is 2

806
00:32:36,640 --> 00:32:38,799
1

807
00:32:37,840 --> 00:32:43,360
right

808
00:32:38,799 --> 00:32:48,080
2 1 then what is 2 2 is here

809
00:32:43,360 --> 00:32:49,600
and what is 1 1 is here right

810
00:32:48,080 --> 00:32:52,159
so the same

811
00:32:49,600 --> 00:32:52,159
argument

812
00:32:52,240 --> 00:32:57,120
if we would like to have possibly let's

813
00:32:56,000 --> 00:32:59,279
say

814
00:32:57,120 --> 00:33:01,279
a's a

815
00:32:59,279 --> 00:33:02,159
s c

816
00:33:01,279 --> 00:33:03,760
a

817
00:33:02,159 --> 00:33:06,399
a

818
00:33:03,760 --> 00:33:07,760
a c

819
00:33:06,399 --> 00:33:12,399
right

820
00:33:07,760 --> 00:33:13,919
if let's say if we have a a here if

821
00:33:12,399 --> 00:33:17,120
then

822
00:33:13,919 --> 00:33:19,120
we know that the first a can

823
00:33:17,120 --> 00:33:19,840
have

824
00:33:19,120 --> 00:33:20,960
b

825
00:33:19,840 --> 00:33:23,440
a

826
00:33:20,960 --> 00:33:25,440
okay the first a b a

827
00:33:23,440 --> 00:33:26,960
so that's two plus one what i said two

828
00:33:25,440 --> 00:33:29,600
plus one yes

829
00:33:26,960 --> 00:33:33,039
then the first b becomes b

830
00:33:29,600 --> 00:33:33,039
second a becomes

831
00:33:33,840 --> 00:33:40,960
second a becomes a and the final a

832
00:33:37,200 --> 00:33:43,840
becomes a then we have baa

833
00:33:40,960 --> 00:33:46,559
but unfortunately you can see that there

834
00:33:43,840 --> 00:33:47,760
is there is no rule

835
00:33:46,559 --> 00:33:50,240
there's

836
00:33:47,760 --> 00:33:51,679
no rules right hand side

837
00:33:50,240 --> 00:33:54,559
generate

838
00:33:51,679 --> 00:33:56,000
the four combinations here

839
00:33:54,559 --> 00:33:58,000
okay

840
00:33:56,000 --> 00:33:59,919
and actually you can know that it's part

841
00:33:58,000 --> 00:34:03,120
impossible for these two

842
00:33:59,919 --> 00:34:03,120
why because

843
00:34:03,200 --> 00:34:07,919
for our chomsky normal phone

844
00:34:05,440 --> 00:34:11,040
start variable cannot be in the right

845
00:34:07,919 --> 00:34:11,919
hand side in the body part of the rules

846
00:34:11,040 --> 00:34:13,280
right

847
00:34:11,919 --> 00:34:15,000
so you check

848
00:34:13,280 --> 00:34:17,200
anyway

849
00:34:15,000 --> 00:34:19,839
s-a-a-s-e-a-a-c there's no rule

850
00:34:17,200 --> 00:34:21,119
generated from one variable to these two

851
00:34:19,839 --> 00:34:22,560
variables

852
00:34:21,119 --> 00:34:26,000
so

853
00:34:22,560 --> 00:34:29,359
unfortunately we have nothing here okay

854
00:34:26,000 --> 00:34:32,159
that's nothing that means for the given

855
00:34:29,359 --> 00:34:34,960
grammar it is impossible from any

856
00:34:32,159 --> 00:34:36,000
variable not only start variable any

857
00:34:34,960 --> 00:34:36,800
variable

858
00:34:36,000 --> 00:34:38,399
can

859
00:34:36,800 --> 00:34:41,119
derive b

860
00:34:38,399 --> 00:34:43,679
a a that's impossible for this grammar

861
00:34:41,119 --> 00:34:45,359
from any variable not only the star

862
00:34:43,679 --> 00:34:47,520
variable

863
00:34:45,359 --> 00:34:49,119
okay

864
00:34:47,520 --> 00:34:52,079
then let's say

865
00:34:49,119 --> 00:34:54,240
what do we want to have in this box we

866
00:34:52,079 --> 00:35:00,079
want to have the variables which can

867
00:34:54,240 --> 00:35:00,079
generate the terminal string a a b

868
00:35:00,160 --> 00:35:05,599
okay so one plus two or two plus one so

869
00:35:03,200 --> 00:35:09,599
that's a one plus two

870
00:35:05,599 --> 00:35:12,880
for one plus two we need to look at this

871
00:35:09,599 --> 00:35:14,400
box and this box right

872
00:35:12,880 --> 00:35:16,960
because

873
00:35:14,400 --> 00:35:20,079
this box generates one

874
00:35:16,960 --> 00:35:22,240
these box generate two

875
00:35:20,079 --> 00:35:22,240
so

876
00:35:22,400 --> 00:35:27,200
let's

877
00:35:23,440 --> 00:35:29,599
have four pairs here a s

878
00:35:27,200 --> 00:35:31,599
a c

879
00:35:29,599 --> 00:35:32,960
c s

880
00:35:31,599 --> 00:35:34,240
c c

881
00:35:32,960 --> 00:35:38,320
right

882
00:35:34,240 --> 00:35:39,359
then again if let's just say if there is

883
00:35:38,320 --> 00:35:42,160
a

884
00:35:39,359 --> 00:35:44,320
some some variable can generate a c c

885
00:35:42,160 --> 00:35:48,160
for example cc

886
00:35:44,320 --> 00:35:52,480
then from cc we have we can

887
00:35:48,160 --> 00:35:56,000
we can have the first c derives a usa

888
00:35:52,480 --> 00:35:57,200
right and the second c

889
00:35:56,000 --> 00:35:59,359
second c

890
00:35:57,200 --> 00:36:00,240
may have may become

891
00:35:59,359 --> 00:36:02,640
that's

892
00:36:00,240 --> 00:36:03,680
one stable at a time

893
00:36:02,640 --> 00:36:05,440
then

894
00:36:03,680 --> 00:36:07,839
the second c

895
00:36:05,440 --> 00:36:10,800
derives a b

896
00:36:07,839 --> 00:36:14,240
then the first a derives a

897
00:36:10,800 --> 00:36:17,280
and the second a derives b then we will

898
00:36:14,240 --> 00:36:20,079
have this one okay so let's check the

899
00:36:17,280 --> 00:36:24,640
right hand side of all rules to see

900
00:36:20,079 --> 00:36:27,440
any rules can derive asc cscc

901
00:36:24,640 --> 00:36:29,680
but as we just described

902
00:36:27,440 --> 00:36:30,640
for chomsky normal phone actually we

903
00:36:29,680 --> 00:36:32,880
don't

904
00:36:30,640 --> 00:36:33,920
need to check this one and this one

905
00:36:32,880 --> 00:36:36,400
right

906
00:36:33,920 --> 00:36:40,079
because star variable cannot be on the

907
00:36:36,400 --> 00:36:44,079
right hand side so let's check ac and cc

908
00:36:40,079 --> 00:36:46,160
and there's no rules generating ac

909
00:36:44,079 --> 00:36:50,480
right but we have

910
00:36:46,160 --> 00:36:52,320
b may become cc here yes so we know b

911
00:36:50,480 --> 00:36:56,240
can derive cc

912
00:36:52,320 --> 00:36:57,680
so we write b in this part

913
00:36:56,240 --> 00:37:01,119
okay

914
00:36:57,680 --> 00:37:03,920
so that's the one plus two we still need

915
00:37:01,119 --> 00:37:08,920
to finish two plus one right

916
00:37:03,920 --> 00:37:08,920
so for two plus one what is

917
00:37:10,160 --> 00:37:17,200
2 plus 1 what is we already have b here

918
00:37:13,440 --> 00:37:18,000
and what is 2 here 2 here is this one

919
00:37:17,200 --> 00:37:20,480
and

920
00:37:18,000 --> 00:37:23,040
1 here is this one

921
00:37:20,480 --> 00:37:24,640
so we want to see if there is any bb

922
00:37:23,040 --> 00:37:26,000
here

923
00:37:24,640 --> 00:37:27,920
if

924
00:37:26,000 --> 00:37:30,800
there

925
00:37:27,920 --> 00:37:32,720
there is some rule generating bbe

926
00:37:30,800 --> 00:37:34,560
same we can use

927
00:37:32,720 --> 00:37:36,320
the first b

928
00:37:34,560 --> 00:37:38,560
to have cc

929
00:37:36,320 --> 00:37:40,640
that's we already know it's there are

930
00:37:38,560 --> 00:37:41,520
rules for this right

931
00:37:40,640 --> 00:37:42,800
then

932
00:37:41,520 --> 00:37:45,839
let's say

933
00:37:42,800 --> 00:37:48,320
after derivation first c become a second

934
00:37:45,839 --> 00:37:51,520
c become a lets b

935
00:37:48,320 --> 00:37:56,079
become b that's what we want but there

936
00:37:51,520 --> 00:37:58,320
is no rule generating bb so no rule

937
00:37:56,079 --> 00:37:58,320
then

938
00:37:59,440 --> 00:38:05,359
after all we have

939
00:38:01,839 --> 00:38:07,200
nothing here b here right that's what we

940
00:38:05,359 --> 00:38:08,880
have now

941
00:38:07,200 --> 00:38:11,280
then

942
00:38:08,880 --> 00:38:12,720
for row 3

943
00:38:11,280 --> 00:38:14,720
we have one

944
00:38:12,720 --> 00:38:16,320
we have one more

945
00:38:14,720 --> 00:38:17,119
box to go

946
00:38:16,320 --> 00:38:19,359
which

947
00:38:17,119 --> 00:38:20,400
generates a b a

948
00:38:19,359 --> 00:38:23,359
okay

949
00:38:20,400 --> 00:38:24,320
so again one plus two

950
00:38:23,359 --> 00:38:25,920
and

951
00:38:24,320 --> 00:38:29,200
two plus one

952
00:38:25,920 --> 00:38:31,440
so one plus two we one we look at this

953
00:38:29,200 --> 00:38:33,839
one and the two this one

954
00:38:31,440 --> 00:38:35,280
right so

955
00:38:33,839 --> 00:38:37,520
a s

956
00:38:35,280 --> 00:38:40,320
a a

957
00:38:37,520 --> 00:38:40,320
c s

958
00:38:41,359 --> 00:38:47,520
c a

959
00:38:43,359 --> 00:38:50,880
a s a a c s c a right and we don't need

960
00:38:47,520 --> 00:38:53,040
to look at this one and this one because

961
00:38:50,880 --> 00:38:54,960
there's no star star variable on the

962
00:38:53,040 --> 00:38:58,240
right hand side of rules

963
00:38:54,960 --> 00:38:59,119
so so for a a and c a

964
00:38:58,240 --> 00:39:01,040
okay

965
00:38:59,119 --> 00:39:03,680
aa there's no aa

966
00:39:01,040 --> 00:39:07,280
and the ca there's no ca okay so there's

967
00:39:03,680 --> 00:39:10,960
no variable going through one plus two

968
00:39:07,280 --> 00:39:12,400
style to generate aba

969
00:39:10,960 --> 00:39:13,680
right

970
00:39:12,400 --> 00:39:15,839
then

971
00:39:13,680 --> 00:39:18,320
let's check two plus one

972
00:39:15,839 --> 00:39:19,280
so what is two plus one that will be two

973
00:39:18,320 --> 00:39:20,079
here

974
00:39:19,280 --> 00:39:22,880
just

975
00:39:20,079 --> 00:39:27,200
which can generate the two here right

976
00:39:22,880 --> 00:39:30,160
and one here which can generate one here

977
00:39:27,200 --> 00:39:30,160
so that would be

978
00:39:31,040 --> 00:39:35,440
s a

979
00:39:33,599 --> 00:39:36,720
s c

980
00:39:35,440 --> 00:39:38,079
c a

981
00:39:36,720 --> 00:39:41,440
c c

982
00:39:38,079 --> 00:39:44,240
again no need to check s a s c because

983
00:39:41,440 --> 00:39:48,160
no star variable on the right hand side

984
00:39:44,240 --> 00:39:50,079
and for ca no ca but we have b

985
00:39:48,160 --> 00:39:50,960
may become cc

986
00:39:50,079 --> 00:39:51,680
right

987
00:39:50,960 --> 00:39:54,240
so

988
00:39:51,680 --> 00:39:56,560
that's what we want b

989
00:39:54,240 --> 00:39:57,520
derives cc

990
00:39:56,560 --> 00:40:00,880
and

991
00:39:57,520 --> 00:40:03,920
2 plus 1 right so the first c

992
00:40:00,880 --> 00:40:03,920
further becomes

993
00:40:08,560 --> 00:40:11,800
a b

994
00:40:11,839 --> 00:40:17,440
then the first a becomes a

995
00:40:14,960 --> 00:40:20,640
and second b becomes b

996
00:40:17,440 --> 00:40:23,280
uh the last c becomes a so that's what

997
00:40:20,640 --> 00:40:25,680
we want so

998
00:40:23,280 --> 00:40:28,000
so we can have b here

999
00:40:25,680 --> 00:40:28,000
okay

1000
00:40:28,400 --> 00:40:30,960
so now

1001
00:40:30,000 --> 00:40:34,000
after

1002
00:40:30,960 --> 00:40:36,160
the finish of row 3 we know that

1003
00:40:34,000 --> 00:40:38,800
from the gram of b

1004
00:40:36,160 --> 00:40:42,800
from the variable b in the grammar

1005
00:40:38,800 --> 00:40:44,720
it is possible that b after some steps

1006
00:40:42,800 --> 00:40:47,760
of derivations

1007
00:40:44,720 --> 00:40:47,760
can generate

1008
00:40:49,040 --> 00:40:50,839
a

1009
00:40:50,000 --> 00:40:53,040
a

1010
00:40:50,839 --> 00:40:55,760
b and

1011
00:40:53,040 --> 00:40:59,040
by using another

1012
00:40:55,760 --> 00:41:02,960
sequence of derivation it can generate

1013
00:40:59,040 --> 00:41:04,000
a e b a right these two

1014
00:41:02,960 --> 00:41:06,560
and

1015
00:41:04,000 --> 00:41:08,960
tracing back to how we construct the

1016
00:41:06,560 --> 00:41:12,079
entry how we put the entries into the

1017
00:41:08,960 --> 00:41:14,079
table we know we actually know

1018
00:41:12,079 --> 00:41:17,119
little that derivation

1019
00:41:14,079 --> 00:41:19,520
right that's the interesting part of

1020
00:41:17,119 --> 00:41:22,079
cyk algorithm

1021
00:41:19,520 --> 00:41:25,760
okay so let's go on to finish the whole

1022
00:41:22,079 --> 00:41:26,880
thing so row 4 what is row 4 here

1023
00:41:25,760 --> 00:41:28,319
for

1024
00:41:26,880 --> 00:41:30,640
the

1025
00:41:28,319 --> 00:41:30,640
sorry

1026
00:41:32,480 --> 00:41:37,119
for the box here

1027
00:41:34,800 --> 00:41:38,880
we want to have

1028
00:41:37,119 --> 00:41:41,280
variables in the grammar which can

1029
00:41:38,880 --> 00:41:42,640
generate

1030
00:41:41,280 --> 00:41:45,760
a

1031
00:41:42,640 --> 00:41:48,400
oh sorry b a a b length of four

1032
00:41:45,760 --> 00:41:50,160
and four four there will be three

1033
00:41:48,400 --> 00:41:53,839
possibilities

1034
00:41:50,160 --> 00:41:57,040
one plus three right and the two plus

1035
00:41:53,839 --> 00:41:58,800
two or three plus one three

1036
00:41:57,040 --> 00:42:02,720
possibilities

1037
00:41:58,800 --> 00:42:04,400
so for the first possibility 1 plus 3 we

1038
00:42:02,720 --> 00:42:05,760
already have the data

1039
00:42:04,400 --> 00:42:07,119
in the

1040
00:42:05,760 --> 00:42:08,720
table right

1041
00:42:07,119 --> 00:42:10,319
so

1042
00:42:08,720 --> 00:42:11,359
1

1043
00:42:10,319 --> 00:42:12,400
plus

1044
00:42:11,359 --> 00:42:13,440
3

1045
00:42:12,400 --> 00:42:15,280
here

1046
00:42:13,440 --> 00:42:17,680
right so we just need to check

1047
00:42:15,280 --> 00:42:20,160
if there is any variable

1048
00:42:17,680 --> 00:42:23,760
may become bb

1049
00:42:20,160 --> 00:42:24,720
again if there is if there is what we

1050
00:42:23,760 --> 00:42:28,160
want

1051
00:42:24,720 --> 00:42:29,440
what we will have is the first b becomes

1052
00:42:28,160 --> 00:42:30,640
b

1053
00:42:29,440 --> 00:42:32,240
right

1054
00:42:30,640 --> 00:42:35,119
then

1055
00:42:32,240 --> 00:42:35,119
the second b

1056
00:42:36,880 --> 00:42:40,720
becomes

1057
00:42:38,960 --> 00:42:44,240
derives

1058
00:42:40,720 --> 00:42:45,119
a a b that's one plus 3

1059
00:42:44,240 --> 00:42:46,720
right

1060
00:42:45,119 --> 00:42:48,400
but

1061
00:42:46,720 --> 00:42:49,520
there's no

1062
00:42:48,400 --> 00:42:52,640
rules

1063
00:42:49,520 --> 00:42:54,319
generates bb so

1064
00:42:52,640 --> 00:42:56,079
not working here

1065
00:42:54,319 --> 00:42:57,520
then let's check

1066
00:42:56,079 --> 00:43:00,079
2 plus 2.

1067
00:42:57,520 --> 00:43:01,200
okay so what is two plus two

1068
00:43:00,079 --> 00:43:02,560
that would be

1069
00:43:01,200 --> 00:43:04,800
two

1070
00:43:02,560 --> 00:43:06,319
plus

1071
00:43:04,800 --> 00:43:07,359
two

1072
00:43:06,319 --> 00:43:10,880
okay

1073
00:43:07,359 --> 00:43:14,720
two plus two so we need to see

1074
00:43:10,880 --> 00:43:17,119
ss right s c

1075
00:43:14,720 --> 00:43:17,920
a s

1076
00:43:17,119 --> 00:43:20,160
a

1077
00:43:17,920 --> 00:43:20,160
c

1078
00:43:21,040 --> 00:43:29,280
and there's no need to check ss s c s

1079
00:43:25,440 --> 00:43:32,319
right because uh again stars variable

1080
00:43:29,280 --> 00:43:34,160
will not be on the right hand side so we

1081
00:43:32,319 --> 00:43:35,359
need to check

1082
00:43:34,160 --> 00:43:38,319
ac

1083
00:43:35,359 --> 00:43:39,520
but there's no ac here there's no ac

1084
00:43:38,319 --> 00:43:40,560
here so

1085
00:43:39,520 --> 00:43:45,119
nothing

1086
00:43:40,560 --> 00:43:50,000
no rule in this grammar able to generate

1087
00:43:45,119 --> 00:43:53,119
ac or two plus two b a a b right

1088
00:43:50,000 --> 00:43:54,400
then finally three plus one

1089
00:43:53,119 --> 00:43:56,560
3

1090
00:43:54,400 --> 00:43:58,480
plus

1091
00:43:56,560 --> 00:44:01,680
1 here

1092
00:43:58,480 --> 00:44:04,800
and you know it doesn't work why because

1093
00:44:01,680 --> 00:44:06,960
no variable in this grammar may generate

1094
00:44:04,800 --> 00:44:11,520
this substring

1095
00:44:06,960 --> 00:44:13,760
so finally we have nothing here

1096
00:44:11,520 --> 00:44:15,359
we have nothing here

1097
00:44:13,760 --> 00:44:17,920
that means

1098
00:44:15,359 --> 00:44:17,920
that means

1099
00:44:18,079 --> 00:44:22,640
for this given grammar

1100
00:44:20,000 --> 00:44:26,240
any variable not only the star variable

1101
00:44:22,640 --> 00:44:28,079
from any variable it is impossible to

1102
00:44:26,240 --> 00:44:28,800
generate b

1103
00:44:28,079 --> 00:44:29,920
a

1104
00:44:28,800 --> 00:44:33,119
a b

1105
00:44:29,920 --> 00:44:34,640
this substring it is impossible

1106
00:44:33,119 --> 00:44:39,440
okay so we

1107
00:44:34,640 --> 00:44:41,440
also know this extra information here

1108
00:44:39,440 --> 00:44:43,839
why would i call it extra information

1109
00:44:41,440 --> 00:44:45,760
because all we want to know if this

1110
00:44:43,839 --> 00:44:48,319
given string is a member of this

1111
00:44:45,760 --> 00:44:50,240
language or not right that's the goal

1112
00:44:48,319 --> 00:44:51,760
but

1113
00:44:50,240 --> 00:44:53,920
uh

1114
00:44:51,760 --> 00:44:55,280
during the procedure

1115
00:44:53,920 --> 00:44:57,359
of the

1116
00:44:55,280 --> 00:44:59,359
of uh

1117
00:44:57,359 --> 00:45:01,920
of knowing that

1118
00:44:59,359 --> 00:45:05,440
knowing the answer we know that many

1119
00:45:01,920 --> 00:45:07,599
additional information can be obtained

1120
00:45:05,440 --> 00:45:10,640
then

1121
00:45:07,599 --> 00:45:13,680
for the second box for the last box of

1122
00:45:10,640 --> 00:45:15,920
row 4 we want to know if

1123
00:45:13,680 --> 00:45:18,560
from any variable it

1124
00:45:15,920 --> 00:45:20,720
is it possible to generate b

1125
00:45:18,560 --> 00:45:24,480
or a a b a

1126
00:45:20,720 --> 00:45:27,520
so again we have uh three plus uh one

1127
00:45:24,480 --> 00:45:30,640
plus three two plus two and the three

1128
00:45:27,520 --> 00:45:33,839
plus one three possibilities

1129
00:45:30,640 --> 00:45:35,920
so let's say

1130
00:45:33,839 --> 00:45:37,599
uh first possibility

1131
00:45:35,920 --> 00:45:41,040
one plus

1132
00:45:37,599 --> 00:45:42,720
three so what is one here one here is

1133
00:45:41,040 --> 00:45:44,839
this box right

1134
00:45:42,720 --> 00:45:47,839
and the three is

1135
00:45:44,839 --> 00:45:50,800
here so we want to check if there is any

1136
00:45:47,839 --> 00:45:54,240
variable of the given grammar

1137
00:45:50,800 --> 00:45:56,000
i have a b

1138
00:45:54,240 --> 00:45:57,280
c b

1139
00:45:56,000 --> 00:46:02,400
right

1140
00:45:57,280 --> 00:46:05,520
so a b actually we have that's s and c

1141
00:46:02,400 --> 00:46:09,280
right a b but no c b here so we can

1142
00:46:05,520 --> 00:46:11,200
write s and c here

1143
00:46:09,280 --> 00:46:13,680
so

1144
00:46:11,200 --> 00:46:15,680
for 2 plus 2

1145
00:46:13,680 --> 00:46:17,520
two the first two is

1146
00:46:15,680 --> 00:46:21,040
here

1147
00:46:17,520 --> 00:46:24,400
the second two is here right because

1148
00:46:21,040 --> 00:46:27,359
this one generates this string and this

1149
00:46:24,400 --> 00:46:28,720
one generates this string

1150
00:46:27,359 --> 00:46:29,839
okay

1151
00:46:28,720 --> 00:46:32,079
so

1152
00:46:29,839 --> 00:46:33,760
we have bs

1153
00:46:32,079 --> 00:46:35,680
b i'm sorry

1154
00:46:33,760 --> 00:46:37,520
bs

1155
00:46:35,680 --> 00:46:38,560
b a

1156
00:46:37,520 --> 00:46:40,640
like this

1157
00:46:38,560 --> 00:46:42,880
but b is no need to check because no

1158
00:46:40,640 --> 00:46:47,280
star variable on the right hand side and

1159
00:46:42,880 --> 00:46:49,119
the ba yes we have ba here so we have a

1160
00:46:47,280 --> 00:46:52,240
here

1161
00:46:49,119 --> 00:46:53,440
okay and finally three plus one three

1162
00:46:52,240 --> 00:46:56,800
plus one

1163
00:46:53,440 --> 00:46:59,119
so what is three here 3 here is

1164
00:46:56,800 --> 00:47:01,280
this one

1165
00:46:59,119 --> 00:47:03,359
and the one here is

1166
00:47:01,280 --> 00:47:04,880
this one okay

1167
00:47:03,359 --> 00:47:06,880
so that would be

1168
00:47:04,880 --> 00:47:07,680
b a

1169
00:47:06,880 --> 00:47:09,520
b

1170
00:47:07,680 --> 00:47:12,240
c

1171
00:47:09,520 --> 00:47:14,079
and actually we have ba and the bc which

1172
00:47:12,240 --> 00:47:17,359
is a for ba

1173
00:47:14,079 --> 00:47:19,680
and s for bc so again

1174
00:47:17,359 --> 00:47:22,640
a and s

1175
00:47:19,680 --> 00:47:25,280
since there is duplicate there's no no

1176
00:47:22,640 --> 00:47:27,040
point to add them but if you want to if

1177
00:47:25,280 --> 00:47:29,200
you want to check all possible

1178
00:47:27,040 --> 00:47:32,240
derivations you can have a

1179
00:47:29,200 --> 00:47:33,440
have some information written in the box

1180
00:47:32,240 --> 00:47:36,079
to know that

1181
00:47:33,440 --> 00:47:37,040
see that's very uh that's interesting

1182
00:47:36,079 --> 00:47:41,040
that

1183
00:47:37,040 --> 00:47:41,040
from a you can go

1184
00:47:41,200 --> 00:47:44,079
ba

1185
00:47:42,640 --> 00:47:47,200
right

1186
00:47:44,079 --> 00:47:50,640
and then from b a you actually have two

1187
00:47:47,200 --> 00:47:54,160
possibilities to generate the final

1188
00:47:50,640 --> 00:47:55,440
terminal string a a b a

1189
00:47:54,160 --> 00:47:58,400
right

1190
00:47:55,440 --> 00:48:00,559
for this ba you have two plus two style

1191
00:47:58,400 --> 00:48:02,000
for this ba you have three plus one

1192
00:48:00,559 --> 00:48:04,400
style

1193
00:48:02,000 --> 00:48:08,880
right so that's interesting and we won't

1194
00:48:04,400 --> 00:48:11,040
go that any further and we stop here so

1195
00:48:08,880 --> 00:48:11,920
we have

1196
00:48:11,040 --> 00:48:12,880
s

1197
00:48:11,920 --> 00:48:16,800
a

1198
00:48:12,880 --> 00:48:17,839
c on the row four

1199
00:48:16,800 --> 00:48:20,880
okay

1200
00:48:17,839 --> 00:48:24,240
so finally we want to have

1201
00:48:20,880 --> 00:48:25,440
row 5 here and we have and what is this

1202
00:48:24,240 --> 00:48:28,559
box do

1203
00:48:25,440 --> 00:48:28,559
we want to have

1204
00:48:28,800 --> 00:48:33,119
we want to put

1205
00:48:30,640 --> 00:48:35,040
the variable in the given grammar that

1206
00:48:33,119 --> 00:48:38,000
can generate

1207
00:48:35,040 --> 00:48:40,000
exactly this given

1208
00:48:38,000 --> 00:48:42,240
terminal strings

1209
00:48:40,000 --> 00:48:45,040
okay

1210
00:48:42,240 --> 00:48:48,880
then since one variable may become two

1211
00:48:45,040 --> 00:48:51,599
variables we want to check we want to

1212
00:48:48,880 --> 00:48:51,599
check uh

1213
00:48:54,880 --> 00:48:57,680
one plus four

1214
00:48:58,160 --> 00:49:04,000
two plus three

1215
00:49:01,040 --> 00:49:06,240
what should i say two plus three and

1216
00:49:04,000 --> 00:49:08,079
three plus two and

1217
00:49:06,240 --> 00:49:10,079
one plus

1218
00:49:08,079 --> 00:49:13,079
uh sorry four plus one four

1219
00:49:10,079 --> 00:49:13,079
possibilities

1220
00:49:16,480 --> 00:49:22,640
because one variable

1221
00:49:19,680 --> 00:49:25,920
is responsible for generate this part

1222
00:49:22,640 --> 00:49:28,319
and the second this part or other

1223
00:49:25,920 --> 00:49:30,880
similar like this part and this part

1224
00:49:28,319 --> 00:49:34,240
something like this okay

1225
00:49:30,880 --> 00:49:37,760
so first possibility one plus four

1226
00:49:34,240 --> 00:49:40,240
so one plus or one plus four what is one

1227
00:49:37,760 --> 00:49:44,480
one here right

1228
00:49:40,240 --> 00:49:49,200
and four here one plus four that means

1229
00:49:44,480 --> 00:49:51,440
if it works then b here generates 1

1230
00:49:49,200 --> 00:49:54,400
and the variable

1231
00:49:51,440 --> 00:49:58,720
here generates a a

1232
00:49:54,400 --> 00:50:00,319
b a that's i y i called 1 plus 4.

1233
00:49:58,720 --> 00:50:03,599
so

1234
00:50:00,319 --> 00:50:05,599
what variable pairs we have we will have

1235
00:50:03,599 --> 00:50:07,520
bs

1236
00:50:05,599 --> 00:50:11,040
ba

1237
00:50:07,520 --> 00:50:14,000
bc in this case right three pairs

1238
00:50:11,040 --> 00:50:17,359
and there's no bs

1239
00:50:14,000 --> 00:50:17,359
yeah no bs okay

1240
00:50:17,440 --> 00:50:23,200
because uh star variable will not be on

1241
00:50:20,000 --> 00:50:24,480
the right hand side so we check ba and

1242
00:50:23,200 --> 00:50:28,480
bc

1243
00:50:24,480 --> 00:50:31,200
and the ba a may become b8 okay great

1244
00:50:28,480 --> 00:50:32,079
and s may become bc

1245
00:50:31,200 --> 00:50:33,440
so

1246
00:50:32,079 --> 00:50:36,079
we have

1247
00:50:33,440 --> 00:50:38,839
s and a written here

1248
00:50:36,079 --> 00:50:40,400
okay or i put it into the

1249
00:50:38,839 --> 00:50:42,800
box

1250
00:50:40,400 --> 00:50:44,240
s and a

1251
00:50:42,800 --> 00:50:45,200
here

1252
00:50:44,240 --> 00:50:48,000
good

1253
00:50:45,200 --> 00:50:50,160
then two plus two what is two

1254
00:50:48,000 --> 00:50:52,000
two plus two in this case is

1255
00:50:50,160 --> 00:50:55,280
the this one is two

1256
00:50:52,000 --> 00:50:58,319
oh sorry two plus three sorry and two

1257
00:50:55,280 --> 00:51:00,640
two plus three here is two

1258
00:50:58,319 --> 00:51:03,359
is this box

1259
00:51:00,640 --> 00:51:05,200
and three is this box right

1260
00:51:03,359 --> 00:51:08,240
because this box

1261
00:51:05,200 --> 00:51:10,960
is responsible for generating ba and the

1262
00:51:08,240 --> 00:51:12,720
list box is responsible for generating

1263
00:51:10,960 --> 00:51:16,480
aba

1264
00:51:12,720 --> 00:51:18,880
okay so what pairs uh if if there is any

1265
00:51:16,480 --> 00:51:21,599
variable

1266
00:51:18,880 --> 00:51:21,599
generating

1267
00:51:21,839 --> 00:51:24,079
sb

1268
00:51:23,119 --> 00:51:25,200
or

1269
00:51:24,079 --> 00:51:27,920
ab

1270
00:51:25,200 --> 00:51:30,480
then we can go on to have

1271
00:51:27,920 --> 00:51:31,760
terminal string ba and the termination

1272
00:51:30,480 --> 00:51:33,680
aba

1273
00:51:31,760 --> 00:51:35,359
okay

1274
00:51:33,680 --> 00:51:38,559
so sb

1275
00:51:35,359 --> 00:51:41,280
no because knows s here

1276
00:51:38,559 --> 00:51:44,720
on the right hand side and then a b

1277
00:51:41,280 --> 00:51:46,960
yes we have c may become a b so we

1278
00:51:44,720 --> 00:51:47,920
will put c here

1279
00:51:46,960 --> 00:51:50,720
okay

1280
00:51:47,920 --> 00:51:52,880
so that's for two plus 2.

1281
00:51:50,720 --> 00:51:54,960
see

1282
00:51:52,880 --> 00:51:58,559
2 plus 2 means

1283
00:51:54,960 --> 00:51:59,760
c can derive a b right according to this

1284
00:51:58,559 --> 00:52:01,760
rule

1285
00:51:59,760 --> 00:52:03,680
then a

1286
00:52:01,760 --> 00:52:06,160
here

1287
00:52:03,680 --> 00:52:07,119
not two plus two sorry two plus three a

1288
00:52:06,160 --> 00:52:10,559
here

1289
00:52:07,119 --> 00:52:14,319
may eventually derives

1290
00:52:10,559 --> 00:52:16,000
b a and the b here may eventually derive

1291
00:52:14,319 --> 00:52:18,400
a b a

1292
00:52:16,000 --> 00:52:19,359
so two plus three that's our terminal

1293
00:52:18,400 --> 00:52:21,599
strings

1294
00:52:19,359 --> 00:52:21,599
okay

1295
00:52:22,079 --> 00:52:24,400
then

1296
00:52:25,040 --> 00:52:27,440
the

1297
00:52:26,480 --> 00:52:29,280
third

1298
00:52:27,440 --> 00:52:33,680
third possibility is

1299
00:52:29,280 --> 00:52:34,960
3 plus 2. so what is 3 3 in this case is

1300
00:52:33,680 --> 00:52:37,760
this one

1301
00:52:34,960 --> 00:52:39,599
and the 2 will be this one

1302
00:52:37,760 --> 00:52:41,280
2 plus 3

1303
00:52:39,599 --> 00:52:44,720
2 this one

1304
00:52:41,280 --> 00:52:47,520
right 2 plus 3.

1305
00:52:44,720 --> 00:52:49,599
since there is no variable

1306
00:52:47,520 --> 00:52:50,559
able to generate

1307
00:52:49,599 --> 00:52:53,760
b

1308
00:52:50,559 --> 00:52:56,000
a a in this grammar

1309
00:52:53,760 --> 00:52:57,680
there is no variable

1310
00:52:56,000 --> 00:52:58,839
pair generated

1311
00:52:57,680 --> 00:53:03,119
we can

1312
00:52:58,839 --> 00:53:05,599
discover and the same thing goes to

1313
00:53:03,119 --> 00:53:06,400
4 plus 1

1314
00:53:05,599 --> 00:53:07,359
right

1315
00:53:06,400 --> 00:53:08,880
because

1316
00:53:07,359 --> 00:53:11,520
in this grammar

1317
00:53:08,880 --> 00:53:13,440
there is no variable at all

1318
00:53:11,520 --> 00:53:15,599
no variable at all

1319
00:53:13,440 --> 00:53:18,000
able to generate b

1320
00:53:15,599 --> 00:53:21,119
a a b

1321
00:53:18,000 --> 00:53:23,920
so we won't have

1322
00:53:21,119 --> 00:53:26,160
any variable being to generate some

1323
00:53:23,920 --> 00:53:28,559
variable and another variable then

1324
00:53:26,160 --> 00:53:30,240
generate the whole terminal string

1325
00:53:28,559 --> 00:53:33,119
that's impossible

1326
00:53:30,240 --> 00:53:35,599
so we don't have

1327
00:53:33,119 --> 00:53:38,880
variables generated by

1328
00:53:35,599 --> 00:53:43,599
three plus two and the four plus one

1329
00:53:38,880 --> 00:53:44,960
okay so finally we will have

1330
00:53:43,599 --> 00:53:46,319
s

1331
00:53:44,960 --> 00:53:48,480
a

1332
00:53:46,319 --> 00:53:48,480
c

1333
00:53:49,440 --> 00:53:54,960
on row five the final row we uh we want

1334
00:53:52,720 --> 00:53:57,280
to construct the final box we want to

1335
00:53:54,960 --> 00:53:58,880
construct it okay

1336
00:53:57,280 --> 00:54:02,160
okay so

1337
00:53:58,880 --> 00:54:05,839
we finally can have our answer that's if

1338
00:54:02,160 --> 00:54:09,040
this given terminal string b a a b a

1339
00:54:05,839 --> 00:54:10,720
belongs to uh does this terminal string

1340
00:54:09,040 --> 00:54:12,400
belong to

1341
00:54:10,720 --> 00:54:14,240
l of g

1342
00:54:12,400 --> 00:54:17,359
or not

1343
00:54:14,240 --> 00:54:18,800
then that's going back to our derivation

1344
00:54:17,359 --> 00:54:22,319
definition

1345
00:54:18,800 --> 00:54:25,200
what what what is l of g

1346
00:54:22,319 --> 00:54:29,440
what is the the definition

1347
00:54:25,200 --> 00:54:31,920
l of g is defined as all

1348
00:54:29,440 --> 00:54:31,920
strings

1349
00:54:32,480 --> 00:54:37,800
which

1350
00:54:34,319 --> 00:54:37,800
which is

1351
00:54:38,079 --> 00:54:43,359
from the derivation start from the start

1352
00:54:40,319 --> 00:54:43,359
variable right

1353
00:54:45,200 --> 00:54:48,480
that's what we

1354
00:54:46,640 --> 00:54:52,319
have for the definition

1355
00:54:48,480 --> 00:54:54,640
then remember that from start variable

1356
00:54:52,319 --> 00:54:56,000
so we want to check if the start

1357
00:54:54,640 --> 00:54:57,599
variable

1358
00:54:56,000 --> 00:55:00,160
in this

1359
00:54:57,599 --> 00:55:01,839
box or not okay

1360
00:55:00,160 --> 00:55:03,119
a or c

1361
00:55:01,839 --> 00:55:03,839
don't matter

1362
00:55:03,119 --> 00:55:06,880
but

1363
00:55:03,839 --> 00:55:09,119
we just need to check if s

1364
00:55:06,880 --> 00:55:10,960
if the star variable in

1365
00:55:09,119 --> 00:55:14,640
this box or not

1366
00:55:10,960 --> 00:55:15,599
okay so in this case yes

1367
00:55:14,640 --> 00:55:18,079
right

1368
00:55:15,599 --> 00:55:21,559
then you know that

1369
00:55:18,079 --> 00:55:21,559
from s

1370
00:55:22,400 --> 00:55:28,799
you can have a derivation to derive

1371
00:55:25,920 --> 00:55:31,440
b a a b a

1372
00:55:28,799 --> 00:55:33,920
okay we actually need to

1373
00:55:31,440 --> 00:55:36,880
keep some information during the process

1374
00:55:33,920 --> 00:55:39,040
so we can make it easier but we can

1375
00:55:36,880 --> 00:55:43,359
still try to uh

1376
00:55:39,040 --> 00:55:46,839
derive it like s may become uh sorry s

1377
00:55:43,359 --> 00:55:51,040
derives and we know that it must be like

1378
00:55:46,839 --> 00:55:53,680
uh one plus four right or

1379
00:55:51,040 --> 00:55:55,280
two uh two plus three it should be one

1380
00:55:53,680 --> 00:55:57,599
plus four right

1381
00:55:55,280 --> 00:56:00,319
so let's say s

1382
00:55:57,599 --> 00:56:04,799
derives bc

1383
00:56:00,319 --> 00:56:05,760
so we want it to be like b

1384
00:56:04,799 --> 00:56:07,680
and

1385
00:56:05,760 --> 00:56:10,720
c here right

1386
00:56:07,680 --> 00:56:13,680
then let's make the first b

1387
00:56:10,720 --> 00:56:13,680
derives here

1388
00:56:13,760 --> 00:56:18,240
then i actually forgot uh where

1389
00:56:17,040 --> 00:56:20,480
b goes

1390
00:56:18,240 --> 00:56:22,400
right where

1391
00:56:20,480 --> 00:56:25,599
c can become

1392
00:56:22,400 --> 00:56:27,520
a b so i guess that will be

1393
00:56:25,599 --> 00:56:31,680
a and b right

1394
00:56:27,520 --> 00:56:32,720
so let's make it a b

1395
00:56:31,680 --> 00:56:34,880
then

1396
00:56:32,720 --> 00:56:36,319
the a

1397
00:56:34,880 --> 00:56:40,400
becomes

1398
00:56:36,319 --> 00:56:41,839
is one and the b is responsible for aba

1399
00:56:40,400 --> 00:56:43,520
right

1400
00:56:41,839 --> 00:56:46,160
then

1401
00:56:43,520 --> 00:56:46,799
we have derivation

1402
00:56:46,160 --> 00:56:49,040
b

1403
00:56:46,799 --> 00:56:49,040
a

1404
00:56:49,839 --> 00:56:52,319
and the b

1405
00:56:54,079 --> 00:56:56,720
becomes

1406
00:56:55,599 --> 00:56:58,480
this c

1407
00:56:56,720 --> 00:56:59,599
and this c

1408
00:56:58,480 --> 00:57:02,319
okay

1409
00:56:59,599 --> 00:57:03,599
so c c

1410
00:57:02,319 --> 00:57:05,200
and

1411
00:57:03,599 --> 00:57:06,799
the first c

1412
00:57:05,200 --> 00:57:07,520
becomes

1413
00:57:06,799 --> 00:57:09,599
a

1414
00:57:07,520 --> 00:57:12,559
b

1415
00:57:09,599 --> 00:57:15,440
so we have b a

1416
00:57:12,559 --> 00:57:17,359
then a become a

1417
00:57:15,440 --> 00:57:22,240
and then

1418
00:57:17,359 --> 00:57:25,680
b become b c become a okay we uh we

1419
00:57:22,240 --> 00:57:28,000
succeeded in the life deriving

1420
00:57:25,680 --> 00:57:30,480
from the star variable to the given

1421
00:57:28,000 --> 00:57:31,280
terminal string like this okay

1422
00:57:30,480 --> 00:57:35,359
so

1423
00:57:31,280 --> 00:57:37,599
if we can we we leave some information

1424
00:57:35,359 --> 00:57:41,040
during the construction it makes it

1425
00:57:37,599 --> 00:57:43,440
easier but we can anyway we know that

1426
00:57:41,040 --> 00:57:45,839
there is a path reversed so the

1427
00:57:43,440 --> 00:57:48,720
derivation can be obtained from the

1428
00:57:45,839 --> 00:57:51,359
start variable to the given terminal

1429
00:57:48,720 --> 00:57:52,799
string that means that given terminal

1430
00:57:51,359 --> 00:57:56,000
string

1431
00:57:52,799 --> 00:57:57,920
is a member of the language generated by

1432
00:57:56,000 --> 00:58:01,040
the given grammar

1433
00:57:57,920 --> 00:58:03,680
okay so that's the cyk algorithm

1434
00:58:01,040 --> 00:58:04,640
then let's say

1435
00:58:03,680 --> 00:58:07,040
if

1436
00:58:04,640 --> 00:58:10,400
you don't have s

1437
00:58:07,040 --> 00:58:11,599
you don't have s if you don't have s in

1438
00:58:10,400 --> 00:58:12,880
this box

1439
00:58:11,599 --> 00:58:15,839
that means

1440
00:58:12,880 --> 00:58:19,920
the terminal string is not

1441
00:58:15,839 --> 00:58:21,280
is not a member of the language

1442
00:58:19,920 --> 00:58:24,240
okay

1443
00:58:21,280 --> 00:58:26,079
but you say oh a is in the box and the c

1444
00:58:24,240 --> 00:58:27,680
is in the box yes

1445
00:58:26,079 --> 00:58:30,319
that only means

1446
00:58:27,680 --> 00:58:31,359
from the variable a

1447
00:58:30,319 --> 00:58:32,640
or c

1448
00:58:31,359 --> 00:58:34,079
in the grammar

1449
00:58:32,640 --> 00:58:37,599
you can

1450
00:58:34,079 --> 00:58:40,720
actually derive to derive

1451
00:58:37,599 --> 00:58:41,760
b-a-a-b-a that's that's no problem

1452
00:58:40,720 --> 00:58:44,559
but

1453
00:58:41,760 --> 00:58:46,079
in order to consider a string a member

1454
00:58:44,559 --> 00:58:49,680
of the language

1455
00:58:46,079 --> 00:58:52,240
it must be from the star variable so

1456
00:58:49,680 --> 00:58:53,280
even we have some variable

1457
00:58:52,240 --> 00:58:54,480
in

1458
00:58:53,280 --> 00:58:55,760
let's say

1459
00:58:54,480 --> 00:58:57,760
box

1460
00:58:55,760 --> 00:59:00,160
x15

1461
00:58:57,760 --> 00:59:01,599
that doesn't mean that variable is a

1462
00:59:00,160 --> 00:59:06,559
member string

1463
00:59:01,599 --> 00:59:06,559
only as only the start variable

1464
00:59:07,599 --> 00:59:12,559
in that box

1465
00:59:09,200 --> 00:59:14,160
indicates the given terminal string is

1466
00:59:12,559 --> 00:59:16,400
in the language

1467
00:59:14,160 --> 00:59:17,760
okay that's the first note

1468
00:59:16,400 --> 00:59:19,839
then

1469
00:59:17,760 --> 00:59:23,119
also note that

1470
00:59:19,839 --> 00:59:26,799
after constructing the whole table

1471
00:59:23,119 --> 00:59:30,960
you basically know about all

1472
00:59:26,799 --> 00:59:32,480
substrings of the given terminal string

1473
00:59:30,960 --> 00:59:33,839
why because

1474
00:59:32,480 --> 00:59:39,760
not only

1475
00:59:33,839 --> 00:59:42,000
we now know that not only baaba is in

1476
00:59:39,760 --> 00:59:42,880
the language

1477
00:59:42,000 --> 00:59:45,760
but

1478
00:59:42,880 --> 00:59:47,920
what other substring of dependent string

1479
00:59:45,760 --> 00:59:49,839
c as here right

1480
00:59:47,920 --> 00:59:53,599
so we know ba

1481
00:59:49,839 --> 00:59:53,599
is also in the language

1482
00:59:54,079 --> 00:59:58,400
but b is not

1483
00:59:55,839 --> 00:59:59,440
a string only b is not right

1484
00:59:58,400 --> 01:00:03,200
and

1485
00:59:59,440 --> 01:00:05,440
cs here so we also know that

1486
01:00:03,200 --> 01:00:06,319
a a b a

1487
01:00:05,440 --> 01:00:08,400
is

1488
01:00:06,319 --> 01:00:09,680
in the language let's say

1489
01:00:08,400 --> 01:00:12,880
not only

1490
01:00:09,680 --> 01:00:16,559
b a b a we know that b a is in a

1491
01:00:12,880 --> 01:00:18,319
language in the language and we also

1492
01:00:16,559 --> 01:00:19,040
know that a

1493
01:00:18,319 --> 01:00:20,480
a

1494
01:00:19,040 --> 01:00:22,240
b a

1495
01:00:20,480 --> 01:00:23,200
in the same language

1496
01:00:22,240 --> 01:00:25,440
right

1497
01:00:23,200 --> 01:00:27,040
and see here

1498
01:00:25,440 --> 01:00:29,599
that would be

1499
01:00:27,040 --> 01:00:32,480
a b

1500
01:00:29,599 --> 01:00:35,040
and as here that will be

1501
01:00:32,480 --> 01:00:36,720
b a

1502
01:00:35,040 --> 01:00:40,240
in the language

1503
01:00:36,720 --> 01:00:42,880
okay i guess that's probably all of them

1504
01:00:40,240 --> 01:00:45,839
right so we will know that

1505
01:00:42,880 --> 01:00:47,760
all the substring the membership o of

1506
01:00:45,839 --> 01:00:49,839
all the substring of the terminal string

1507
01:00:47,760 --> 01:00:51,280
of the given terminal string to test the

1508
01:00:49,839 --> 01:00:54,079
membership

1509
01:00:51,280 --> 01:00:55,760
and all others are not in the language

1510
01:00:54,079 --> 01:00:58,160
right for example

1511
01:00:55,760 --> 01:01:01,440
you see b here

1512
01:00:58,160 --> 01:01:03,200
that that's uh this box this box

1513
01:01:01,440 --> 01:01:04,799
corresponds to

1514
01:01:03,200 --> 01:01:08,000
aab

1515
01:01:04,799 --> 01:01:11,200
then we know that a a b

1516
01:01:08,000 --> 01:01:13,760
is not in that language

1517
01:01:11,200 --> 01:01:17,280
right because no

1518
01:01:13,760 --> 01:01:19,280
no variable no not no the star variable

1519
01:01:17,280 --> 01:01:20,400
cannot derive that string

1520
01:01:19,280 --> 01:01:23,119
and

1521
01:01:20,400 --> 01:01:25,440
of course something like this one

1522
01:01:23,119 --> 01:01:29,040
b a a b

1523
01:01:25,440 --> 01:01:29,040
b a a b

1524
01:01:30,880 --> 01:01:35,760
is not in the language because

1525
01:01:33,440 --> 01:01:36,960
absolutely no variable can derive this

1526
01:01:35,760 --> 01:01:39,920
substring

1527
01:01:36,960 --> 01:01:42,480
so the same goes to for example this

1528
01:01:39,920 --> 01:01:44,240
this one so that will be

1529
01:01:42,480 --> 01:01:45,359
a b a

1530
01:01:44,240 --> 01:01:47,599
aba

1531
01:01:45,359 --> 01:01:49,200
not in the language

1532
01:01:47,599 --> 01:01:53,200
okay

1533
01:01:49,200 --> 01:01:55,039
so constructing such a table we know

1534
01:01:53,200 --> 01:01:57,359
much more than

1535
01:01:55,039 --> 01:01:59,599
if the given terminal string

1536
01:01:57,359 --> 01:02:00,640
in is in the language or not we also

1537
01:01:59,599 --> 01:02:03,039
know

1538
01:02:00,640 --> 01:02:05,839
we also can know a lot of

1539
01:02:03,039 --> 01:02:07,280
extra information regarding the terminal

1540
01:02:05,839 --> 01:02:10,000
string okay

1541
01:02:07,280 --> 01:02:12,640
and we also know which variable can

1542
01:02:10,000 --> 01:02:14,480
generate the substring of the terminal

1543
01:02:12,640 --> 01:02:19,599
string

1544
01:02:14,480 --> 01:02:22,960
okay so a cyk algorithm can efficiently

1545
01:02:19,599 --> 01:02:25,440
test the membership in

1546
01:02:22,960 --> 01:02:26,720
instead of you know try all possible

1547
01:02:25,440 --> 01:02:28,960
durations

1548
01:02:26,720 --> 01:02:30,240
we can just do the

1549
01:02:28,960 --> 01:02:34,079
button up

1550
01:02:30,240 --> 01:02:36,559
do the test in the style of button up

1551
01:02:34,079 --> 01:02:38,400
patient and very efficient

1552
01:02:36,559 --> 01:02:41,200
compared to trying all possible

1553
01:02:38,400 --> 01:02:43,920
derivations that would be a breakfast

1554
01:02:41,200 --> 01:02:46,400
search right that's not efficient in

1555
01:02:43,920 --> 01:02:46,400
this case

1556
01:02:47,200 --> 01:02:52,880
okay so

1557
01:02:48,799 --> 01:02:56,640
uh that will be all for chapter two

1558
01:02:52,880 --> 01:03:01,039
and uh also that will be all for

1559
01:02:56,640 --> 01:03:04,000
uh the content of chapters one and two

1560
01:03:01,039 --> 01:03:08,000
which is the

1561
01:03:04,000 --> 01:03:11,640
which is the scope of our first

1562
01:03:08,000 --> 01:03:11,640
return examination

